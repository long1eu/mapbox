// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: layers_operations.proto

package com.tophap.mapbox_gl.proto;

public final class LayersOperations {
  private LayersOperations() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OperationsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations}
   */
  public  static final class Operations extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations)
      OperationsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Operations.newBuilder() to construct.
    private Operations(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Operations() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Operations(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tophap.mapbox_gl.proto.LayersOperations.Operations.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Builder.class);
    }

    public interface AddOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Add)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
       */
      boolean hasLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
       */
      com.tophap.mapbox_gl.proto.Layers.Layer getLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
       */
      com.tophap.mapbox_gl.proto.Layers.LayerOrBuilder getLayerOrBuilder();

      /**
       * <code>string below_id = 2;</code>
       */
      java.lang.String getBelowId();
      /**
       * <code>string below_id = 2;</code>
       */
      com.google.protobuf.ByteString
          getBelowIdBytes();

      /**
       * <code>string above_id = 3;</code>
       */
      java.lang.String getAboveId();
      /**
       * <code>string above_id = 3;</code>
       */
      com.google.protobuf.ByteString
          getAboveIdBytes();

      /**
       * <code>int32 index = 4;</code>
       */
      int getIndex();

      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add.PositionCase getPositionCase();
    }
    /**
     * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Add}
     */
    public  static final class Add extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Add)
        AddOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Add.newBuilder() to construct.
      private Add(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Add() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Add(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.tophap.mapbox_gl.proto.Layers.Layer.Builder subBuilder = null;
                if (layer_ != null) {
                  subBuilder = layer_.toBuilder();
                }
                layer_ = input.readMessage(com.tophap.mapbox_gl.proto.Layers.Layer.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(layer_);
                  layer_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();
                positionCase_ = 2;
                position_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                positionCase_ = 3;
                position_ = s;
                break;
              }
              case 32: {
                positionCase_ = 4;
                position_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Add_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Add_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add.Builder.class);
      }

      private int positionCase_ = 0;
      private java.lang.Object position_;
      public enum PositionCase
          implements com.google.protobuf.Internal.EnumLite {
        BELOW_ID(2),
        ABOVE_ID(3),
        INDEX(4),
        POSITION_NOT_SET(0);
        private final int value;
        private PositionCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static PositionCase valueOf(int value) {
          return forNumber(value);
        }

        public static PositionCase forNumber(int value) {
          switch (value) {
            case 2: return BELOW_ID;
            case 3: return ABOVE_ID;
            case 4: return INDEX;
            case 0: return POSITION_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public PositionCase
      getPositionCase() {
        return PositionCase.forNumber(
            positionCase_);
      }

      public static final int LAYER_FIELD_NUMBER = 1;
      private com.tophap.mapbox_gl.proto.Layers.Layer layer_;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
       */
      public boolean hasLayer() {
        return layer_ != null;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
       */
      public com.tophap.mapbox_gl.proto.Layers.Layer getLayer() {
        return layer_ == null ? com.tophap.mapbox_gl.proto.Layers.Layer.getDefaultInstance() : layer_;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
       */
      public com.tophap.mapbox_gl.proto.Layers.LayerOrBuilder getLayerOrBuilder() {
        return getLayer();
      }

      public static final int BELOW_ID_FIELD_NUMBER = 2;
      /**
       * <code>string below_id = 2;</code>
       */
      public java.lang.String getBelowId() {
        java.lang.Object ref = "";
        if (positionCase_ == 2) {
          ref = position_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (positionCase_ == 2) {
            position_ = s;
          }
          return s;
        }
      }
      /**
       * <code>string below_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBelowIdBytes() {
        java.lang.Object ref = "";
        if (positionCase_ == 2) {
          ref = position_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (positionCase_ == 2) {
            position_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ABOVE_ID_FIELD_NUMBER = 3;
      /**
       * <code>string above_id = 3;</code>
       */
      public java.lang.String getAboveId() {
        java.lang.Object ref = "";
        if (positionCase_ == 3) {
          ref = position_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (positionCase_ == 3) {
            position_ = s;
          }
          return s;
        }
      }
      /**
       * <code>string above_id = 3;</code>
       */
      public com.google.protobuf.ByteString
          getAboveIdBytes() {
        java.lang.Object ref = "";
        if (positionCase_ == 3) {
          ref = position_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (positionCase_ == 3) {
            position_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int INDEX_FIELD_NUMBER = 4;
      /**
       * <code>int32 index = 4;</code>
       */
      public int getIndex() {
        if (positionCase_ == 4) {
          return (java.lang.Integer) position_;
        }
        return 0;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (layer_ != null) {
          output.writeMessage(1, getLayer());
        }
        if (positionCase_ == 2) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, position_);
        }
        if (positionCase_ == 3) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, position_);
        }
        if (positionCase_ == 4) {
          output.writeInt32(
              4, (int)((java.lang.Integer) position_));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (layer_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getLayer());
        }
        if (positionCase_ == 2) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, position_);
        }
        if (positionCase_ == 3) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, position_);
        }
        if (positionCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(
                4, (int)((java.lang.Integer) position_));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add)) {
          return super.equals(obj);
        }
        com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add) obj;

        if (hasLayer() != other.hasLayer()) return false;
        if (hasLayer()) {
          if (!getLayer()
              .equals(other.getLayer())) return false;
        }
        if (!getPositionCase().equals(other.getPositionCase())) return false;
        switch (positionCase_) {
          case 2:
            if (!getBelowId()
                .equals(other.getBelowId())) return false;
            break;
          case 3:
            if (!getAboveId()
                .equals(other.getAboveId())) return false;
            break;
          case 4:
            if (getIndex()
                != other.getIndex()) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasLayer()) {
          hash = (37 * hash) + LAYER_FIELD_NUMBER;
          hash = (53 * hash) + getLayer().hashCode();
        }
        switch (positionCase_) {
          case 2:
            hash = (37 * hash) + BELOW_ID_FIELD_NUMBER;
            hash = (53 * hash) + getBelowId().hashCode();
            break;
          case 3:
            hash = (37 * hash) + ABOVE_ID_FIELD_NUMBER;
            hash = (53 * hash) + getAboveId().hashCode();
            break;
          case 4:
            hash = (37 * hash) + INDEX_FIELD_NUMBER;
            hash = (53 * hash) + getIndex();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Add}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Add)
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.AddOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Add_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Add_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add.Builder.class);
        }

        // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (layerBuilder_ == null) {
            layer_ = null;
          } else {
            layer_ = null;
            layerBuilder_ = null;
          }
          positionCase_ = 0;
          position_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Add_descriptor;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add getDefaultInstanceForType() {
          return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add.getDefaultInstance();
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add build() {
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add buildPartial() {
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add(this);
          if (layerBuilder_ == null) {
            result.layer_ = layer_;
          } else {
            result.layer_ = layerBuilder_.build();
          }
          if (positionCase_ == 2) {
            result.position_ = position_;
          }
          if (positionCase_ == 3) {
            result.position_ = position_;
          }
          if (positionCase_ == 4) {
            result.position_ = position_;
          }
          result.positionCase_ = positionCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add) {
            return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add other) {
          if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add.getDefaultInstance()) return this;
          if (other.hasLayer()) {
            mergeLayer(other.getLayer());
          }
          switch (other.getPositionCase()) {
            case BELOW_ID: {
              positionCase_ = 2;
              position_ = other.position_;
              onChanged();
              break;
            }
            case ABOVE_ID: {
              positionCase_ = 3;
              position_ = other.position_;
              onChanged();
              break;
            }
            case INDEX: {
              setIndex(other.getIndex());
              break;
            }
            case POSITION_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int positionCase_ = 0;
        private java.lang.Object position_;
        public PositionCase
            getPositionCase() {
          return PositionCase.forNumber(
              positionCase_);
        }

        public Builder clearPosition() {
          positionCase_ = 0;
          position_ = null;
          onChanged();
          return this;
        }


        private com.tophap.mapbox_gl.proto.Layers.Layer layer_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.Layers.Layer, com.tophap.mapbox_gl.proto.Layers.Layer.Builder, com.tophap.mapbox_gl.proto.Layers.LayerOrBuilder> layerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        public boolean hasLayer() {
          return layerBuilder_ != null || layer_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer getLayer() {
          if (layerBuilder_ == null) {
            return layer_ == null ? com.tophap.mapbox_gl.proto.Layers.Layer.getDefaultInstance() : layer_;
          } else {
            return layerBuilder_.getMessage();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        public Builder setLayer(com.tophap.mapbox_gl.proto.Layers.Layer value) {
          if (layerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            layer_ = value;
            onChanged();
          } else {
            layerBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        public Builder setLayer(
            com.tophap.mapbox_gl.proto.Layers.Layer.Builder builderForValue) {
          if (layerBuilder_ == null) {
            layer_ = builderForValue.build();
            onChanged();
          } else {
            layerBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        public Builder mergeLayer(com.tophap.mapbox_gl.proto.Layers.Layer value) {
          if (layerBuilder_ == null) {
            if (layer_ != null) {
              layer_ =
                com.tophap.mapbox_gl.proto.Layers.Layer.newBuilder(layer_).mergeFrom(value).buildPartial();
            } else {
              layer_ = value;
            }
            onChanged();
          } else {
            layerBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        public Builder clearLayer() {
          if (layerBuilder_ == null) {
            layer_ = null;
            onChanged();
          } else {
            layer_ = null;
            layerBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Builder getLayerBuilder() {
          
          onChanged();
          return getLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.LayerOrBuilder getLayerOrBuilder() {
          if (layerBuilder_ != null) {
            return layerBuilder_.getMessageOrBuilder();
          } else {
            return layer_ == null ?
                com.tophap.mapbox_gl.proto.Layers.Layer.getDefaultInstance() : layer_;
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer layer = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.Layers.Layer, com.tophap.mapbox_gl.proto.Layers.Layer.Builder, com.tophap.mapbox_gl.proto.Layers.LayerOrBuilder> 
            getLayerFieldBuilder() {
          if (layerBuilder_ == null) {
            layerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.Layers.Layer, com.tophap.mapbox_gl.proto.Layers.Layer.Builder, com.tophap.mapbox_gl.proto.Layers.LayerOrBuilder>(
                    getLayer(),
                    getParentForChildren(),
                    isClean());
            layer_ = null;
          }
          return layerBuilder_;
        }

        /**
         * <code>string below_id = 2;</code>
         */
        public java.lang.String getBelowId() {
          java.lang.Object ref = "";
          if (positionCase_ == 2) {
            ref = position_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (positionCase_ == 2) {
              position_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string below_id = 2;</code>
         */
        public com.google.protobuf.ByteString
            getBelowIdBytes() {
          java.lang.Object ref = "";
          if (positionCase_ == 2) {
            ref = position_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (positionCase_ == 2) {
              position_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string below_id = 2;</code>
         */
        public Builder setBelowId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  positionCase_ = 2;
          position_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string below_id = 2;</code>
         */
        public Builder clearBelowId() {
          if (positionCase_ == 2) {
            positionCase_ = 0;
            position_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>string below_id = 2;</code>
         */
        public Builder setBelowIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          positionCase_ = 2;
          position_ = value;
          onChanged();
          return this;
        }

        /**
         * <code>string above_id = 3;</code>
         */
        public java.lang.String getAboveId() {
          java.lang.Object ref = "";
          if (positionCase_ == 3) {
            ref = position_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (positionCase_ == 3) {
              position_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string above_id = 3;</code>
         */
        public com.google.protobuf.ByteString
            getAboveIdBytes() {
          java.lang.Object ref = "";
          if (positionCase_ == 3) {
            ref = position_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (positionCase_ == 3) {
              position_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string above_id = 3;</code>
         */
        public Builder setAboveId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  positionCase_ = 3;
          position_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string above_id = 3;</code>
         */
        public Builder clearAboveId() {
          if (positionCase_ == 3) {
            positionCase_ = 0;
            position_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <code>string above_id = 3;</code>
         */
        public Builder setAboveIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          positionCase_ = 3;
          position_ = value;
          onChanged();
          return this;
        }

        /**
         * <code>int32 index = 4;</code>
         */
        public int getIndex() {
          if (positionCase_ == 4) {
            return (java.lang.Integer) position_;
          }
          return 0;
        }
        /**
         * <code>int32 index = 4;</code>
         */
        public Builder setIndex(int value) {
          positionCase_ = 4;
          position_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 index = 4;</code>
         */
        public Builder clearIndex() {
          if (positionCase_ == 4) {
            positionCase_ = 0;
            position_ = null;
            onChanged();
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Add)
      }

      // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Add)
      private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add();
      }

      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Add>
          PARSER = new com.google.protobuf.AbstractParser<Add>() {
        @java.lang.Override
        public Add parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Add(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Add> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Add> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Add getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface UpdateOrBuilder extends
        // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string id = 1;</code>
       */
      java.lang.String getId();
      /**
       * <code>string id = 1;</code>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
       */
      boolean hasBackgroundLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background getBackgroundLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.BackgroundOrBuilder getBackgroundLayerOrBuilder();

      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
       */
      boolean hasCircleLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle getCircleLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.CircleOrBuilder getCircleLayerOrBuilder();

      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
       */
      boolean hasFillLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill getFillLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillOrBuilder getFillLayerOrBuilder();

      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
       */
      boolean hasFillExtrusionLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion getFillExtrusionLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusionOrBuilder getFillExtrusionLayerOrBuilder();

      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
       */
      boolean hasLineLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line getLineLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.LineOrBuilder getLineLayerOrBuilder();

      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
       */
      boolean hasSymbolLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol getSymbolLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.SymbolOrBuilder getSymbolLayerOrBuilder();

      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
       */
      boolean hasHillshadeLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade getHillshadeLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HillshadeOrBuilder getHillshadeLayerOrBuilder();

      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
       */
      boolean hasHeatmapLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap getHeatmapLayer();
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
       */
      com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HeatmapOrBuilder getHeatmapLayerOrBuilder();

      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.TypeCase getTypeCase();
    }
    /**
     * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update}
     */
    public  static final class Update extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update)
        UpdateOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Update.newBuilder() to construct.
      private Update(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Update() {
        id_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Update(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                id_ = s;
                break;
              }
              case 18: {
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.Builder subBuilder = null;
                if (typeCase_ == 2) {
                  subBuilder = ((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 2;
                break;
              }
              case 26: {
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.Builder subBuilder = null;
                if (typeCase_ == 3) {
                  subBuilder = ((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 3;
                break;
              }
              case 34: {
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.Builder subBuilder = null;
                if (typeCase_ == 4) {
                  subBuilder = ((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 4;
                break;
              }
              case 42: {
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.Builder subBuilder = null;
                if (typeCase_ == 5) {
                  subBuilder = ((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 5;
                break;
              }
              case 50: {
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.Builder subBuilder = null;
                if (typeCase_ == 6) {
                  subBuilder = ((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 6;
                break;
              }
              case 58: {
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.Builder subBuilder = null;
                if (typeCase_ == 7) {
                  subBuilder = ((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 7;
                break;
              }
              case 66: {
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.Builder subBuilder = null;
                if (typeCase_ == 8) {
                  subBuilder = ((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 8;
                break;
              }
              case 74: {
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.Builder subBuilder = null;
                if (typeCase_ == 9) {
                  subBuilder = ((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_).toBuilder();
                }
                type_ =
                    input.readMessage(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_);
                  type_ = subBuilder.buildPartial();
                }
                typeCase_ = 9;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Builder.class);
      }

      public interface BackgroundOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update.Background)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        boolean hasVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValue getVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        boolean hasMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValue getMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        boolean hasMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValue getMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value color = 4;</code>
         */
        boolean hasColor();
        /**
         * <code>.google.protobuf.Int32Value color = 4;</code>
         */
        com.google.protobuf.Int32Value getColor();
        /**
         * <code>.google.protobuf.Int32Value color = 4;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder();

        /**
         * <code>.google.protobuf.StringValue pattern = 5;</code>
         */
        boolean hasPattern();
        /**
         * <code>.google.protobuf.StringValue pattern = 5;</code>
         */
        com.google.protobuf.StringValue getPattern();
        /**
         * <code>.google.protobuf.StringValue pattern = 5;</code>
         */
        com.google.protobuf.StringValueOrBuilder getPatternOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue opacity = 6;</code>
         */
        boolean hasOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 6;</code>
         */
        com.google.protobuf.FloatValue getOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 6;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
         */
        boolean hasColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
         */
        boolean hasPatternTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
         */
        boolean hasOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder();
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Background}
       */
      public  static final class Background extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update.Background)
          BackgroundOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Background.newBuilder() to construct.
        private Background(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Background() {
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Background(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (visible_ != null) {
                    subBuilder = visible_.toBuilder();
                  }
                  visible_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visible_);
                    visible_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (minZoom_ != null) {
                    subBuilder = minZoom_.toBuilder();
                  }
                  minZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minZoom_);
                    minZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (maxZoom_ != null) {
                    subBuilder = maxZoom_.toBuilder();
                  }
                  maxZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxZoom_);
                    maxZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (color_ != null) {
                    subBuilder = color_.toBuilder();
                  }
                  color_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(color_);
                    color_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  com.google.protobuf.StringValue.Builder subBuilder = null;
                  if (pattern_ != null) {
                    subBuilder = pattern_.toBuilder();
                  }
                  pattern_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pattern_);
                    pattern_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (opacity_ != null) {
                    subBuilder = opacity_.toBuilder();
                  }
                  opacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacity_);
                    opacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (colorTransition_ != null) {
                    subBuilder = colorTransition_.toBuilder();
                  }
                  colorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorTransition_);
                    colorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 66: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (patternTransition_ != null) {
                    subBuilder = patternTransition_.toBuilder();
                  }
                  patternTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(patternTransition_);
                    patternTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 74: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (opacityTransition_ != null) {
                    subBuilder = opacityTransition_.toBuilder();
                  }
                  opacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacityTransition_);
                    opacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.Builder.class);
        }

        public static final int VISIBLE_FIELD_NUMBER = 1;
        private com.google.protobuf.BoolValue visible_;
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public boolean hasVisible() {
          return visible_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValue getVisible() {
          return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
          return getVisible();
        }

        public static final int MIN_ZOOM_FIELD_NUMBER = 2;
        private com.google.protobuf.FloatValue minZoom_;
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public boolean hasMinZoom() {
          return minZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValue getMinZoom() {
          return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
          return getMinZoom();
        }

        public static final int MAX_ZOOM_FIELD_NUMBER = 3;
        private com.google.protobuf.FloatValue maxZoom_;
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public boolean hasMaxZoom() {
          return maxZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValue getMaxZoom() {
          return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
          return getMaxZoom();
        }

        public static final int COLOR_FIELD_NUMBER = 4;
        private com.google.protobuf.Int32Value color_;
        /**
         * <code>.google.protobuf.Int32Value color = 4;</code>
         */
        public boolean hasColor() {
          return color_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 4;</code>
         */
        public com.google.protobuf.Int32Value getColor() {
          return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 4;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
          return getColor();
        }

        public static final int PATTERN_FIELD_NUMBER = 5;
        private com.google.protobuf.StringValue pattern_;
        /**
         * <code>.google.protobuf.StringValue pattern = 5;</code>
         */
        public boolean hasPattern() {
          return pattern_ != null;
        }
        /**
         * <code>.google.protobuf.StringValue pattern = 5;</code>
         */
        public com.google.protobuf.StringValue getPattern() {
          return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
        }
        /**
         * <code>.google.protobuf.StringValue pattern = 5;</code>
         */
        public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
          return getPattern();
        }

        public static final int OPACITY_FIELD_NUMBER = 6;
        private com.google.protobuf.FloatValue opacity_;
        /**
         * <code>.google.protobuf.FloatValue opacity = 6;</code>
         */
        public boolean hasOpacity() {
          return opacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 6;</code>
         */
        public com.google.protobuf.FloatValue getOpacity() {
          return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 6;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
          return getOpacity();
        }

        public static final int COLOR_TRANSITION_FIELD_NUMBER = 7;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
         */
        public boolean hasColorTransition() {
          return colorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
          return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
          return getColorTransition();
        }

        public static final int PATTERN_TRANSITION_FIELD_NUMBER = 8;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions patternTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
         */
        public boolean hasPatternTransition() {
          return patternTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition() {
          return patternTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder() {
          return getPatternTransition();
        }

        public static final int OPACITY_TRANSITION_FIELD_NUMBER = 9;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
         */
        public boolean hasOpacityTransition() {
          return opacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
          return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
          return getOpacityTransition();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (visible_ != null) {
            output.writeMessage(1, getVisible());
          }
          if (minZoom_ != null) {
            output.writeMessage(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            output.writeMessage(3, getMaxZoom());
          }
          if (color_ != null) {
            output.writeMessage(4, getColor());
          }
          if (pattern_ != null) {
            output.writeMessage(5, getPattern());
          }
          if (opacity_ != null) {
            output.writeMessage(6, getOpacity());
          }
          if (colorTransition_ != null) {
            output.writeMessage(7, getColorTransition());
          }
          if (patternTransition_ != null) {
            output.writeMessage(8, getPatternTransition());
          }
          if (opacityTransition_ != null) {
            output.writeMessage(9, getOpacityTransition());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (visible_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getVisible());
          }
          if (minZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getMaxZoom());
          }
          if (color_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getColor());
          }
          if (pattern_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getPattern());
          }
          if (opacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getOpacity());
          }
          if (colorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getColorTransition());
          }
          if (patternTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(8, getPatternTransition());
          }
          if (opacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, getOpacityTransition());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background)) {
            return super.equals(obj);
          }
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) obj;

          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (!getVisible()
                .equals(other.getVisible())) return false;
          }
          if (hasMinZoom() != other.hasMinZoom()) return false;
          if (hasMinZoom()) {
            if (!getMinZoom()
                .equals(other.getMinZoom())) return false;
          }
          if (hasMaxZoom() != other.hasMaxZoom()) return false;
          if (hasMaxZoom()) {
            if (!getMaxZoom()
                .equals(other.getMaxZoom())) return false;
          }
          if (hasColor() != other.hasColor()) return false;
          if (hasColor()) {
            if (!getColor()
                .equals(other.getColor())) return false;
          }
          if (hasPattern() != other.hasPattern()) return false;
          if (hasPattern()) {
            if (!getPattern()
                .equals(other.getPattern())) return false;
          }
          if (hasOpacity() != other.hasOpacity()) return false;
          if (hasOpacity()) {
            if (!getOpacity()
                .equals(other.getOpacity())) return false;
          }
          if (hasColorTransition() != other.hasColorTransition()) return false;
          if (hasColorTransition()) {
            if (!getColorTransition()
                .equals(other.getColorTransition())) return false;
          }
          if (hasPatternTransition() != other.hasPatternTransition()) return false;
          if (hasPatternTransition()) {
            if (!getPatternTransition()
                .equals(other.getPatternTransition())) return false;
          }
          if (hasOpacityTransition() != other.hasOpacityTransition()) return false;
          if (hasOpacityTransition()) {
            if (!getOpacityTransition()
                .equals(other.getOpacityTransition())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + getVisible().hashCode();
          }
          if (hasMinZoom()) {
            hash = (37 * hash) + MIN_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMinZoom().hashCode();
          }
          if (hasMaxZoom()) {
            hash = (37 * hash) + MAX_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMaxZoom().hashCode();
          }
          if (hasColor()) {
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor().hashCode();
          }
          if (hasPattern()) {
            hash = (37 * hash) + PATTERN_FIELD_NUMBER;
            hash = (53 * hash) + getPattern().hashCode();
          }
          if (hasOpacity()) {
            hash = (37 * hash) + OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getOpacity().hashCode();
          }
          if (hasColorTransition()) {
            hash = (37 * hash) + COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getColorTransition().hashCode();
          }
          if (hasPatternTransition()) {
            hash = (37 * hash) + PATTERN_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getPatternTransition().hashCode();
          }
          if (hasOpacityTransition()) {
            hash = (37 * hash) + OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getOpacityTransition().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Background}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update.Background)
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.BackgroundOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.Builder.class);
          }

          // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (visibleBuilder_ == null) {
              visible_ = null;
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }
            if (colorBuilder_ == null) {
              color_ = null;
            } else {
              color_ = null;
              colorBuilder_ = null;
            }
            if (patternBuilder_ == null) {
              pattern_ = null;
            } else {
              pattern_ = null;
              patternBuilder_ = null;
            }
            if (opacityBuilder_ == null) {
              opacity_ = null;
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = null;
            } else {
              patternTransition_ = null;
              patternTransitionBuilder_ = null;
            }
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_descriptor;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background getDefaultInstanceForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance();
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background build() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background buildPartial() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background(this);
            if (visibleBuilder_ == null) {
              result.visible_ = visible_;
            } else {
              result.visible_ = visibleBuilder_.build();
            }
            if (minZoomBuilder_ == null) {
              result.minZoom_ = minZoom_;
            } else {
              result.minZoom_ = minZoomBuilder_.build();
            }
            if (maxZoomBuilder_ == null) {
              result.maxZoom_ = maxZoom_;
            } else {
              result.maxZoom_ = maxZoomBuilder_.build();
            }
            if (colorBuilder_ == null) {
              result.color_ = color_;
            } else {
              result.color_ = colorBuilder_.build();
            }
            if (patternBuilder_ == null) {
              result.pattern_ = pattern_;
            } else {
              result.pattern_ = patternBuilder_.build();
            }
            if (opacityBuilder_ == null) {
              result.opacity_ = opacity_;
            } else {
              result.opacity_ = opacityBuilder_.build();
            }
            if (colorTransitionBuilder_ == null) {
              result.colorTransition_ = colorTransition_;
            } else {
              result.colorTransition_ = colorTransitionBuilder_.build();
            }
            if (patternTransitionBuilder_ == null) {
              result.patternTransition_ = patternTransition_;
            } else {
              result.patternTransition_ = patternTransitionBuilder_.build();
            }
            if (opacityTransitionBuilder_ == null) {
              result.opacityTransition_ = opacityTransition_;
            } else {
              result.opacityTransition_ = opacityTransitionBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) {
              return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background other) {
            if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance()) return this;
            if (other.hasVisible()) {
              mergeVisible(other.getVisible());
            }
            if (other.hasMinZoom()) {
              mergeMinZoom(other.getMinZoom());
            }
            if (other.hasMaxZoom()) {
              mergeMaxZoom(other.getMaxZoom());
            }
            if (other.hasColor()) {
              mergeColor(other.getColor());
            }
            if (other.hasPattern()) {
              mergePattern(other.getPattern());
            }
            if (other.hasOpacity()) {
              mergeOpacity(other.getOpacity());
            }
            if (other.hasColorTransition()) {
              mergeColorTransition(other.getColorTransition());
            }
            if (other.hasPatternTransition()) {
              mergePatternTransition(other.getPatternTransition());
            }
            if (other.hasOpacityTransition()) {
              mergeOpacityTransition(other.getOpacityTransition());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private com.google.protobuf.BoolValue visible_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> visibleBuilder_;
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public boolean hasVisible() {
            return visibleBuilder_ != null || visible_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue getVisible() {
            if (visibleBuilder_ == null) {
              return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            } else {
              return visibleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visible_ = value;
              onChanged();
            } else {
              visibleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (visibleBuilder_ == null) {
              visible_ = builderForValue.build();
              onChanged();
            } else {
              visibleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder mergeVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (visible_ != null) {
                visible_ =
                  com.google.protobuf.BoolValue.newBuilder(visible_).mergeFrom(value).buildPartial();
              } else {
                visible_ = value;
              }
              onChanged();
            } else {
              visibleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder clearVisible() {
            if (visibleBuilder_ == null) {
              visible_ = null;
              onChanged();
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVisibleBuilder() {
            
            onChanged();
            return getVisibleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
            if (visibleBuilder_ != null) {
              return visibleBuilder_.getMessageOrBuilder();
            } else {
              return visible_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVisibleFieldBuilder() {
            if (visibleBuilder_ == null) {
              visibleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVisible(),
                      getParentForChildren(),
                      isClean());
              visible_ = null;
            }
            return visibleBuilder_;
          }

          private com.google.protobuf.FloatValue minZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> minZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public boolean hasMinZoom() {
            return minZoomBuilder_ != null || minZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue getMinZoom() {
            if (minZoomBuilder_ == null) {
              return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            } else {
              return minZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              minZoom_ = value;
              onChanged();
            } else {
              minZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (minZoomBuilder_ == null) {
              minZoom_ = builderForValue.build();
              onChanged();
            } else {
              minZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder mergeMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (minZoom_ != null) {
                minZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(minZoom_).mergeFrom(value).buildPartial();
              } else {
                minZoom_ = value;
              }
              onChanged();
            } else {
              minZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder clearMinZoom() {
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
              onChanged();
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMinZoomBuilder() {
            
            onChanged();
            return getMinZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
            if (minZoomBuilder_ != null) {
              return minZoomBuilder_.getMessageOrBuilder();
            } else {
              return minZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMinZoomFieldBuilder() {
            if (minZoomBuilder_ == null) {
              minZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMinZoom(),
                      getParentForChildren(),
                      isClean());
              minZoom_ = null;
            }
            return minZoomBuilder_;
          }

          private com.google.protobuf.FloatValue maxZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> maxZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public boolean hasMaxZoom() {
            return maxZoomBuilder_ != null || maxZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue getMaxZoom() {
            if (maxZoomBuilder_ == null) {
              return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            } else {
              return maxZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              maxZoom_ = value;
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = builderForValue.build();
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder mergeMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (maxZoom_ != null) {
                maxZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(maxZoom_).mergeFrom(value).buildPartial();
              } else {
                maxZoom_ = value;
              }
              onChanged();
            } else {
              maxZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder clearMaxZoom() {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
              onChanged();
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMaxZoomBuilder() {
            
            onChanged();
            return getMaxZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
            if (maxZoomBuilder_ != null) {
              return maxZoomBuilder_.getMessageOrBuilder();
            } else {
              return maxZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMaxZoomFieldBuilder() {
            if (maxZoomBuilder_ == null) {
              maxZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMaxZoom(),
                      getParentForChildren(),
                      isClean());
              maxZoom_ = null;
            }
            return maxZoomBuilder_;
          }

          private com.google.protobuf.Int32Value color_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> colorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          public boolean hasColor() {
            return colorBuilder_ != null || color_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          public com.google.protobuf.Int32Value getColor() {
            if (colorBuilder_ == null) {
              return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            } else {
              return colorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          public Builder setColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              color_ = value;
              onChanged();
            } else {
              colorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          public Builder setColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (colorBuilder_ == null) {
              color_ = builderForValue.build();
              onChanged();
            } else {
              colorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          public Builder mergeColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (color_ != null) {
                color_ =
                  com.google.protobuf.Int32Value.newBuilder(color_).mergeFrom(value).buildPartial();
              } else {
                color_ = value;
              }
              onChanged();
            } else {
              colorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          public Builder clearColor() {
            if (colorBuilder_ == null) {
              color_ = null;
              onChanged();
            } else {
              color_ = null;
              colorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          public com.google.protobuf.Int32Value.Builder getColorBuilder() {
            
            onChanged();
            return getColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
            if (colorBuilder_ != null) {
              return colorBuilder_.getMessageOrBuilder();
            } else {
              return color_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getColorFieldBuilder() {
            if (colorBuilder_ == null) {
              colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getColor(),
                      getParentForChildren(),
                      isClean());
              color_ = null;
            }
            return colorBuilder_;
          }

          private com.google.protobuf.StringValue pattern_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> patternBuilder_;
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          public boolean hasPattern() {
            return patternBuilder_ != null || pattern_ != null;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          public com.google.protobuf.StringValue getPattern() {
            if (patternBuilder_ == null) {
              return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
            } else {
              return patternBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          public Builder setPattern(com.google.protobuf.StringValue value) {
            if (patternBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              pattern_ = value;
              onChanged();
            } else {
              patternBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          public Builder setPattern(
              com.google.protobuf.StringValue.Builder builderForValue) {
            if (patternBuilder_ == null) {
              pattern_ = builderForValue.build();
              onChanged();
            } else {
              patternBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          public Builder mergePattern(com.google.protobuf.StringValue value) {
            if (patternBuilder_ == null) {
              if (pattern_ != null) {
                pattern_ =
                  com.google.protobuf.StringValue.newBuilder(pattern_).mergeFrom(value).buildPartial();
              } else {
                pattern_ = value;
              }
              onChanged();
            } else {
              patternBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          public Builder clearPattern() {
            if (patternBuilder_ == null) {
              pattern_ = null;
              onChanged();
            } else {
              pattern_ = null;
              patternBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          public com.google.protobuf.StringValue.Builder getPatternBuilder() {
            
            onChanged();
            return getPatternFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
            if (patternBuilder_ != null) {
              return patternBuilder_.getMessageOrBuilder();
            } else {
              return pattern_ == null ?
                  com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
            }
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
              getPatternFieldBuilder() {
            if (patternBuilder_ == null) {
              patternBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                      getPattern(),
                      getParentForChildren(),
                      isClean());
              pattern_ = null;
            }
            return patternBuilder_;
          }

          private com.google.protobuf.FloatValue opacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> opacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          public boolean hasOpacity() {
            return opacityBuilder_ != null || opacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          public com.google.protobuf.FloatValue getOpacity() {
            if (opacityBuilder_ == null) {
              return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            } else {
              return opacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          public Builder setOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacity_ = value;
              onChanged();
            } else {
              opacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          public Builder setOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (opacityBuilder_ == null) {
              opacity_ = builderForValue.build();
              onChanged();
            } else {
              opacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          public Builder mergeOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (opacity_ != null) {
                opacity_ =
                  com.google.protobuf.FloatValue.newBuilder(opacity_).mergeFrom(value).buildPartial();
              } else {
                opacity_ = value;
              }
              onChanged();
            } else {
              opacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          public Builder clearOpacity() {
            if (opacityBuilder_ == null) {
              opacity_ = null;
              onChanged();
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          public com.google.protobuf.FloatValue.Builder getOpacityBuilder() {
            
            onChanged();
            return getOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
            if (opacityBuilder_ != null) {
              return opacityBuilder_.getMessageOrBuilder();
            } else {
              return opacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getOpacityFieldBuilder() {
            if (opacityBuilder_ == null) {
              opacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getOpacity(),
                      getParentForChildren(),
                      isClean());
              opacity_ = null;
            }
            return opacityBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> colorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          public boolean hasColorTransition() {
            return colorTransitionBuilder_ != null || colorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
            if (colorTransitionBuilder_ == null) {
              return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            } else {
              return colorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          public Builder setColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorTransition_ = value;
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          public Builder setColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = builderForValue.build();
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          public Builder mergeColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (colorTransition_ != null) {
                colorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(colorTransition_).mergeFrom(value).buildPartial();
              } else {
                colorTransition_ = value;
              }
              onChanged();
            } else {
              colorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          public Builder clearColorTransition() {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
              onChanged();
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getColorTransitionBuilder() {
            
            onChanged();
            return getColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
            if (colorTransitionBuilder_ != null) {
              return colorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return colorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getColorTransitionFieldBuilder() {
            if (colorTransitionBuilder_ == null) {
              colorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getColorTransition(),
                      getParentForChildren(),
                      isClean());
              colorTransition_ = null;
            }
            return colorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions patternTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> patternTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          public boolean hasPatternTransition() {
            return patternTransitionBuilder_ != null || patternTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition() {
            if (patternTransitionBuilder_ == null) {
              return patternTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
            } else {
              return patternTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          public Builder setPatternTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (patternTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              patternTransition_ = value;
              onChanged();
            } else {
              patternTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          public Builder setPatternTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = builderForValue.build();
              onChanged();
            } else {
              patternTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          public Builder mergePatternTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (patternTransitionBuilder_ == null) {
              if (patternTransition_ != null) {
                patternTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(patternTransition_).mergeFrom(value).buildPartial();
              } else {
                patternTransition_ = value;
              }
              onChanged();
            } else {
              patternTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          public Builder clearPatternTransition() {
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = null;
              onChanged();
            } else {
              patternTransition_ = null;
              patternTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getPatternTransitionBuilder() {
            
            onChanged();
            return getPatternTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder() {
            if (patternTransitionBuilder_ != null) {
              return patternTransitionBuilder_.getMessageOrBuilder();
            } else {
              return patternTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 8;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getPatternTransitionFieldBuilder() {
            if (patternTransitionBuilder_ == null) {
              patternTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getPatternTransition(),
                      getParentForChildren(),
                      isClean());
              patternTransition_ = null;
            }
            return patternTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> opacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          public boolean hasOpacityTransition() {
            return opacityTransitionBuilder_ != null || opacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            } else {
              return opacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          public Builder setOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacityTransition_ = value;
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          public Builder setOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          public Builder mergeOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (opacityTransition_ != null) {
                opacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(opacityTransition_).mergeFrom(value).buildPartial();
              } else {
                opacityTransition_ = value;
              }
              onChanged();
            } else {
              opacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          public Builder clearOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
              onChanged();
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getOpacityTransitionBuilder() {
            
            onChanged();
            return getOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
            if (opacityTransitionBuilder_ != null) {
              return opacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return opacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 9;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getOpacityTransitionFieldBuilder() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              opacityTransition_ = null;
            }
            return opacityTransitionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update.Background)
        }

        // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update.Background)
        private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background();
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Background>
            PARSER = new com.google.protobuf.AbstractParser<Background>() {
          @java.lang.Override
          public Background parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Background(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Background> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Background> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface CircleOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update.Circle)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        boolean hasVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValue getVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        boolean hasMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValue getMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        boolean hasMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValue getMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        boolean hasRadius();
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        com.google.protobuf.FloatValue getRadius();
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getRadiusOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        boolean hasColor();
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        com.google.protobuf.Int32Value getColor();
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue blur = 6;</code>
         */
        boolean hasBlur();
        /**
         * <code>.google.protobuf.FloatValue blur = 6;</code>
         */
        com.google.protobuf.FloatValue getBlur();
        /**
         * <code>.google.protobuf.FloatValue blur = 6;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getBlurOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue opacity = 7;</code>
         */
        boolean hasOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 7;</code>
         */
        com.google.protobuf.FloatValue getOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 7;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder();

        /**
         * <code>repeated float translate = 8;</code>
         */
        java.util.List<java.lang.Float> getTranslateList();
        /**
         * <code>repeated float translate = 8;</code>
         */
        int getTranslateCount();
        /**
         * <code>repeated float translate = 8;</code>
         */
        float getTranslate(int index);

        /**
         * <code>bool has_translate = 9;</code>
         */
        boolean getHasTranslate();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
         */
        int getTranslateAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor();

        /**
         * <code>bool has_translate_anchor = 11;</code>
         */
        boolean getHasTranslateAnchor();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
         */
        int getPitchScaleValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getPitchScale();

        /**
         * <code>bool has_pitch_scale = 13;</code>
         */
        boolean getHasPitchScale();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
         */
        int getPitchAlignmentValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getPitchAlignment();

        /**
         * <code>bool has_pitch_alignment = 15;</code>
         */
        boolean getHasPitchAlignment();

        /**
         * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
         */
        boolean hasStrokeWidth();
        /**
         * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
         */
        com.google.protobuf.FloatValue getStrokeWidth();
        /**
         * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getStrokeWidthOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
         */
        boolean hasStrokeColor();
        /**
         * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
         */
        com.google.protobuf.Int32Value getStrokeColor();
        /**
         * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getStrokeColorOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
         */
        boolean hasStrokeOpacity();
        /**
         * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
         */
        com.google.protobuf.FloatValue getStrokeOpacity();
        /**
         * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getStrokeOpacityOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
         */
        boolean hasRadiusTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getRadiusTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getRadiusTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
         */
        boolean hasColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
         */
        boolean hasBlurTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBlurTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBlurTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
         */
        boolean hasOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
         */
        boolean hasTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
         */
        boolean hasStrokeWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeWidthTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
         */
        boolean hasStrokeColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
         */
        boolean hasStrokeOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeOpacityTransitionOrBuilder();
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Circle}
       */
      public  static final class Circle extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update.Circle)
          CircleOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Circle.newBuilder() to construct.
        private Circle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Circle() {
          translate_ = emptyFloatList();
          translateAnchor_ = 0;
          pitchScale_ = 0;
          pitchAlignment_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Circle(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (visible_ != null) {
                    subBuilder = visible_.toBuilder();
                  }
                  visible_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visible_);
                    visible_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (minZoom_ != null) {
                    subBuilder = minZoom_.toBuilder();
                  }
                  minZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minZoom_);
                    minZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (maxZoom_ != null) {
                    subBuilder = maxZoom_.toBuilder();
                  }
                  maxZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxZoom_);
                    maxZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (radius_ != null) {
                    subBuilder = radius_.toBuilder();
                  }
                  radius_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(radius_);
                    radius_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (color_ != null) {
                    subBuilder = color_.toBuilder();
                  }
                  color_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(color_);
                    color_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (blur_ != null) {
                    subBuilder = blur_.toBuilder();
                  }
                  blur_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(blur_);
                    blur_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (opacity_ != null) {
                    subBuilder = opacity_.toBuilder();
                  }
                  opacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacity_);
                    opacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 69: {
                  if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                    translate_ = newFloatList();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  translate_.addFloat(input.readFloat());
                  break;
                }
                case 66: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                    translate_ = newFloatList();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    translate_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 72: {

                  hasTranslate_ = input.readBool();
                  break;
                }
                case 80: {
                  int rawValue = input.readEnum();

                  translateAnchor_ = rawValue;
                  break;
                }
                case 88: {

                  hasTranslateAnchor_ = input.readBool();
                  break;
                }
                case 96: {
                  int rawValue = input.readEnum();

                  pitchScale_ = rawValue;
                  break;
                }
                case 104: {

                  hasPitchScale_ = input.readBool();
                  break;
                }
                case 112: {
                  int rawValue = input.readEnum();

                  pitchAlignment_ = rawValue;
                  break;
                }
                case 120: {

                  hasPitchAlignment_ = input.readBool();
                  break;
                }
                case 130: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (strokeWidth_ != null) {
                    subBuilder = strokeWidth_.toBuilder();
                  }
                  strokeWidth_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(strokeWidth_);
                    strokeWidth_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 138: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (strokeColor_ != null) {
                    subBuilder = strokeColor_.toBuilder();
                  }
                  strokeColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(strokeColor_);
                    strokeColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 146: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (strokeOpacity_ != null) {
                    subBuilder = strokeOpacity_.toBuilder();
                  }
                  strokeOpacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(strokeOpacity_);
                    strokeOpacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 154: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (radiusTransition_ != null) {
                    subBuilder = radiusTransition_.toBuilder();
                  }
                  radiusTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(radiusTransition_);
                    radiusTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 162: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (colorTransition_ != null) {
                    subBuilder = colorTransition_.toBuilder();
                  }
                  colorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorTransition_);
                    colorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 170: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (blurTransition_ != null) {
                    subBuilder = blurTransition_.toBuilder();
                  }
                  blurTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(blurTransition_);
                    blurTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 178: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (opacityTransition_ != null) {
                    subBuilder = opacityTransition_.toBuilder();
                  }
                  opacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacityTransition_);
                    opacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 186: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (translateTransition_ != null) {
                    subBuilder = translateTransition_.toBuilder();
                  }
                  translateTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(translateTransition_);
                    translateTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 194: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (strokeWidthTransition_ != null) {
                    subBuilder = strokeWidthTransition_.toBuilder();
                  }
                  strokeWidthTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(strokeWidthTransition_);
                    strokeWidthTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 202: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (strokeColorTransition_ != null) {
                    subBuilder = strokeColorTransition_.toBuilder();
                  }
                  strokeColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(strokeColorTransition_);
                    strokeColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 210: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (strokeOpacityTransition_ != null) {
                    subBuilder = strokeOpacityTransition_.toBuilder();
                  }
                  strokeOpacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(strokeOpacityTransition_);
                    strokeOpacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000080) != 0)) {
              translate_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.Builder.class);
        }

        private int bitField0_;
        public static final int VISIBLE_FIELD_NUMBER = 1;
        private com.google.protobuf.BoolValue visible_;
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public boolean hasVisible() {
          return visible_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValue getVisible() {
          return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
          return getVisible();
        }

        public static final int MIN_ZOOM_FIELD_NUMBER = 2;
        private com.google.protobuf.FloatValue minZoom_;
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public boolean hasMinZoom() {
          return minZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValue getMinZoom() {
          return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
          return getMinZoom();
        }

        public static final int MAX_ZOOM_FIELD_NUMBER = 3;
        private com.google.protobuf.FloatValue maxZoom_;
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public boolean hasMaxZoom() {
          return maxZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValue getMaxZoom() {
          return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
          return getMaxZoom();
        }

        public static final int RADIUS_FIELD_NUMBER = 4;
        private com.google.protobuf.FloatValue radius_;
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        public boolean hasRadius() {
          return radius_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        public com.google.protobuf.FloatValue getRadius() {
          return radius_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : radius_;
        }
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getRadiusOrBuilder() {
          return getRadius();
        }

        public static final int COLOR_FIELD_NUMBER = 5;
        private com.google.protobuf.Int32Value color_;
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        public boolean hasColor() {
          return color_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        public com.google.protobuf.Int32Value getColor() {
          return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
          return getColor();
        }

        public static final int BLUR_FIELD_NUMBER = 6;
        private com.google.protobuf.FloatValue blur_;
        /**
         * <code>.google.protobuf.FloatValue blur = 6;</code>
         */
        public boolean hasBlur() {
          return blur_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue blur = 6;</code>
         */
        public com.google.protobuf.FloatValue getBlur() {
          return blur_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : blur_;
        }
        /**
         * <code>.google.protobuf.FloatValue blur = 6;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getBlurOrBuilder() {
          return getBlur();
        }

        public static final int OPACITY_FIELD_NUMBER = 7;
        private com.google.protobuf.FloatValue opacity_;
        /**
         * <code>.google.protobuf.FloatValue opacity = 7;</code>
         */
        public boolean hasOpacity() {
          return opacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 7;</code>
         */
        public com.google.protobuf.FloatValue getOpacity() {
          return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 7;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
          return getOpacity();
        }

        public static final int TRANSLATE_FIELD_NUMBER = 8;
        private com.google.protobuf.Internal.FloatList translate_;
        /**
         * <code>repeated float translate = 8;</code>
         */
        public java.util.List<java.lang.Float>
            getTranslateList() {
          return translate_;
        }
        /**
         * <code>repeated float translate = 8;</code>
         */
        public int getTranslateCount() {
          return translate_.size();
        }
        /**
         * <code>repeated float translate = 8;</code>
         */
        public float getTranslate(int index) {
          return translate_.getFloat(index);
        }
        private int translateMemoizedSerializedSize = -1;

        public static final int HAS_TRANSLATE_FIELD_NUMBER = 9;
        private boolean hasTranslate_;
        /**
         * <code>bool has_translate = 9;</code>
         */
        public boolean getHasTranslate() {
          return hasTranslate_;
        }

        public static final int TRANSLATE_ANCHOR_FIELD_NUMBER = 10;
        private int translateAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
         */
        public int getTranslateAnchorValue() {
          return translateAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(translateAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_TRANSLATE_ANCHOR_FIELD_NUMBER = 11;
        private boolean hasTranslateAnchor_;
        /**
         * <code>bool has_translate_anchor = 11;</code>
         */
        public boolean getHasTranslateAnchor() {
          return hasTranslateAnchor_;
        }

        public static final int PITCH_SCALE_FIELD_NUMBER = 12;
        private int pitchScale_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
         */
        public int getPitchScaleValue() {
          return pitchScale_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getPitchScale() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(pitchScale_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_PITCH_SCALE_FIELD_NUMBER = 13;
        private boolean hasPitchScale_;
        /**
         * <code>bool has_pitch_scale = 13;</code>
         */
        public boolean getHasPitchScale() {
          return hasPitchScale_;
        }

        public static final int PITCH_ALIGNMENT_FIELD_NUMBER = 14;
        private int pitchAlignment_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
         */
        public int getPitchAlignmentValue() {
          return pitchAlignment_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getPitchAlignment() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(pitchAlignment_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_PITCH_ALIGNMENT_FIELD_NUMBER = 15;
        private boolean hasPitchAlignment_;
        /**
         * <code>bool has_pitch_alignment = 15;</code>
         */
        public boolean getHasPitchAlignment() {
          return hasPitchAlignment_;
        }

        public static final int STROKE_WIDTH_FIELD_NUMBER = 16;
        private com.google.protobuf.FloatValue strokeWidth_;
        /**
         * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
         */
        public boolean hasStrokeWidth() {
          return strokeWidth_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
         */
        public com.google.protobuf.FloatValue getStrokeWidth() {
          return strokeWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : strokeWidth_;
        }
        /**
         * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getStrokeWidthOrBuilder() {
          return getStrokeWidth();
        }

        public static final int STROKE_COLOR_FIELD_NUMBER = 17;
        private com.google.protobuf.Int32Value strokeColor_;
        /**
         * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
         */
        public boolean hasStrokeColor() {
          return strokeColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
         */
        public com.google.protobuf.Int32Value getStrokeColor() {
          return strokeColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : strokeColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getStrokeColorOrBuilder() {
          return getStrokeColor();
        }

        public static final int STROKE_OPACITY_FIELD_NUMBER = 18;
        private com.google.protobuf.FloatValue strokeOpacity_;
        /**
         * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
         */
        public boolean hasStrokeOpacity() {
          return strokeOpacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
         */
        public com.google.protobuf.FloatValue getStrokeOpacity() {
          return strokeOpacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : strokeOpacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getStrokeOpacityOrBuilder() {
          return getStrokeOpacity();
        }

        public static final int RADIUS_TRANSITION_FIELD_NUMBER = 19;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions radiusTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
         */
        public boolean hasRadiusTransition() {
          return radiusTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getRadiusTransition() {
          return radiusTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : radiusTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getRadiusTransitionOrBuilder() {
          return getRadiusTransition();
        }

        public static final int COLOR_TRANSITION_FIELD_NUMBER = 20;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
         */
        public boolean hasColorTransition() {
          return colorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
          return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
          return getColorTransition();
        }

        public static final int BLUR_TRANSITION_FIELD_NUMBER = 21;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions blurTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
         */
        public boolean hasBlurTransition() {
          return blurTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBlurTransition() {
          return blurTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : blurTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBlurTransitionOrBuilder() {
          return getBlurTransition();
        }

        public static final int OPACITY_TRANSITION_FIELD_NUMBER = 22;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
         */
        public boolean hasOpacityTransition() {
          return opacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
          return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
          return getOpacityTransition();
        }

        public static final int TRANSLATE_TRANSITION_FIELD_NUMBER = 23;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions translateTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
         */
        public boolean hasTranslateTransition() {
          return translateTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition() {
          return translateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder() {
          return getTranslateTransition();
        }

        public static final int STROKE_WIDTH_TRANSITION_FIELD_NUMBER = 24;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions strokeWidthTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
         */
        public boolean hasStrokeWidthTransition() {
          return strokeWidthTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeWidthTransition() {
          return strokeWidthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeWidthTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeWidthTransitionOrBuilder() {
          return getStrokeWidthTransition();
        }

        public static final int STROKE_COLOR_TRANSITION_FIELD_NUMBER = 25;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions strokeColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
         */
        public boolean hasStrokeColorTransition() {
          return strokeColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeColorTransition() {
          return strokeColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeColorTransitionOrBuilder() {
          return getStrokeColorTransition();
        }

        public static final int STROKE_OPACITY_TRANSITION_FIELD_NUMBER = 26;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions strokeOpacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
         */
        public boolean hasStrokeOpacityTransition() {
          return strokeOpacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeOpacityTransition() {
          return strokeOpacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeOpacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeOpacityTransitionOrBuilder() {
          return getStrokeOpacityTransition();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (visible_ != null) {
            output.writeMessage(1, getVisible());
          }
          if (minZoom_ != null) {
            output.writeMessage(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            output.writeMessage(3, getMaxZoom());
          }
          if (radius_ != null) {
            output.writeMessage(4, getRadius());
          }
          if (color_ != null) {
            output.writeMessage(5, getColor());
          }
          if (blur_ != null) {
            output.writeMessage(6, getBlur());
          }
          if (opacity_ != null) {
            output.writeMessage(7, getOpacity());
          }
          if (getTranslateList().size() > 0) {
            output.writeUInt32NoTag(66);
            output.writeUInt32NoTag(translateMemoizedSerializedSize);
          }
          for (int i = 0; i < translate_.size(); i++) {
            output.writeFloatNoTag(translate_.getFloat(i));
          }
          if (hasTranslate_ != false) {
            output.writeBool(9, hasTranslate_);
          }
          if (translateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(10, translateAnchor_);
          }
          if (hasTranslateAnchor_ != false) {
            output.writeBool(11, hasTranslateAnchor_);
          }
          if (pitchScale_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(12, pitchScale_);
          }
          if (hasPitchScale_ != false) {
            output.writeBool(13, hasPitchScale_);
          }
          if (pitchAlignment_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(14, pitchAlignment_);
          }
          if (hasPitchAlignment_ != false) {
            output.writeBool(15, hasPitchAlignment_);
          }
          if (strokeWidth_ != null) {
            output.writeMessage(16, getStrokeWidth());
          }
          if (strokeColor_ != null) {
            output.writeMessage(17, getStrokeColor());
          }
          if (strokeOpacity_ != null) {
            output.writeMessage(18, getStrokeOpacity());
          }
          if (radiusTransition_ != null) {
            output.writeMessage(19, getRadiusTransition());
          }
          if (colorTransition_ != null) {
            output.writeMessage(20, getColorTransition());
          }
          if (blurTransition_ != null) {
            output.writeMessage(21, getBlurTransition());
          }
          if (opacityTransition_ != null) {
            output.writeMessage(22, getOpacityTransition());
          }
          if (translateTransition_ != null) {
            output.writeMessage(23, getTranslateTransition());
          }
          if (strokeWidthTransition_ != null) {
            output.writeMessage(24, getStrokeWidthTransition());
          }
          if (strokeColorTransition_ != null) {
            output.writeMessage(25, getStrokeColorTransition());
          }
          if (strokeOpacityTransition_ != null) {
            output.writeMessage(26, getStrokeOpacityTransition());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (visible_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getVisible());
          }
          if (minZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getMaxZoom());
          }
          if (radius_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getRadius());
          }
          if (color_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getColor());
          }
          if (blur_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getBlur());
          }
          if (opacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getOpacity());
          }
          {
            int dataSize = 0;
            dataSize = 4 * getTranslateList().size();
            size += dataSize;
            if (!getTranslateList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            translateMemoizedSerializedSize = dataSize;
          }
          if (hasTranslate_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(9, hasTranslate_);
          }
          if (translateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(10, translateAnchor_);
          }
          if (hasTranslateAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(11, hasTranslateAnchor_);
          }
          if (pitchScale_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(12, pitchScale_);
          }
          if (hasPitchScale_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(13, hasPitchScale_);
          }
          if (pitchAlignment_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(14, pitchAlignment_);
          }
          if (hasPitchAlignment_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(15, hasPitchAlignment_);
          }
          if (strokeWidth_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(16, getStrokeWidth());
          }
          if (strokeColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(17, getStrokeColor());
          }
          if (strokeOpacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(18, getStrokeOpacity());
          }
          if (radiusTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(19, getRadiusTransition());
          }
          if (colorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(20, getColorTransition());
          }
          if (blurTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(21, getBlurTransition());
          }
          if (opacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(22, getOpacityTransition());
          }
          if (translateTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(23, getTranslateTransition());
          }
          if (strokeWidthTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(24, getStrokeWidthTransition());
          }
          if (strokeColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(25, getStrokeColorTransition());
          }
          if (strokeOpacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(26, getStrokeOpacityTransition());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle)) {
            return super.equals(obj);
          }
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) obj;

          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (!getVisible()
                .equals(other.getVisible())) return false;
          }
          if (hasMinZoom() != other.hasMinZoom()) return false;
          if (hasMinZoom()) {
            if (!getMinZoom()
                .equals(other.getMinZoom())) return false;
          }
          if (hasMaxZoom() != other.hasMaxZoom()) return false;
          if (hasMaxZoom()) {
            if (!getMaxZoom()
                .equals(other.getMaxZoom())) return false;
          }
          if (hasRadius() != other.hasRadius()) return false;
          if (hasRadius()) {
            if (!getRadius()
                .equals(other.getRadius())) return false;
          }
          if (hasColor() != other.hasColor()) return false;
          if (hasColor()) {
            if (!getColor()
                .equals(other.getColor())) return false;
          }
          if (hasBlur() != other.hasBlur()) return false;
          if (hasBlur()) {
            if (!getBlur()
                .equals(other.getBlur())) return false;
          }
          if (hasOpacity() != other.hasOpacity()) return false;
          if (hasOpacity()) {
            if (!getOpacity()
                .equals(other.getOpacity())) return false;
          }
          if (!getTranslateList()
              .equals(other.getTranslateList())) return false;
          if (getHasTranslate()
              != other.getHasTranslate()) return false;
          if (translateAnchor_ != other.translateAnchor_) return false;
          if (getHasTranslateAnchor()
              != other.getHasTranslateAnchor()) return false;
          if (pitchScale_ != other.pitchScale_) return false;
          if (getHasPitchScale()
              != other.getHasPitchScale()) return false;
          if (pitchAlignment_ != other.pitchAlignment_) return false;
          if (getHasPitchAlignment()
              != other.getHasPitchAlignment()) return false;
          if (hasStrokeWidth() != other.hasStrokeWidth()) return false;
          if (hasStrokeWidth()) {
            if (!getStrokeWidth()
                .equals(other.getStrokeWidth())) return false;
          }
          if (hasStrokeColor() != other.hasStrokeColor()) return false;
          if (hasStrokeColor()) {
            if (!getStrokeColor()
                .equals(other.getStrokeColor())) return false;
          }
          if (hasStrokeOpacity() != other.hasStrokeOpacity()) return false;
          if (hasStrokeOpacity()) {
            if (!getStrokeOpacity()
                .equals(other.getStrokeOpacity())) return false;
          }
          if (hasRadiusTransition() != other.hasRadiusTransition()) return false;
          if (hasRadiusTransition()) {
            if (!getRadiusTransition()
                .equals(other.getRadiusTransition())) return false;
          }
          if (hasColorTransition() != other.hasColorTransition()) return false;
          if (hasColorTransition()) {
            if (!getColorTransition()
                .equals(other.getColorTransition())) return false;
          }
          if (hasBlurTransition() != other.hasBlurTransition()) return false;
          if (hasBlurTransition()) {
            if (!getBlurTransition()
                .equals(other.getBlurTransition())) return false;
          }
          if (hasOpacityTransition() != other.hasOpacityTransition()) return false;
          if (hasOpacityTransition()) {
            if (!getOpacityTransition()
                .equals(other.getOpacityTransition())) return false;
          }
          if (hasTranslateTransition() != other.hasTranslateTransition()) return false;
          if (hasTranslateTransition()) {
            if (!getTranslateTransition()
                .equals(other.getTranslateTransition())) return false;
          }
          if (hasStrokeWidthTransition() != other.hasStrokeWidthTransition()) return false;
          if (hasStrokeWidthTransition()) {
            if (!getStrokeWidthTransition()
                .equals(other.getStrokeWidthTransition())) return false;
          }
          if (hasStrokeColorTransition() != other.hasStrokeColorTransition()) return false;
          if (hasStrokeColorTransition()) {
            if (!getStrokeColorTransition()
                .equals(other.getStrokeColorTransition())) return false;
          }
          if (hasStrokeOpacityTransition() != other.hasStrokeOpacityTransition()) return false;
          if (hasStrokeOpacityTransition()) {
            if (!getStrokeOpacityTransition()
                .equals(other.getStrokeOpacityTransition())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + getVisible().hashCode();
          }
          if (hasMinZoom()) {
            hash = (37 * hash) + MIN_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMinZoom().hashCode();
          }
          if (hasMaxZoom()) {
            hash = (37 * hash) + MAX_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMaxZoom().hashCode();
          }
          if (hasRadius()) {
            hash = (37 * hash) + RADIUS_FIELD_NUMBER;
            hash = (53 * hash) + getRadius().hashCode();
          }
          if (hasColor()) {
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor().hashCode();
          }
          if (hasBlur()) {
            hash = (37 * hash) + BLUR_FIELD_NUMBER;
            hash = (53 * hash) + getBlur().hashCode();
          }
          if (hasOpacity()) {
            hash = (37 * hash) + OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getOpacity().hashCode();
          }
          if (getTranslateCount() > 0) {
            hash = (37 * hash) + TRANSLATE_FIELD_NUMBER;
            hash = (53 * hash) + getTranslateList().hashCode();
          }
          hash = (37 * hash) + HAS_TRANSLATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTranslate());
          hash = (37 * hash) + TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + translateAnchor_;
          hash = (37 * hash) + HAS_TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTranslateAnchor());
          hash = (37 * hash) + PITCH_SCALE_FIELD_NUMBER;
          hash = (53 * hash) + pitchScale_;
          hash = (37 * hash) + HAS_PITCH_SCALE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasPitchScale());
          hash = (37 * hash) + PITCH_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + pitchAlignment_;
          hash = (37 * hash) + HAS_PITCH_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasPitchAlignment());
          if (hasStrokeWidth()) {
            hash = (37 * hash) + STROKE_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getStrokeWidth().hashCode();
          }
          if (hasStrokeColor()) {
            hash = (37 * hash) + STROKE_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getStrokeColor().hashCode();
          }
          if (hasStrokeOpacity()) {
            hash = (37 * hash) + STROKE_OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getStrokeOpacity().hashCode();
          }
          if (hasRadiusTransition()) {
            hash = (37 * hash) + RADIUS_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getRadiusTransition().hashCode();
          }
          if (hasColorTransition()) {
            hash = (37 * hash) + COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getColorTransition().hashCode();
          }
          if (hasBlurTransition()) {
            hash = (37 * hash) + BLUR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getBlurTransition().hashCode();
          }
          if (hasOpacityTransition()) {
            hash = (37 * hash) + OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getOpacityTransition().hashCode();
          }
          if (hasTranslateTransition()) {
            hash = (37 * hash) + TRANSLATE_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTranslateTransition().hashCode();
          }
          if (hasStrokeWidthTransition()) {
            hash = (37 * hash) + STROKE_WIDTH_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getStrokeWidthTransition().hashCode();
          }
          if (hasStrokeColorTransition()) {
            hash = (37 * hash) + STROKE_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getStrokeColorTransition().hashCode();
          }
          if (hasStrokeOpacityTransition()) {
            hash = (37 * hash) + STROKE_OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getStrokeOpacityTransition().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Circle}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update.Circle)
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.CircleOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.Builder.class);
          }

          // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (visibleBuilder_ == null) {
              visible_ = null;
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }
            if (radiusBuilder_ == null) {
              radius_ = null;
            } else {
              radius_ = null;
              radiusBuilder_ = null;
            }
            if (colorBuilder_ == null) {
              color_ = null;
            } else {
              color_ = null;
              colorBuilder_ = null;
            }
            if (blurBuilder_ == null) {
              blur_ = null;
            } else {
              blur_ = null;
              blurBuilder_ = null;
            }
            if (opacityBuilder_ == null) {
              opacity_ = null;
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }
            translate_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000080);
            hasTranslate_ = false;

            translateAnchor_ = 0;

            hasTranslateAnchor_ = false;

            pitchScale_ = 0;

            hasPitchScale_ = false;

            pitchAlignment_ = 0;

            hasPitchAlignment_ = false;

            if (strokeWidthBuilder_ == null) {
              strokeWidth_ = null;
            } else {
              strokeWidth_ = null;
              strokeWidthBuilder_ = null;
            }
            if (strokeColorBuilder_ == null) {
              strokeColor_ = null;
            } else {
              strokeColor_ = null;
              strokeColorBuilder_ = null;
            }
            if (strokeOpacityBuilder_ == null) {
              strokeOpacity_ = null;
            } else {
              strokeOpacity_ = null;
              strokeOpacityBuilder_ = null;
            }
            if (radiusTransitionBuilder_ == null) {
              radiusTransition_ = null;
            } else {
              radiusTransition_ = null;
              radiusTransitionBuilder_ = null;
            }
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }
            if (blurTransitionBuilder_ == null) {
              blurTransition_ = null;
            } else {
              blurTransition_ = null;
              blurTransitionBuilder_ = null;
            }
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = null;
            } else {
              translateTransition_ = null;
              translateTransitionBuilder_ = null;
            }
            if (strokeWidthTransitionBuilder_ == null) {
              strokeWidthTransition_ = null;
            } else {
              strokeWidthTransition_ = null;
              strokeWidthTransitionBuilder_ = null;
            }
            if (strokeColorTransitionBuilder_ == null) {
              strokeColorTransition_ = null;
            } else {
              strokeColorTransition_ = null;
              strokeColorTransitionBuilder_ = null;
            }
            if (strokeOpacityTransitionBuilder_ == null) {
              strokeOpacityTransition_ = null;
            } else {
              strokeOpacityTransition_ = null;
              strokeOpacityTransitionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_descriptor;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle getDefaultInstanceForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance();
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle build() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle buildPartial() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (visibleBuilder_ == null) {
              result.visible_ = visible_;
            } else {
              result.visible_ = visibleBuilder_.build();
            }
            if (minZoomBuilder_ == null) {
              result.minZoom_ = minZoom_;
            } else {
              result.minZoom_ = minZoomBuilder_.build();
            }
            if (maxZoomBuilder_ == null) {
              result.maxZoom_ = maxZoom_;
            } else {
              result.maxZoom_ = maxZoomBuilder_.build();
            }
            if (radiusBuilder_ == null) {
              result.radius_ = radius_;
            } else {
              result.radius_ = radiusBuilder_.build();
            }
            if (colorBuilder_ == null) {
              result.color_ = color_;
            } else {
              result.color_ = colorBuilder_.build();
            }
            if (blurBuilder_ == null) {
              result.blur_ = blur_;
            } else {
              result.blur_ = blurBuilder_.build();
            }
            if (opacityBuilder_ == null) {
              result.opacity_ = opacity_;
            } else {
              result.opacity_ = opacityBuilder_.build();
            }
            if (((bitField0_ & 0x00000080) != 0)) {
              translate_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00000080);
            }
            result.translate_ = translate_;
            result.hasTranslate_ = hasTranslate_;
            result.translateAnchor_ = translateAnchor_;
            result.hasTranslateAnchor_ = hasTranslateAnchor_;
            result.pitchScale_ = pitchScale_;
            result.hasPitchScale_ = hasPitchScale_;
            result.pitchAlignment_ = pitchAlignment_;
            result.hasPitchAlignment_ = hasPitchAlignment_;
            if (strokeWidthBuilder_ == null) {
              result.strokeWidth_ = strokeWidth_;
            } else {
              result.strokeWidth_ = strokeWidthBuilder_.build();
            }
            if (strokeColorBuilder_ == null) {
              result.strokeColor_ = strokeColor_;
            } else {
              result.strokeColor_ = strokeColorBuilder_.build();
            }
            if (strokeOpacityBuilder_ == null) {
              result.strokeOpacity_ = strokeOpacity_;
            } else {
              result.strokeOpacity_ = strokeOpacityBuilder_.build();
            }
            if (radiusTransitionBuilder_ == null) {
              result.radiusTransition_ = radiusTransition_;
            } else {
              result.radiusTransition_ = radiusTransitionBuilder_.build();
            }
            if (colorTransitionBuilder_ == null) {
              result.colorTransition_ = colorTransition_;
            } else {
              result.colorTransition_ = colorTransitionBuilder_.build();
            }
            if (blurTransitionBuilder_ == null) {
              result.blurTransition_ = blurTransition_;
            } else {
              result.blurTransition_ = blurTransitionBuilder_.build();
            }
            if (opacityTransitionBuilder_ == null) {
              result.opacityTransition_ = opacityTransition_;
            } else {
              result.opacityTransition_ = opacityTransitionBuilder_.build();
            }
            if (translateTransitionBuilder_ == null) {
              result.translateTransition_ = translateTransition_;
            } else {
              result.translateTransition_ = translateTransitionBuilder_.build();
            }
            if (strokeWidthTransitionBuilder_ == null) {
              result.strokeWidthTransition_ = strokeWidthTransition_;
            } else {
              result.strokeWidthTransition_ = strokeWidthTransitionBuilder_.build();
            }
            if (strokeColorTransitionBuilder_ == null) {
              result.strokeColorTransition_ = strokeColorTransition_;
            } else {
              result.strokeColorTransition_ = strokeColorTransitionBuilder_.build();
            }
            if (strokeOpacityTransitionBuilder_ == null) {
              result.strokeOpacityTransition_ = strokeOpacityTransition_;
            } else {
              result.strokeOpacityTransition_ = strokeOpacityTransitionBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) {
              return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle other) {
            if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance()) return this;
            if (other.hasVisible()) {
              mergeVisible(other.getVisible());
            }
            if (other.hasMinZoom()) {
              mergeMinZoom(other.getMinZoom());
            }
            if (other.hasMaxZoom()) {
              mergeMaxZoom(other.getMaxZoom());
            }
            if (other.hasRadius()) {
              mergeRadius(other.getRadius());
            }
            if (other.hasColor()) {
              mergeColor(other.getColor());
            }
            if (other.hasBlur()) {
              mergeBlur(other.getBlur());
            }
            if (other.hasOpacity()) {
              mergeOpacity(other.getOpacity());
            }
            if (!other.translate_.isEmpty()) {
              if (translate_.isEmpty()) {
                translate_ = other.translate_;
                bitField0_ = (bitField0_ & ~0x00000080);
              } else {
                ensureTranslateIsMutable();
                translate_.addAll(other.translate_);
              }
              onChanged();
            }
            if (other.getHasTranslate() != false) {
              setHasTranslate(other.getHasTranslate());
            }
            if (other.translateAnchor_ != 0) {
              setTranslateAnchorValue(other.getTranslateAnchorValue());
            }
            if (other.getHasTranslateAnchor() != false) {
              setHasTranslateAnchor(other.getHasTranslateAnchor());
            }
            if (other.pitchScale_ != 0) {
              setPitchScaleValue(other.getPitchScaleValue());
            }
            if (other.getHasPitchScale() != false) {
              setHasPitchScale(other.getHasPitchScale());
            }
            if (other.pitchAlignment_ != 0) {
              setPitchAlignmentValue(other.getPitchAlignmentValue());
            }
            if (other.getHasPitchAlignment() != false) {
              setHasPitchAlignment(other.getHasPitchAlignment());
            }
            if (other.hasStrokeWidth()) {
              mergeStrokeWidth(other.getStrokeWidth());
            }
            if (other.hasStrokeColor()) {
              mergeStrokeColor(other.getStrokeColor());
            }
            if (other.hasStrokeOpacity()) {
              mergeStrokeOpacity(other.getStrokeOpacity());
            }
            if (other.hasRadiusTransition()) {
              mergeRadiusTransition(other.getRadiusTransition());
            }
            if (other.hasColorTransition()) {
              mergeColorTransition(other.getColorTransition());
            }
            if (other.hasBlurTransition()) {
              mergeBlurTransition(other.getBlurTransition());
            }
            if (other.hasOpacityTransition()) {
              mergeOpacityTransition(other.getOpacityTransition());
            }
            if (other.hasTranslateTransition()) {
              mergeTranslateTransition(other.getTranslateTransition());
            }
            if (other.hasStrokeWidthTransition()) {
              mergeStrokeWidthTransition(other.getStrokeWidthTransition());
            }
            if (other.hasStrokeColorTransition()) {
              mergeStrokeColorTransition(other.getStrokeColorTransition());
            }
            if (other.hasStrokeOpacityTransition()) {
              mergeStrokeOpacityTransition(other.getStrokeOpacityTransition());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.BoolValue visible_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> visibleBuilder_;
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public boolean hasVisible() {
            return visibleBuilder_ != null || visible_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue getVisible() {
            if (visibleBuilder_ == null) {
              return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            } else {
              return visibleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visible_ = value;
              onChanged();
            } else {
              visibleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (visibleBuilder_ == null) {
              visible_ = builderForValue.build();
              onChanged();
            } else {
              visibleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder mergeVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (visible_ != null) {
                visible_ =
                  com.google.protobuf.BoolValue.newBuilder(visible_).mergeFrom(value).buildPartial();
              } else {
                visible_ = value;
              }
              onChanged();
            } else {
              visibleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder clearVisible() {
            if (visibleBuilder_ == null) {
              visible_ = null;
              onChanged();
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVisibleBuilder() {
            
            onChanged();
            return getVisibleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
            if (visibleBuilder_ != null) {
              return visibleBuilder_.getMessageOrBuilder();
            } else {
              return visible_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVisibleFieldBuilder() {
            if (visibleBuilder_ == null) {
              visibleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVisible(),
                      getParentForChildren(),
                      isClean());
              visible_ = null;
            }
            return visibleBuilder_;
          }

          private com.google.protobuf.FloatValue minZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> minZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public boolean hasMinZoom() {
            return minZoomBuilder_ != null || minZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue getMinZoom() {
            if (minZoomBuilder_ == null) {
              return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            } else {
              return minZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              minZoom_ = value;
              onChanged();
            } else {
              minZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (minZoomBuilder_ == null) {
              minZoom_ = builderForValue.build();
              onChanged();
            } else {
              minZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder mergeMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (minZoom_ != null) {
                minZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(minZoom_).mergeFrom(value).buildPartial();
              } else {
                minZoom_ = value;
              }
              onChanged();
            } else {
              minZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder clearMinZoom() {
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
              onChanged();
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMinZoomBuilder() {
            
            onChanged();
            return getMinZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
            if (minZoomBuilder_ != null) {
              return minZoomBuilder_.getMessageOrBuilder();
            } else {
              return minZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMinZoomFieldBuilder() {
            if (minZoomBuilder_ == null) {
              minZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMinZoom(),
                      getParentForChildren(),
                      isClean());
              minZoom_ = null;
            }
            return minZoomBuilder_;
          }

          private com.google.protobuf.FloatValue maxZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> maxZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public boolean hasMaxZoom() {
            return maxZoomBuilder_ != null || maxZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue getMaxZoom() {
            if (maxZoomBuilder_ == null) {
              return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            } else {
              return maxZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              maxZoom_ = value;
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = builderForValue.build();
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder mergeMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (maxZoom_ != null) {
                maxZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(maxZoom_).mergeFrom(value).buildPartial();
              } else {
                maxZoom_ = value;
              }
              onChanged();
            } else {
              maxZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder clearMaxZoom() {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
              onChanged();
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMaxZoomBuilder() {
            
            onChanged();
            return getMaxZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
            if (maxZoomBuilder_ != null) {
              return maxZoomBuilder_.getMessageOrBuilder();
            } else {
              return maxZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMaxZoomFieldBuilder() {
            if (maxZoomBuilder_ == null) {
              maxZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMaxZoom(),
                      getParentForChildren(),
                      isClean());
              maxZoom_ = null;
            }
            return maxZoomBuilder_;
          }

          private com.google.protobuf.FloatValue radius_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> radiusBuilder_;
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public boolean hasRadius() {
            return radiusBuilder_ != null || radius_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public com.google.protobuf.FloatValue getRadius() {
            if (radiusBuilder_ == null) {
              return radius_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : radius_;
            } else {
              return radiusBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public Builder setRadius(com.google.protobuf.FloatValue value) {
            if (radiusBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              radius_ = value;
              onChanged();
            } else {
              radiusBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public Builder setRadius(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (radiusBuilder_ == null) {
              radius_ = builderForValue.build();
              onChanged();
            } else {
              radiusBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public Builder mergeRadius(com.google.protobuf.FloatValue value) {
            if (radiusBuilder_ == null) {
              if (radius_ != null) {
                radius_ =
                  com.google.protobuf.FloatValue.newBuilder(radius_).mergeFrom(value).buildPartial();
              } else {
                radius_ = value;
              }
              onChanged();
            } else {
              radiusBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public Builder clearRadius() {
            if (radiusBuilder_ == null) {
              radius_ = null;
              onChanged();
            } else {
              radius_ = null;
              radiusBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public com.google.protobuf.FloatValue.Builder getRadiusBuilder() {
            
            onChanged();
            return getRadiusFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getRadiusOrBuilder() {
            if (radiusBuilder_ != null) {
              return radiusBuilder_.getMessageOrBuilder();
            } else {
              return radius_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : radius_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getRadiusFieldBuilder() {
            if (radiusBuilder_ == null) {
              radiusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getRadius(),
                      getParentForChildren(),
                      isClean());
              radius_ = null;
            }
            return radiusBuilder_;
          }

          private com.google.protobuf.Int32Value color_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> colorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public boolean hasColor() {
            return colorBuilder_ != null || color_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public com.google.protobuf.Int32Value getColor() {
            if (colorBuilder_ == null) {
              return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            } else {
              return colorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public Builder setColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              color_ = value;
              onChanged();
            } else {
              colorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public Builder setColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (colorBuilder_ == null) {
              color_ = builderForValue.build();
              onChanged();
            } else {
              colorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public Builder mergeColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (color_ != null) {
                color_ =
                  com.google.protobuf.Int32Value.newBuilder(color_).mergeFrom(value).buildPartial();
              } else {
                color_ = value;
              }
              onChanged();
            } else {
              colorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public Builder clearColor() {
            if (colorBuilder_ == null) {
              color_ = null;
              onChanged();
            } else {
              color_ = null;
              colorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public com.google.protobuf.Int32Value.Builder getColorBuilder() {
            
            onChanged();
            return getColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
            if (colorBuilder_ != null) {
              return colorBuilder_.getMessageOrBuilder();
            } else {
              return color_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getColorFieldBuilder() {
            if (colorBuilder_ == null) {
              colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getColor(),
                      getParentForChildren(),
                      isClean());
              color_ = null;
            }
            return colorBuilder_;
          }

          private com.google.protobuf.FloatValue blur_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> blurBuilder_;
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          public boolean hasBlur() {
            return blurBuilder_ != null || blur_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          public com.google.protobuf.FloatValue getBlur() {
            if (blurBuilder_ == null) {
              return blur_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : blur_;
            } else {
              return blurBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          public Builder setBlur(com.google.protobuf.FloatValue value) {
            if (blurBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              blur_ = value;
              onChanged();
            } else {
              blurBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          public Builder setBlur(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (blurBuilder_ == null) {
              blur_ = builderForValue.build();
              onChanged();
            } else {
              blurBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          public Builder mergeBlur(com.google.protobuf.FloatValue value) {
            if (blurBuilder_ == null) {
              if (blur_ != null) {
                blur_ =
                  com.google.protobuf.FloatValue.newBuilder(blur_).mergeFrom(value).buildPartial();
              } else {
                blur_ = value;
              }
              onChanged();
            } else {
              blurBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          public Builder clearBlur() {
            if (blurBuilder_ == null) {
              blur_ = null;
              onChanged();
            } else {
              blur_ = null;
              blurBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          public com.google.protobuf.FloatValue.Builder getBlurBuilder() {
            
            onChanged();
            return getBlurFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getBlurOrBuilder() {
            if (blurBuilder_ != null) {
              return blurBuilder_.getMessageOrBuilder();
            } else {
              return blur_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : blur_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getBlurFieldBuilder() {
            if (blurBuilder_ == null) {
              blurBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getBlur(),
                      getParentForChildren(),
                      isClean());
              blur_ = null;
            }
            return blurBuilder_;
          }

          private com.google.protobuf.FloatValue opacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> opacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          public boolean hasOpacity() {
            return opacityBuilder_ != null || opacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          public com.google.protobuf.FloatValue getOpacity() {
            if (opacityBuilder_ == null) {
              return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            } else {
              return opacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          public Builder setOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacity_ = value;
              onChanged();
            } else {
              opacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          public Builder setOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (opacityBuilder_ == null) {
              opacity_ = builderForValue.build();
              onChanged();
            } else {
              opacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          public Builder mergeOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (opacity_ != null) {
                opacity_ =
                  com.google.protobuf.FloatValue.newBuilder(opacity_).mergeFrom(value).buildPartial();
              } else {
                opacity_ = value;
              }
              onChanged();
            } else {
              opacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          public Builder clearOpacity() {
            if (opacityBuilder_ == null) {
              opacity_ = null;
              onChanged();
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          public com.google.protobuf.FloatValue.Builder getOpacityBuilder() {
            
            onChanged();
            return getOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
            if (opacityBuilder_ != null) {
              return opacityBuilder_.getMessageOrBuilder();
            } else {
              return opacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getOpacityFieldBuilder() {
            if (opacityBuilder_ == null) {
              opacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getOpacity(),
                      getParentForChildren(),
                      isClean());
              opacity_ = null;
            }
            return opacityBuilder_;
          }

          private com.google.protobuf.Internal.FloatList translate_ = emptyFloatList();
          private void ensureTranslateIsMutable() {
            if (!((bitField0_ & 0x00000080) != 0)) {
              translate_ = mutableCopy(translate_);
              bitField0_ |= 0x00000080;
             }
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public java.util.List<java.lang.Float>
              getTranslateList() {
            return ((bitField0_ & 0x00000080) != 0) ?
                     java.util.Collections.unmodifiableList(translate_) : translate_;
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public int getTranslateCount() {
            return translate_.size();
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public float getTranslate(int index) {
            return translate_.getFloat(index);
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public Builder setTranslate(
              int index, float value) {
            ensureTranslateIsMutable();
            translate_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public Builder addTranslate(float value) {
            ensureTranslateIsMutable();
            translate_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public Builder addAllTranslate(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureTranslateIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, translate_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public Builder clearTranslate() {
            translate_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000080);
            onChanged();
            return this;
          }

          private boolean hasTranslate_ ;
          /**
           * <code>bool has_translate = 9;</code>
           */
          public boolean getHasTranslate() {
            return hasTranslate_;
          }
          /**
           * <code>bool has_translate = 9;</code>
           */
          public Builder setHasTranslate(boolean value) {
            
            hasTranslate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_translate = 9;</code>
           */
          public Builder clearHasTranslate() {
            
            hasTranslate_ = false;
            onChanged();
            return this;
          }

          private int translateAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public int getTranslateAnchorValue() {
            return translateAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public Builder setTranslateAnchorValue(int value) {
            translateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(translateAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public Builder setTranslateAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            translateAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public Builder clearTranslateAnchor() {
            
            translateAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTranslateAnchor_ ;
          /**
           * <code>bool has_translate_anchor = 11;</code>
           */
          public boolean getHasTranslateAnchor() {
            return hasTranslateAnchor_;
          }
          /**
           * <code>bool has_translate_anchor = 11;</code>
           */
          public Builder setHasTranslateAnchor(boolean value) {
            
            hasTranslateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_translate_anchor = 11;</code>
           */
          public Builder clearHasTranslateAnchor() {
            
            hasTranslateAnchor_ = false;
            onChanged();
            return this;
          }

          private int pitchScale_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
           */
          public int getPitchScaleValue() {
            return pitchScale_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
           */
          public Builder setPitchScaleValue(int value) {
            pitchScale_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getPitchScale() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(pitchScale_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
           */
          public Builder setPitchScale(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            pitchScale_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_scale = 12;</code>
           */
          public Builder clearPitchScale() {
            
            pitchScale_ = 0;
            onChanged();
            return this;
          }

          private boolean hasPitchScale_ ;
          /**
           * <code>bool has_pitch_scale = 13;</code>
           */
          public boolean getHasPitchScale() {
            return hasPitchScale_;
          }
          /**
           * <code>bool has_pitch_scale = 13;</code>
           */
          public Builder setHasPitchScale(boolean value) {
            
            hasPitchScale_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_pitch_scale = 13;</code>
           */
          public Builder clearHasPitchScale() {
            
            hasPitchScale_ = false;
            onChanged();
            return this;
          }

          private int pitchAlignment_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
           */
          public int getPitchAlignmentValue() {
            return pitchAlignment_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
           */
          public Builder setPitchAlignmentValue(int value) {
            pitchAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getPitchAlignment() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(pitchAlignment_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
           */
          public Builder setPitchAlignment(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            pitchAlignment_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor pitch_alignment = 14;</code>
           */
          public Builder clearPitchAlignment() {
            
            pitchAlignment_ = 0;
            onChanged();
            return this;
          }

          private boolean hasPitchAlignment_ ;
          /**
           * <code>bool has_pitch_alignment = 15;</code>
           */
          public boolean getHasPitchAlignment() {
            return hasPitchAlignment_;
          }
          /**
           * <code>bool has_pitch_alignment = 15;</code>
           */
          public Builder setHasPitchAlignment(boolean value) {
            
            hasPitchAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_pitch_alignment = 15;</code>
           */
          public Builder clearHasPitchAlignment() {
            
            hasPitchAlignment_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue strokeWidth_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> strokeWidthBuilder_;
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          public boolean hasStrokeWidth() {
            return strokeWidthBuilder_ != null || strokeWidth_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          public com.google.protobuf.FloatValue getStrokeWidth() {
            if (strokeWidthBuilder_ == null) {
              return strokeWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : strokeWidth_;
            } else {
              return strokeWidthBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          public Builder setStrokeWidth(com.google.protobuf.FloatValue value) {
            if (strokeWidthBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              strokeWidth_ = value;
              onChanged();
            } else {
              strokeWidthBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          public Builder setStrokeWidth(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (strokeWidthBuilder_ == null) {
              strokeWidth_ = builderForValue.build();
              onChanged();
            } else {
              strokeWidthBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          public Builder mergeStrokeWidth(com.google.protobuf.FloatValue value) {
            if (strokeWidthBuilder_ == null) {
              if (strokeWidth_ != null) {
                strokeWidth_ =
                  com.google.protobuf.FloatValue.newBuilder(strokeWidth_).mergeFrom(value).buildPartial();
              } else {
                strokeWidth_ = value;
              }
              onChanged();
            } else {
              strokeWidthBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          public Builder clearStrokeWidth() {
            if (strokeWidthBuilder_ == null) {
              strokeWidth_ = null;
              onChanged();
            } else {
              strokeWidth_ = null;
              strokeWidthBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          public com.google.protobuf.FloatValue.Builder getStrokeWidthBuilder() {
            
            onChanged();
            return getStrokeWidthFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getStrokeWidthOrBuilder() {
            if (strokeWidthBuilder_ != null) {
              return strokeWidthBuilder_.getMessageOrBuilder();
            } else {
              return strokeWidth_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : strokeWidth_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_width = 16;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getStrokeWidthFieldBuilder() {
            if (strokeWidthBuilder_ == null) {
              strokeWidthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getStrokeWidth(),
                      getParentForChildren(),
                      isClean());
              strokeWidth_ = null;
            }
            return strokeWidthBuilder_;
          }

          private com.google.protobuf.Int32Value strokeColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> strokeColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          public boolean hasStrokeColor() {
            return strokeColorBuilder_ != null || strokeColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          public com.google.protobuf.Int32Value getStrokeColor() {
            if (strokeColorBuilder_ == null) {
              return strokeColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : strokeColor_;
            } else {
              return strokeColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          public Builder setStrokeColor(com.google.protobuf.Int32Value value) {
            if (strokeColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              strokeColor_ = value;
              onChanged();
            } else {
              strokeColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          public Builder setStrokeColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (strokeColorBuilder_ == null) {
              strokeColor_ = builderForValue.build();
              onChanged();
            } else {
              strokeColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          public Builder mergeStrokeColor(com.google.protobuf.Int32Value value) {
            if (strokeColorBuilder_ == null) {
              if (strokeColor_ != null) {
                strokeColor_ =
                  com.google.protobuf.Int32Value.newBuilder(strokeColor_).mergeFrom(value).buildPartial();
              } else {
                strokeColor_ = value;
              }
              onChanged();
            } else {
              strokeColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          public Builder clearStrokeColor() {
            if (strokeColorBuilder_ == null) {
              strokeColor_ = null;
              onChanged();
            } else {
              strokeColor_ = null;
              strokeColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          public com.google.protobuf.Int32Value.Builder getStrokeColorBuilder() {
            
            onChanged();
            return getStrokeColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getStrokeColorOrBuilder() {
            if (strokeColorBuilder_ != null) {
              return strokeColorBuilder_.getMessageOrBuilder();
            } else {
              return strokeColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : strokeColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value stroke_color = 17;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getStrokeColorFieldBuilder() {
            if (strokeColorBuilder_ == null) {
              strokeColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getStrokeColor(),
                      getParentForChildren(),
                      isClean());
              strokeColor_ = null;
            }
            return strokeColorBuilder_;
          }

          private com.google.protobuf.FloatValue strokeOpacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> strokeOpacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          public boolean hasStrokeOpacity() {
            return strokeOpacityBuilder_ != null || strokeOpacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          public com.google.protobuf.FloatValue getStrokeOpacity() {
            if (strokeOpacityBuilder_ == null) {
              return strokeOpacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : strokeOpacity_;
            } else {
              return strokeOpacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          public Builder setStrokeOpacity(com.google.protobuf.FloatValue value) {
            if (strokeOpacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              strokeOpacity_ = value;
              onChanged();
            } else {
              strokeOpacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          public Builder setStrokeOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (strokeOpacityBuilder_ == null) {
              strokeOpacity_ = builderForValue.build();
              onChanged();
            } else {
              strokeOpacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          public Builder mergeStrokeOpacity(com.google.protobuf.FloatValue value) {
            if (strokeOpacityBuilder_ == null) {
              if (strokeOpacity_ != null) {
                strokeOpacity_ =
                  com.google.protobuf.FloatValue.newBuilder(strokeOpacity_).mergeFrom(value).buildPartial();
              } else {
                strokeOpacity_ = value;
              }
              onChanged();
            } else {
              strokeOpacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          public Builder clearStrokeOpacity() {
            if (strokeOpacityBuilder_ == null) {
              strokeOpacity_ = null;
              onChanged();
            } else {
              strokeOpacity_ = null;
              strokeOpacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          public com.google.protobuf.FloatValue.Builder getStrokeOpacityBuilder() {
            
            onChanged();
            return getStrokeOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getStrokeOpacityOrBuilder() {
            if (strokeOpacityBuilder_ != null) {
              return strokeOpacityBuilder_.getMessageOrBuilder();
            } else {
              return strokeOpacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : strokeOpacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue stroke_opacity = 18;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getStrokeOpacityFieldBuilder() {
            if (strokeOpacityBuilder_ == null) {
              strokeOpacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getStrokeOpacity(),
                      getParentForChildren(),
                      isClean());
              strokeOpacity_ = null;
            }
            return strokeOpacityBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions radiusTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> radiusTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          public boolean hasRadiusTransition() {
            return radiusTransitionBuilder_ != null || radiusTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getRadiusTransition() {
            if (radiusTransitionBuilder_ == null) {
              return radiusTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : radiusTransition_;
            } else {
              return radiusTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          public Builder setRadiusTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (radiusTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              radiusTransition_ = value;
              onChanged();
            } else {
              radiusTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          public Builder setRadiusTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (radiusTransitionBuilder_ == null) {
              radiusTransition_ = builderForValue.build();
              onChanged();
            } else {
              radiusTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          public Builder mergeRadiusTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (radiusTransitionBuilder_ == null) {
              if (radiusTransition_ != null) {
                radiusTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(radiusTransition_).mergeFrom(value).buildPartial();
              } else {
                radiusTransition_ = value;
              }
              onChanged();
            } else {
              radiusTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          public Builder clearRadiusTransition() {
            if (radiusTransitionBuilder_ == null) {
              radiusTransition_ = null;
              onChanged();
            } else {
              radiusTransition_ = null;
              radiusTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getRadiusTransitionBuilder() {
            
            onChanged();
            return getRadiusTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getRadiusTransitionOrBuilder() {
            if (radiusTransitionBuilder_ != null) {
              return radiusTransitionBuilder_.getMessageOrBuilder();
            } else {
              return radiusTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : radiusTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 19;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getRadiusTransitionFieldBuilder() {
            if (radiusTransitionBuilder_ == null) {
              radiusTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getRadiusTransition(),
                      getParentForChildren(),
                      isClean());
              radiusTransition_ = null;
            }
            return radiusTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> colorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          public boolean hasColorTransition() {
            return colorTransitionBuilder_ != null || colorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
            if (colorTransitionBuilder_ == null) {
              return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            } else {
              return colorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          public Builder setColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorTransition_ = value;
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          public Builder setColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = builderForValue.build();
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          public Builder mergeColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (colorTransition_ != null) {
                colorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(colorTransition_).mergeFrom(value).buildPartial();
              } else {
                colorTransition_ = value;
              }
              onChanged();
            } else {
              colorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          public Builder clearColorTransition() {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
              onChanged();
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getColorTransitionBuilder() {
            
            onChanged();
            return getColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
            if (colorTransitionBuilder_ != null) {
              return colorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return colorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 20;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getColorTransitionFieldBuilder() {
            if (colorTransitionBuilder_ == null) {
              colorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getColorTransition(),
                      getParentForChildren(),
                      isClean());
              colorTransition_ = null;
            }
            return colorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions blurTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> blurTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          public boolean hasBlurTransition() {
            return blurTransitionBuilder_ != null || blurTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBlurTransition() {
            if (blurTransitionBuilder_ == null) {
              return blurTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : blurTransition_;
            } else {
              return blurTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          public Builder setBlurTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (blurTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              blurTransition_ = value;
              onChanged();
            } else {
              blurTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          public Builder setBlurTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (blurTransitionBuilder_ == null) {
              blurTransition_ = builderForValue.build();
              onChanged();
            } else {
              blurTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          public Builder mergeBlurTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (blurTransitionBuilder_ == null) {
              if (blurTransition_ != null) {
                blurTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(blurTransition_).mergeFrom(value).buildPartial();
              } else {
                blurTransition_ = value;
              }
              onChanged();
            } else {
              blurTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          public Builder clearBlurTransition() {
            if (blurTransitionBuilder_ == null) {
              blurTransition_ = null;
              onChanged();
            } else {
              blurTransition_ = null;
              blurTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getBlurTransitionBuilder() {
            
            onChanged();
            return getBlurTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBlurTransitionOrBuilder() {
            if (blurTransitionBuilder_ != null) {
              return blurTransitionBuilder_.getMessageOrBuilder();
            } else {
              return blurTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : blurTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 21;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getBlurTransitionFieldBuilder() {
            if (blurTransitionBuilder_ == null) {
              blurTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getBlurTransition(),
                      getParentForChildren(),
                      isClean());
              blurTransition_ = null;
            }
            return blurTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> opacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          public boolean hasOpacityTransition() {
            return opacityTransitionBuilder_ != null || opacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            } else {
              return opacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          public Builder setOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacityTransition_ = value;
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          public Builder setOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          public Builder mergeOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (opacityTransition_ != null) {
                opacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(opacityTransition_).mergeFrom(value).buildPartial();
              } else {
                opacityTransition_ = value;
              }
              onChanged();
            } else {
              opacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          public Builder clearOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
              onChanged();
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getOpacityTransitionBuilder() {
            
            onChanged();
            return getOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
            if (opacityTransitionBuilder_ != null) {
              return opacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return opacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 22;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getOpacityTransitionFieldBuilder() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              opacityTransition_ = null;
            }
            return opacityTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions translateTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> translateTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          public boolean hasTranslateTransition() {
            return translateTransitionBuilder_ != null || translateTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition() {
            if (translateTransitionBuilder_ == null) {
              return translateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
            } else {
              return translateTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          public Builder setTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (translateTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              translateTransition_ = value;
              onChanged();
            } else {
              translateTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          public Builder setTranslateTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = builderForValue.build();
              onChanged();
            } else {
              translateTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          public Builder mergeTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (translateTransitionBuilder_ == null) {
              if (translateTransition_ != null) {
                translateTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(translateTransition_).mergeFrom(value).buildPartial();
              } else {
                translateTransition_ = value;
              }
              onChanged();
            } else {
              translateTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          public Builder clearTranslateTransition() {
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = null;
              onChanged();
            } else {
              translateTransition_ = null;
              translateTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTranslateTransitionBuilder() {
            
            onChanged();
            return getTranslateTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder() {
            if (translateTransitionBuilder_ != null) {
              return translateTransitionBuilder_.getMessageOrBuilder();
            } else {
              return translateTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 23;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTranslateTransitionFieldBuilder() {
            if (translateTransitionBuilder_ == null) {
              translateTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTranslateTransition(),
                      getParentForChildren(),
                      isClean());
              translateTransition_ = null;
            }
            return translateTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions strokeWidthTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> strokeWidthTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          public boolean hasStrokeWidthTransition() {
            return strokeWidthTransitionBuilder_ != null || strokeWidthTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeWidthTransition() {
            if (strokeWidthTransitionBuilder_ == null) {
              return strokeWidthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeWidthTransition_;
            } else {
              return strokeWidthTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          public Builder setStrokeWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (strokeWidthTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              strokeWidthTransition_ = value;
              onChanged();
            } else {
              strokeWidthTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          public Builder setStrokeWidthTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (strokeWidthTransitionBuilder_ == null) {
              strokeWidthTransition_ = builderForValue.build();
              onChanged();
            } else {
              strokeWidthTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          public Builder mergeStrokeWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (strokeWidthTransitionBuilder_ == null) {
              if (strokeWidthTransition_ != null) {
                strokeWidthTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(strokeWidthTransition_).mergeFrom(value).buildPartial();
              } else {
                strokeWidthTransition_ = value;
              }
              onChanged();
            } else {
              strokeWidthTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          public Builder clearStrokeWidthTransition() {
            if (strokeWidthTransitionBuilder_ == null) {
              strokeWidthTransition_ = null;
              onChanged();
            } else {
              strokeWidthTransition_ = null;
              strokeWidthTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getStrokeWidthTransitionBuilder() {
            
            onChanged();
            return getStrokeWidthTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeWidthTransitionOrBuilder() {
            if (strokeWidthTransitionBuilder_ != null) {
              return strokeWidthTransitionBuilder_.getMessageOrBuilder();
            } else {
              return strokeWidthTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeWidthTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_width_transition = 24;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getStrokeWidthTransitionFieldBuilder() {
            if (strokeWidthTransitionBuilder_ == null) {
              strokeWidthTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getStrokeWidthTransition(),
                      getParentForChildren(),
                      isClean());
              strokeWidthTransition_ = null;
            }
            return strokeWidthTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions strokeColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> strokeColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          public boolean hasStrokeColorTransition() {
            return strokeColorTransitionBuilder_ != null || strokeColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeColorTransition() {
            if (strokeColorTransitionBuilder_ == null) {
              return strokeColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeColorTransition_;
            } else {
              return strokeColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          public Builder setStrokeColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (strokeColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              strokeColorTransition_ = value;
              onChanged();
            } else {
              strokeColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          public Builder setStrokeColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (strokeColorTransitionBuilder_ == null) {
              strokeColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              strokeColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          public Builder mergeStrokeColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (strokeColorTransitionBuilder_ == null) {
              if (strokeColorTransition_ != null) {
                strokeColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(strokeColorTransition_).mergeFrom(value).buildPartial();
              } else {
                strokeColorTransition_ = value;
              }
              onChanged();
            } else {
              strokeColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          public Builder clearStrokeColorTransition() {
            if (strokeColorTransitionBuilder_ == null) {
              strokeColorTransition_ = null;
              onChanged();
            } else {
              strokeColorTransition_ = null;
              strokeColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getStrokeColorTransitionBuilder() {
            
            onChanged();
            return getStrokeColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeColorTransitionOrBuilder() {
            if (strokeColorTransitionBuilder_ != null) {
              return strokeColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return strokeColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_color_transition = 25;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getStrokeColorTransitionFieldBuilder() {
            if (strokeColorTransitionBuilder_ == null) {
              strokeColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getStrokeColorTransition(),
                      getParentForChildren(),
                      isClean());
              strokeColorTransition_ = null;
            }
            return strokeColorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions strokeOpacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> strokeOpacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          public boolean hasStrokeOpacityTransition() {
            return strokeOpacityTransitionBuilder_ != null || strokeOpacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getStrokeOpacityTransition() {
            if (strokeOpacityTransitionBuilder_ == null) {
              return strokeOpacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeOpacityTransition_;
            } else {
              return strokeOpacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          public Builder setStrokeOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (strokeOpacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              strokeOpacityTransition_ = value;
              onChanged();
            } else {
              strokeOpacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          public Builder setStrokeOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (strokeOpacityTransitionBuilder_ == null) {
              strokeOpacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              strokeOpacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          public Builder mergeStrokeOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (strokeOpacityTransitionBuilder_ == null) {
              if (strokeOpacityTransition_ != null) {
                strokeOpacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(strokeOpacityTransition_).mergeFrom(value).buildPartial();
              } else {
                strokeOpacityTransition_ = value;
              }
              onChanged();
            } else {
              strokeOpacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          public Builder clearStrokeOpacityTransition() {
            if (strokeOpacityTransitionBuilder_ == null) {
              strokeOpacityTransition_ = null;
              onChanged();
            } else {
              strokeOpacityTransition_ = null;
              strokeOpacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getStrokeOpacityTransitionBuilder() {
            
            onChanged();
            return getStrokeOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getStrokeOpacityTransitionOrBuilder() {
            if (strokeOpacityTransitionBuilder_ != null) {
              return strokeOpacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return strokeOpacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : strokeOpacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions stroke_opacity_transition = 26;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getStrokeOpacityTransitionFieldBuilder() {
            if (strokeOpacityTransitionBuilder_ == null) {
              strokeOpacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getStrokeOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              strokeOpacityTransition_ = null;
            }
            return strokeOpacityTransitionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update.Circle)
        }

        // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update.Circle)
        private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle();
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Circle>
            PARSER = new com.google.protobuf.AbstractParser<Circle>() {
          @java.lang.Override
          public Circle parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Circle(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Circle> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Circle> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface FillExtrusionOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        boolean hasVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValue getVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        boolean hasMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValue getMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        boolean hasMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValue getMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue opacity = 4;</code>
         */
        boolean hasOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 4;</code>
         */
        com.google.protobuf.FloatValue getOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 4;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        boolean hasColor();
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        com.google.protobuf.Int32Value getColor();
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder();

        /**
         * <code>repeated float translate = 6;</code>
         */
        java.util.List<java.lang.Float> getTranslateList();
        /**
         * <code>repeated float translate = 6;</code>
         */
        int getTranslateCount();
        /**
         * <code>repeated float translate = 6;</code>
         */
        float getTranslate(int index);

        /**
         * <code>bool has_translate = 7;</code>
         */
        boolean getHasTranslate();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
         */
        int getTranslateAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor();

        /**
         * <code>bool has_translate_anchor = 9;</code>
         */
        boolean getHasTranslateAnchor();

        /**
         * <code>.google.protobuf.StringValue pattern = 10;</code>
         */
        boolean hasPattern();
        /**
         * <code>.google.protobuf.StringValue pattern = 10;</code>
         */
        com.google.protobuf.StringValue getPattern();
        /**
         * <code>.google.protobuf.StringValue pattern = 10;</code>
         */
        com.google.protobuf.StringValueOrBuilder getPatternOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue height = 11;</code>
         */
        boolean hasHeight();
        /**
         * <code>.google.protobuf.FloatValue height = 11;</code>
         */
        com.google.protobuf.FloatValue getHeight();
        /**
         * <code>.google.protobuf.FloatValue height = 11;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getHeightOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue base = 12;</code>
         */
        boolean hasBase();
        /**
         * <code>.google.protobuf.FloatValue base = 12;</code>
         */
        com.google.protobuf.FloatValue getBase();
        /**
         * <code>.google.protobuf.FloatValue base = 12;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getBaseOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
         */
        boolean hasVerticalGradient();
        /**
         * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
         */
        com.google.protobuf.BoolValue getVerticalGradient();
        /**
         * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVerticalGradientOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
         */
        boolean hasOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
         */
        boolean hasColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        boolean hasTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        boolean hasPatternTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
         */
        boolean hasHeightTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getHeightTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getHeightTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
         */
        boolean hasBaseTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBaseTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBaseTransitionOrBuilder();
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion}
       */
      public  static final class FillExtrusion extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion)
          FillExtrusionOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use FillExtrusion.newBuilder() to construct.
        private FillExtrusion(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private FillExtrusion() {
          translate_ = emptyFloatList();
          translateAnchor_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private FillExtrusion(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (visible_ != null) {
                    subBuilder = visible_.toBuilder();
                  }
                  visible_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visible_);
                    visible_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (minZoom_ != null) {
                    subBuilder = minZoom_.toBuilder();
                  }
                  minZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minZoom_);
                    minZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (maxZoom_ != null) {
                    subBuilder = maxZoom_.toBuilder();
                  }
                  maxZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxZoom_);
                    maxZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (opacity_ != null) {
                    subBuilder = opacity_.toBuilder();
                  }
                  opacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacity_);
                    opacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (color_ != null) {
                    subBuilder = color_.toBuilder();
                  }
                  color_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(color_);
                    color_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 53: {
                  if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                    translate_ = newFloatList();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  translate_.addFloat(input.readFloat());
                  break;
                }
                case 50: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                    translate_ = newFloatList();
                    mutable_bitField0_ |= 0x00000020;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    translate_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 56: {

                  hasTranslate_ = input.readBool();
                  break;
                }
                case 64: {
                  int rawValue = input.readEnum();

                  translateAnchor_ = rawValue;
                  break;
                }
                case 72: {

                  hasTranslateAnchor_ = input.readBool();
                  break;
                }
                case 82: {
                  com.google.protobuf.StringValue.Builder subBuilder = null;
                  if (pattern_ != null) {
                    subBuilder = pattern_.toBuilder();
                  }
                  pattern_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pattern_);
                    pattern_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (height_ != null) {
                    subBuilder = height_.toBuilder();
                  }
                  height_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(height_);
                    height_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 98: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (base_ != null) {
                    subBuilder = base_.toBuilder();
                  }
                  base_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(base_);
                    base_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 106: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (verticalGradient_ != null) {
                    subBuilder = verticalGradient_.toBuilder();
                  }
                  verticalGradient_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(verticalGradient_);
                    verticalGradient_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 114: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (opacityTransition_ != null) {
                    subBuilder = opacityTransition_.toBuilder();
                  }
                  opacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacityTransition_);
                    opacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 122: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (colorTransition_ != null) {
                    subBuilder = colorTransition_.toBuilder();
                  }
                  colorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorTransition_);
                    colorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 130: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (translateTransition_ != null) {
                    subBuilder = translateTransition_.toBuilder();
                  }
                  translateTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(translateTransition_);
                    translateTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 138: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (patternTransition_ != null) {
                    subBuilder = patternTransition_.toBuilder();
                  }
                  patternTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(patternTransition_);
                    patternTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 146: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (heightTransition_ != null) {
                    subBuilder = heightTransition_.toBuilder();
                  }
                  heightTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(heightTransition_);
                    heightTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 154: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (baseTransition_ != null) {
                    subBuilder = baseTransition_.toBuilder();
                  }
                  baseTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(baseTransition_);
                    baseTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000020) != 0)) {
              translate_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.Builder.class);
        }

        private int bitField0_;
        public static final int VISIBLE_FIELD_NUMBER = 1;
        private com.google.protobuf.BoolValue visible_;
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public boolean hasVisible() {
          return visible_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValue getVisible() {
          return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
          return getVisible();
        }

        public static final int MIN_ZOOM_FIELD_NUMBER = 2;
        private com.google.protobuf.FloatValue minZoom_;
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public boolean hasMinZoom() {
          return minZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValue getMinZoom() {
          return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
          return getMinZoom();
        }

        public static final int MAX_ZOOM_FIELD_NUMBER = 3;
        private com.google.protobuf.FloatValue maxZoom_;
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public boolean hasMaxZoom() {
          return maxZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValue getMaxZoom() {
          return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
          return getMaxZoom();
        }

        public static final int OPACITY_FIELD_NUMBER = 4;
        private com.google.protobuf.FloatValue opacity_;
        /**
         * <code>.google.protobuf.FloatValue opacity = 4;</code>
         */
        public boolean hasOpacity() {
          return opacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 4;</code>
         */
        public com.google.protobuf.FloatValue getOpacity() {
          return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 4;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
          return getOpacity();
        }

        public static final int COLOR_FIELD_NUMBER = 5;
        private com.google.protobuf.Int32Value color_;
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        public boolean hasColor() {
          return color_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        public com.google.protobuf.Int32Value getColor() {
          return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 5;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
          return getColor();
        }

        public static final int TRANSLATE_FIELD_NUMBER = 6;
        private com.google.protobuf.Internal.FloatList translate_;
        /**
         * <code>repeated float translate = 6;</code>
         */
        public java.util.List<java.lang.Float>
            getTranslateList() {
          return translate_;
        }
        /**
         * <code>repeated float translate = 6;</code>
         */
        public int getTranslateCount() {
          return translate_.size();
        }
        /**
         * <code>repeated float translate = 6;</code>
         */
        public float getTranslate(int index) {
          return translate_.getFloat(index);
        }
        private int translateMemoizedSerializedSize = -1;

        public static final int HAS_TRANSLATE_FIELD_NUMBER = 7;
        private boolean hasTranslate_;
        /**
         * <code>bool has_translate = 7;</code>
         */
        public boolean getHasTranslate() {
          return hasTranslate_;
        }

        public static final int TRANSLATE_ANCHOR_FIELD_NUMBER = 8;
        private int translateAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
         */
        public int getTranslateAnchorValue() {
          return translateAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(translateAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_TRANSLATE_ANCHOR_FIELD_NUMBER = 9;
        private boolean hasTranslateAnchor_;
        /**
         * <code>bool has_translate_anchor = 9;</code>
         */
        public boolean getHasTranslateAnchor() {
          return hasTranslateAnchor_;
        }

        public static final int PATTERN_FIELD_NUMBER = 10;
        private com.google.protobuf.StringValue pattern_;
        /**
         * <code>.google.protobuf.StringValue pattern = 10;</code>
         */
        public boolean hasPattern() {
          return pattern_ != null;
        }
        /**
         * <code>.google.protobuf.StringValue pattern = 10;</code>
         */
        public com.google.protobuf.StringValue getPattern() {
          return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
        }
        /**
         * <code>.google.protobuf.StringValue pattern = 10;</code>
         */
        public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
          return getPattern();
        }

        public static final int HEIGHT_FIELD_NUMBER = 11;
        private com.google.protobuf.FloatValue height_;
        /**
         * <code>.google.protobuf.FloatValue height = 11;</code>
         */
        public boolean hasHeight() {
          return height_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue height = 11;</code>
         */
        public com.google.protobuf.FloatValue getHeight() {
          return height_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : height_;
        }
        /**
         * <code>.google.protobuf.FloatValue height = 11;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getHeightOrBuilder() {
          return getHeight();
        }

        public static final int BASE_FIELD_NUMBER = 12;
        private com.google.protobuf.FloatValue base_;
        /**
         * <code>.google.protobuf.FloatValue base = 12;</code>
         */
        public boolean hasBase() {
          return base_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue base = 12;</code>
         */
        public com.google.protobuf.FloatValue getBase() {
          return base_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : base_;
        }
        /**
         * <code>.google.protobuf.FloatValue base = 12;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getBaseOrBuilder() {
          return getBase();
        }

        public static final int VERTICAL_GRADIENT_FIELD_NUMBER = 13;
        private com.google.protobuf.BoolValue verticalGradient_;
        /**
         * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
         */
        public boolean hasVerticalGradient() {
          return verticalGradient_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
         */
        public com.google.protobuf.BoolValue getVerticalGradient() {
          return verticalGradient_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : verticalGradient_;
        }
        /**
         * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVerticalGradientOrBuilder() {
          return getVerticalGradient();
        }

        public static final int OPACITY_TRANSITION_FIELD_NUMBER = 14;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
         */
        public boolean hasOpacityTransition() {
          return opacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
          return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
          return getOpacityTransition();
        }

        public static final int COLOR_TRANSITION_FIELD_NUMBER = 15;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
         */
        public boolean hasColorTransition() {
          return colorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
          return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
          return getColorTransition();
        }

        public static final int TRANSLATE_TRANSITION_FIELD_NUMBER = 16;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions translateTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        public boolean hasTranslateTransition() {
          return translateTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition() {
          return translateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder() {
          return getTranslateTransition();
        }

        public static final int PATTERN_TRANSITION_FIELD_NUMBER = 17;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions patternTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        public boolean hasPatternTransition() {
          return patternTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition() {
          return patternTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder() {
          return getPatternTransition();
        }

        public static final int HEIGHT_TRANSITION_FIELD_NUMBER = 18;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions heightTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
         */
        public boolean hasHeightTransition() {
          return heightTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getHeightTransition() {
          return heightTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : heightTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getHeightTransitionOrBuilder() {
          return getHeightTransition();
        }

        public static final int BASE_TRANSITION_FIELD_NUMBER = 19;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions baseTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
         */
        public boolean hasBaseTransition() {
          return baseTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBaseTransition() {
          return baseTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : baseTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBaseTransitionOrBuilder() {
          return getBaseTransition();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (visible_ != null) {
            output.writeMessage(1, getVisible());
          }
          if (minZoom_ != null) {
            output.writeMessage(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            output.writeMessage(3, getMaxZoom());
          }
          if (opacity_ != null) {
            output.writeMessage(4, getOpacity());
          }
          if (color_ != null) {
            output.writeMessage(5, getColor());
          }
          if (getTranslateList().size() > 0) {
            output.writeUInt32NoTag(50);
            output.writeUInt32NoTag(translateMemoizedSerializedSize);
          }
          for (int i = 0; i < translate_.size(); i++) {
            output.writeFloatNoTag(translate_.getFloat(i));
          }
          if (hasTranslate_ != false) {
            output.writeBool(7, hasTranslate_);
          }
          if (translateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(8, translateAnchor_);
          }
          if (hasTranslateAnchor_ != false) {
            output.writeBool(9, hasTranslateAnchor_);
          }
          if (pattern_ != null) {
            output.writeMessage(10, getPattern());
          }
          if (height_ != null) {
            output.writeMessage(11, getHeight());
          }
          if (base_ != null) {
            output.writeMessage(12, getBase());
          }
          if (verticalGradient_ != null) {
            output.writeMessage(13, getVerticalGradient());
          }
          if (opacityTransition_ != null) {
            output.writeMessage(14, getOpacityTransition());
          }
          if (colorTransition_ != null) {
            output.writeMessage(15, getColorTransition());
          }
          if (translateTransition_ != null) {
            output.writeMessage(16, getTranslateTransition());
          }
          if (patternTransition_ != null) {
            output.writeMessage(17, getPatternTransition());
          }
          if (heightTransition_ != null) {
            output.writeMessage(18, getHeightTransition());
          }
          if (baseTransition_ != null) {
            output.writeMessage(19, getBaseTransition());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (visible_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getVisible());
          }
          if (minZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getMaxZoom());
          }
          if (opacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getOpacity());
          }
          if (color_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getColor());
          }
          {
            int dataSize = 0;
            dataSize = 4 * getTranslateList().size();
            size += dataSize;
            if (!getTranslateList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            translateMemoizedSerializedSize = dataSize;
          }
          if (hasTranslate_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(7, hasTranslate_);
          }
          if (translateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(8, translateAnchor_);
          }
          if (hasTranslateAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(9, hasTranslateAnchor_);
          }
          if (pattern_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, getPattern());
          }
          if (height_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(11, getHeight());
          }
          if (base_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(12, getBase());
          }
          if (verticalGradient_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(13, getVerticalGradient());
          }
          if (opacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(14, getOpacityTransition());
          }
          if (colorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(15, getColorTransition());
          }
          if (translateTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(16, getTranslateTransition());
          }
          if (patternTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(17, getPatternTransition());
          }
          if (heightTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(18, getHeightTransition());
          }
          if (baseTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(19, getBaseTransition());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion)) {
            return super.equals(obj);
          }
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) obj;

          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (!getVisible()
                .equals(other.getVisible())) return false;
          }
          if (hasMinZoom() != other.hasMinZoom()) return false;
          if (hasMinZoom()) {
            if (!getMinZoom()
                .equals(other.getMinZoom())) return false;
          }
          if (hasMaxZoom() != other.hasMaxZoom()) return false;
          if (hasMaxZoom()) {
            if (!getMaxZoom()
                .equals(other.getMaxZoom())) return false;
          }
          if (hasOpacity() != other.hasOpacity()) return false;
          if (hasOpacity()) {
            if (!getOpacity()
                .equals(other.getOpacity())) return false;
          }
          if (hasColor() != other.hasColor()) return false;
          if (hasColor()) {
            if (!getColor()
                .equals(other.getColor())) return false;
          }
          if (!getTranslateList()
              .equals(other.getTranslateList())) return false;
          if (getHasTranslate()
              != other.getHasTranslate()) return false;
          if (translateAnchor_ != other.translateAnchor_) return false;
          if (getHasTranslateAnchor()
              != other.getHasTranslateAnchor()) return false;
          if (hasPattern() != other.hasPattern()) return false;
          if (hasPattern()) {
            if (!getPattern()
                .equals(other.getPattern())) return false;
          }
          if (hasHeight() != other.hasHeight()) return false;
          if (hasHeight()) {
            if (!getHeight()
                .equals(other.getHeight())) return false;
          }
          if (hasBase() != other.hasBase()) return false;
          if (hasBase()) {
            if (!getBase()
                .equals(other.getBase())) return false;
          }
          if (hasVerticalGradient() != other.hasVerticalGradient()) return false;
          if (hasVerticalGradient()) {
            if (!getVerticalGradient()
                .equals(other.getVerticalGradient())) return false;
          }
          if (hasOpacityTransition() != other.hasOpacityTransition()) return false;
          if (hasOpacityTransition()) {
            if (!getOpacityTransition()
                .equals(other.getOpacityTransition())) return false;
          }
          if (hasColorTransition() != other.hasColorTransition()) return false;
          if (hasColorTransition()) {
            if (!getColorTransition()
                .equals(other.getColorTransition())) return false;
          }
          if (hasTranslateTransition() != other.hasTranslateTransition()) return false;
          if (hasTranslateTransition()) {
            if (!getTranslateTransition()
                .equals(other.getTranslateTransition())) return false;
          }
          if (hasPatternTransition() != other.hasPatternTransition()) return false;
          if (hasPatternTransition()) {
            if (!getPatternTransition()
                .equals(other.getPatternTransition())) return false;
          }
          if (hasHeightTransition() != other.hasHeightTransition()) return false;
          if (hasHeightTransition()) {
            if (!getHeightTransition()
                .equals(other.getHeightTransition())) return false;
          }
          if (hasBaseTransition() != other.hasBaseTransition()) return false;
          if (hasBaseTransition()) {
            if (!getBaseTransition()
                .equals(other.getBaseTransition())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + getVisible().hashCode();
          }
          if (hasMinZoom()) {
            hash = (37 * hash) + MIN_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMinZoom().hashCode();
          }
          if (hasMaxZoom()) {
            hash = (37 * hash) + MAX_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMaxZoom().hashCode();
          }
          if (hasOpacity()) {
            hash = (37 * hash) + OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getOpacity().hashCode();
          }
          if (hasColor()) {
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor().hashCode();
          }
          if (getTranslateCount() > 0) {
            hash = (37 * hash) + TRANSLATE_FIELD_NUMBER;
            hash = (53 * hash) + getTranslateList().hashCode();
          }
          hash = (37 * hash) + HAS_TRANSLATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTranslate());
          hash = (37 * hash) + TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + translateAnchor_;
          hash = (37 * hash) + HAS_TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTranslateAnchor());
          if (hasPattern()) {
            hash = (37 * hash) + PATTERN_FIELD_NUMBER;
            hash = (53 * hash) + getPattern().hashCode();
          }
          if (hasHeight()) {
            hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getHeight().hashCode();
          }
          if (hasBase()) {
            hash = (37 * hash) + BASE_FIELD_NUMBER;
            hash = (53 * hash) + getBase().hashCode();
          }
          if (hasVerticalGradient()) {
            hash = (37 * hash) + VERTICAL_GRADIENT_FIELD_NUMBER;
            hash = (53 * hash) + getVerticalGradient().hashCode();
          }
          if (hasOpacityTransition()) {
            hash = (37 * hash) + OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getOpacityTransition().hashCode();
          }
          if (hasColorTransition()) {
            hash = (37 * hash) + COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getColorTransition().hashCode();
          }
          if (hasTranslateTransition()) {
            hash = (37 * hash) + TRANSLATE_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTranslateTransition().hashCode();
          }
          if (hasPatternTransition()) {
            hash = (37 * hash) + PATTERN_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getPatternTransition().hashCode();
          }
          if (hasHeightTransition()) {
            hash = (37 * hash) + HEIGHT_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getHeightTransition().hashCode();
          }
          if (hasBaseTransition()) {
            hash = (37 * hash) + BASE_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getBaseTransition().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion)
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusionOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.Builder.class);
          }

          // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (visibleBuilder_ == null) {
              visible_ = null;
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }
            if (opacityBuilder_ == null) {
              opacity_ = null;
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }
            if (colorBuilder_ == null) {
              color_ = null;
            } else {
              color_ = null;
              colorBuilder_ = null;
            }
            translate_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000020);
            hasTranslate_ = false;

            translateAnchor_ = 0;

            hasTranslateAnchor_ = false;

            if (patternBuilder_ == null) {
              pattern_ = null;
            } else {
              pattern_ = null;
              patternBuilder_ = null;
            }
            if (heightBuilder_ == null) {
              height_ = null;
            } else {
              height_ = null;
              heightBuilder_ = null;
            }
            if (baseBuilder_ == null) {
              base_ = null;
            } else {
              base_ = null;
              baseBuilder_ = null;
            }
            if (verticalGradientBuilder_ == null) {
              verticalGradient_ = null;
            } else {
              verticalGradient_ = null;
              verticalGradientBuilder_ = null;
            }
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = null;
            } else {
              translateTransition_ = null;
              translateTransitionBuilder_ = null;
            }
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = null;
            } else {
              patternTransition_ = null;
              patternTransitionBuilder_ = null;
            }
            if (heightTransitionBuilder_ == null) {
              heightTransition_ = null;
            } else {
              heightTransition_ = null;
              heightTransitionBuilder_ = null;
            }
            if (baseTransitionBuilder_ == null) {
              baseTransition_ = null;
            } else {
              baseTransition_ = null;
              baseTransitionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_descriptor;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion getDefaultInstanceForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance();
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion build() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion buildPartial() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (visibleBuilder_ == null) {
              result.visible_ = visible_;
            } else {
              result.visible_ = visibleBuilder_.build();
            }
            if (minZoomBuilder_ == null) {
              result.minZoom_ = minZoom_;
            } else {
              result.minZoom_ = minZoomBuilder_.build();
            }
            if (maxZoomBuilder_ == null) {
              result.maxZoom_ = maxZoom_;
            } else {
              result.maxZoom_ = maxZoomBuilder_.build();
            }
            if (opacityBuilder_ == null) {
              result.opacity_ = opacity_;
            } else {
              result.opacity_ = opacityBuilder_.build();
            }
            if (colorBuilder_ == null) {
              result.color_ = color_;
            } else {
              result.color_ = colorBuilder_.build();
            }
            if (((bitField0_ & 0x00000020) != 0)) {
              translate_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.translate_ = translate_;
            result.hasTranslate_ = hasTranslate_;
            result.translateAnchor_ = translateAnchor_;
            result.hasTranslateAnchor_ = hasTranslateAnchor_;
            if (patternBuilder_ == null) {
              result.pattern_ = pattern_;
            } else {
              result.pattern_ = patternBuilder_.build();
            }
            if (heightBuilder_ == null) {
              result.height_ = height_;
            } else {
              result.height_ = heightBuilder_.build();
            }
            if (baseBuilder_ == null) {
              result.base_ = base_;
            } else {
              result.base_ = baseBuilder_.build();
            }
            if (verticalGradientBuilder_ == null) {
              result.verticalGradient_ = verticalGradient_;
            } else {
              result.verticalGradient_ = verticalGradientBuilder_.build();
            }
            if (opacityTransitionBuilder_ == null) {
              result.opacityTransition_ = opacityTransition_;
            } else {
              result.opacityTransition_ = opacityTransitionBuilder_.build();
            }
            if (colorTransitionBuilder_ == null) {
              result.colorTransition_ = colorTransition_;
            } else {
              result.colorTransition_ = colorTransitionBuilder_.build();
            }
            if (translateTransitionBuilder_ == null) {
              result.translateTransition_ = translateTransition_;
            } else {
              result.translateTransition_ = translateTransitionBuilder_.build();
            }
            if (patternTransitionBuilder_ == null) {
              result.patternTransition_ = patternTransition_;
            } else {
              result.patternTransition_ = patternTransitionBuilder_.build();
            }
            if (heightTransitionBuilder_ == null) {
              result.heightTransition_ = heightTransition_;
            } else {
              result.heightTransition_ = heightTransitionBuilder_.build();
            }
            if (baseTransitionBuilder_ == null) {
              result.baseTransition_ = baseTransition_;
            } else {
              result.baseTransition_ = baseTransitionBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) {
              return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion other) {
            if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance()) return this;
            if (other.hasVisible()) {
              mergeVisible(other.getVisible());
            }
            if (other.hasMinZoom()) {
              mergeMinZoom(other.getMinZoom());
            }
            if (other.hasMaxZoom()) {
              mergeMaxZoom(other.getMaxZoom());
            }
            if (other.hasOpacity()) {
              mergeOpacity(other.getOpacity());
            }
            if (other.hasColor()) {
              mergeColor(other.getColor());
            }
            if (!other.translate_.isEmpty()) {
              if (translate_.isEmpty()) {
                translate_ = other.translate_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureTranslateIsMutable();
                translate_.addAll(other.translate_);
              }
              onChanged();
            }
            if (other.getHasTranslate() != false) {
              setHasTranslate(other.getHasTranslate());
            }
            if (other.translateAnchor_ != 0) {
              setTranslateAnchorValue(other.getTranslateAnchorValue());
            }
            if (other.getHasTranslateAnchor() != false) {
              setHasTranslateAnchor(other.getHasTranslateAnchor());
            }
            if (other.hasPattern()) {
              mergePattern(other.getPattern());
            }
            if (other.hasHeight()) {
              mergeHeight(other.getHeight());
            }
            if (other.hasBase()) {
              mergeBase(other.getBase());
            }
            if (other.hasVerticalGradient()) {
              mergeVerticalGradient(other.getVerticalGradient());
            }
            if (other.hasOpacityTransition()) {
              mergeOpacityTransition(other.getOpacityTransition());
            }
            if (other.hasColorTransition()) {
              mergeColorTransition(other.getColorTransition());
            }
            if (other.hasTranslateTransition()) {
              mergeTranslateTransition(other.getTranslateTransition());
            }
            if (other.hasPatternTransition()) {
              mergePatternTransition(other.getPatternTransition());
            }
            if (other.hasHeightTransition()) {
              mergeHeightTransition(other.getHeightTransition());
            }
            if (other.hasBaseTransition()) {
              mergeBaseTransition(other.getBaseTransition());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.BoolValue visible_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> visibleBuilder_;
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public boolean hasVisible() {
            return visibleBuilder_ != null || visible_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue getVisible() {
            if (visibleBuilder_ == null) {
              return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            } else {
              return visibleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visible_ = value;
              onChanged();
            } else {
              visibleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (visibleBuilder_ == null) {
              visible_ = builderForValue.build();
              onChanged();
            } else {
              visibleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder mergeVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (visible_ != null) {
                visible_ =
                  com.google.protobuf.BoolValue.newBuilder(visible_).mergeFrom(value).buildPartial();
              } else {
                visible_ = value;
              }
              onChanged();
            } else {
              visibleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder clearVisible() {
            if (visibleBuilder_ == null) {
              visible_ = null;
              onChanged();
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVisibleBuilder() {
            
            onChanged();
            return getVisibleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
            if (visibleBuilder_ != null) {
              return visibleBuilder_.getMessageOrBuilder();
            } else {
              return visible_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVisibleFieldBuilder() {
            if (visibleBuilder_ == null) {
              visibleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVisible(),
                      getParentForChildren(),
                      isClean());
              visible_ = null;
            }
            return visibleBuilder_;
          }

          private com.google.protobuf.FloatValue minZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> minZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public boolean hasMinZoom() {
            return minZoomBuilder_ != null || minZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue getMinZoom() {
            if (minZoomBuilder_ == null) {
              return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            } else {
              return minZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              minZoom_ = value;
              onChanged();
            } else {
              minZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (minZoomBuilder_ == null) {
              minZoom_ = builderForValue.build();
              onChanged();
            } else {
              minZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder mergeMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (minZoom_ != null) {
                minZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(minZoom_).mergeFrom(value).buildPartial();
              } else {
                minZoom_ = value;
              }
              onChanged();
            } else {
              minZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder clearMinZoom() {
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
              onChanged();
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMinZoomBuilder() {
            
            onChanged();
            return getMinZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
            if (minZoomBuilder_ != null) {
              return minZoomBuilder_.getMessageOrBuilder();
            } else {
              return minZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMinZoomFieldBuilder() {
            if (minZoomBuilder_ == null) {
              minZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMinZoom(),
                      getParentForChildren(),
                      isClean());
              minZoom_ = null;
            }
            return minZoomBuilder_;
          }

          private com.google.protobuf.FloatValue maxZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> maxZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public boolean hasMaxZoom() {
            return maxZoomBuilder_ != null || maxZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue getMaxZoom() {
            if (maxZoomBuilder_ == null) {
              return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            } else {
              return maxZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              maxZoom_ = value;
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = builderForValue.build();
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder mergeMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (maxZoom_ != null) {
                maxZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(maxZoom_).mergeFrom(value).buildPartial();
              } else {
                maxZoom_ = value;
              }
              onChanged();
            } else {
              maxZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder clearMaxZoom() {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
              onChanged();
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMaxZoomBuilder() {
            
            onChanged();
            return getMaxZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
            if (maxZoomBuilder_ != null) {
              return maxZoomBuilder_.getMessageOrBuilder();
            } else {
              return maxZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMaxZoomFieldBuilder() {
            if (maxZoomBuilder_ == null) {
              maxZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMaxZoom(),
                      getParentForChildren(),
                      isClean());
              maxZoom_ = null;
            }
            return maxZoomBuilder_;
          }

          private com.google.protobuf.FloatValue opacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> opacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          public boolean hasOpacity() {
            return opacityBuilder_ != null || opacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          public com.google.protobuf.FloatValue getOpacity() {
            if (opacityBuilder_ == null) {
              return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            } else {
              return opacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          public Builder setOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacity_ = value;
              onChanged();
            } else {
              opacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          public Builder setOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (opacityBuilder_ == null) {
              opacity_ = builderForValue.build();
              onChanged();
            } else {
              opacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          public Builder mergeOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (opacity_ != null) {
                opacity_ =
                  com.google.protobuf.FloatValue.newBuilder(opacity_).mergeFrom(value).buildPartial();
              } else {
                opacity_ = value;
              }
              onChanged();
            } else {
              opacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          public Builder clearOpacity() {
            if (opacityBuilder_ == null) {
              opacity_ = null;
              onChanged();
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          public com.google.protobuf.FloatValue.Builder getOpacityBuilder() {
            
            onChanged();
            return getOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
            if (opacityBuilder_ != null) {
              return opacityBuilder_.getMessageOrBuilder();
            } else {
              return opacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getOpacityFieldBuilder() {
            if (opacityBuilder_ == null) {
              opacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getOpacity(),
                      getParentForChildren(),
                      isClean());
              opacity_ = null;
            }
            return opacityBuilder_;
          }

          private com.google.protobuf.Int32Value color_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> colorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public boolean hasColor() {
            return colorBuilder_ != null || color_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public com.google.protobuf.Int32Value getColor() {
            if (colorBuilder_ == null) {
              return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            } else {
              return colorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public Builder setColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              color_ = value;
              onChanged();
            } else {
              colorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public Builder setColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (colorBuilder_ == null) {
              color_ = builderForValue.build();
              onChanged();
            } else {
              colorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public Builder mergeColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (color_ != null) {
                color_ =
                  com.google.protobuf.Int32Value.newBuilder(color_).mergeFrom(value).buildPartial();
              } else {
                color_ = value;
              }
              onChanged();
            } else {
              colorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public Builder clearColor() {
            if (colorBuilder_ == null) {
              color_ = null;
              onChanged();
            } else {
              color_ = null;
              colorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public com.google.protobuf.Int32Value.Builder getColorBuilder() {
            
            onChanged();
            return getColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
            if (colorBuilder_ != null) {
              return colorBuilder_.getMessageOrBuilder();
            } else {
              return color_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getColorFieldBuilder() {
            if (colorBuilder_ == null) {
              colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getColor(),
                      getParentForChildren(),
                      isClean());
              color_ = null;
            }
            return colorBuilder_;
          }

          private com.google.protobuf.Internal.FloatList translate_ = emptyFloatList();
          private void ensureTranslateIsMutable() {
            if (!((bitField0_ & 0x00000020) != 0)) {
              translate_ = mutableCopy(translate_);
              bitField0_ |= 0x00000020;
             }
          }
          /**
           * <code>repeated float translate = 6;</code>
           */
          public java.util.List<java.lang.Float>
              getTranslateList() {
            return ((bitField0_ & 0x00000020) != 0) ?
                     java.util.Collections.unmodifiableList(translate_) : translate_;
          }
          /**
           * <code>repeated float translate = 6;</code>
           */
          public int getTranslateCount() {
            return translate_.size();
          }
          /**
           * <code>repeated float translate = 6;</code>
           */
          public float getTranslate(int index) {
            return translate_.getFloat(index);
          }
          /**
           * <code>repeated float translate = 6;</code>
           */
          public Builder setTranslate(
              int index, float value) {
            ensureTranslateIsMutable();
            translate_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 6;</code>
           */
          public Builder addTranslate(float value) {
            ensureTranslateIsMutable();
            translate_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 6;</code>
           */
          public Builder addAllTranslate(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureTranslateIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, translate_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 6;</code>
           */
          public Builder clearTranslate() {
            translate_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
            return this;
          }

          private boolean hasTranslate_ ;
          /**
           * <code>bool has_translate = 7;</code>
           */
          public boolean getHasTranslate() {
            return hasTranslate_;
          }
          /**
           * <code>bool has_translate = 7;</code>
           */
          public Builder setHasTranslate(boolean value) {
            
            hasTranslate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_translate = 7;</code>
           */
          public Builder clearHasTranslate() {
            
            hasTranslate_ = false;
            onChanged();
            return this;
          }

          private int translateAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
           */
          public int getTranslateAnchorValue() {
            return translateAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
           */
          public Builder setTranslateAnchorValue(int value) {
            translateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(translateAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
           */
          public Builder setTranslateAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            translateAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 8;</code>
           */
          public Builder clearTranslateAnchor() {
            
            translateAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTranslateAnchor_ ;
          /**
           * <code>bool has_translate_anchor = 9;</code>
           */
          public boolean getHasTranslateAnchor() {
            return hasTranslateAnchor_;
          }
          /**
           * <code>bool has_translate_anchor = 9;</code>
           */
          public Builder setHasTranslateAnchor(boolean value) {
            
            hasTranslateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_translate_anchor = 9;</code>
           */
          public Builder clearHasTranslateAnchor() {
            
            hasTranslateAnchor_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.StringValue pattern_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> patternBuilder_;
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          public boolean hasPattern() {
            return patternBuilder_ != null || pattern_ != null;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          public com.google.protobuf.StringValue getPattern() {
            if (patternBuilder_ == null) {
              return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
            } else {
              return patternBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          public Builder setPattern(com.google.protobuf.StringValue value) {
            if (patternBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              pattern_ = value;
              onChanged();
            } else {
              patternBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          public Builder setPattern(
              com.google.protobuf.StringValue.Builder builderForValue) {
            if (patternBuilder_ == null) {
              pattern_ = builderForValue.build();
              onChanged();
            } else {
              patternBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          public Builder mergePattern(com.google.protobuf.StringValue value) {
            if (patternBuilder_ == null) {
              if (pattern_ != null) {
                pattern_ =
                  com.google.protobuf.StringValue.newBuilder(pattern_).mergeFrom(value).buildPartial();
              } else {
                pattern_ = value;
              }
              onChanged();
            } else {
              patternBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          public Builder clearPattern() {
            if (patternBuilder_ == null) {
              pattern_ = null;
              onChanged();
            } else {
              pattern_ = null;
              patternBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          public com.google.protobuf.StringValue.Builder getPatternBuilder() {
            
            onChanged();
            return getPatternFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
            if (patternBuilder_ != null) {
              return patternBuilder_.getMessageOrBuilder();
            } else {
              return pattern_ == null ?
                  com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
            }
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 10;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
              getPatternFieldBuilder() {
            if (patternBuilder_ == null) {
              patternBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                      getPattern(),
                      getParentForChildren(),
                      isClean());
              pattern_ = null;
            }
            return patternBuilder_;
          }

          private com.google.protobuf.FloatValue height_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> heightBuilder_;
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          public boolean hasHeight() {
            return heightBuilder_ != null || height_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          public com.google.protobuf.FloatValue getHeight() {
            if (heightBuilder_ == null) {
              return height_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : height_;
            } else {
              return heightBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          public Builder setHeight(com.google.protobuf.FloatValue value) {
            if (heightBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              height_ = value;
              onChanged();
            } else {
              heightBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          public Builder setHeight(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (heightBuilder_ == null) {
              height_ = builderForValue.build();
              onChanged();
            } else {
              heightBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          public Builder mergeHeight(com.google.protobuf.FloatValue value) {
            if (heightBuilder_ == null) {
              if (height_ != null) {
                height_ =
                  com.google.protobuf.FloatValue.newBuilder(height_).mergeFrom(value).buildPartial();
              } else {
                height_ = value;
              }
              onChanged();
            } else {
              heightBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          public Builder clearHeight() {
            if (heightBuilder_ == null) {
              height_ = null;
              onChanged();
            } else {
              height_ = null;
              heightBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          public com.google.protobuf.FloatValue.Builder getHeightBuilder() {
            
            onChanged();
            return getHeightFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getHeightOrBuilder() {
            if (heightBuilder_ != null) {
              return heightBuilder_.getMessageOrBuilder();
            } else {
              return height_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : height_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue height = 11;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getHeightFieldBuilder() {
            if (heightBuilder_ == null) {
              heightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getHeight(),
                      getParentForChildren(),
                      isClean());
              height_ = null;
            }
            return heightBuilder_;
          }

          private com.google.protobuf.FloatValue base_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> baseBuilder_;
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          public boolean hasBase() {
            return baseBuilder_ != null || base_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          public com.google.protobuf.FloatValue getBase() {
            if (baseBuilder_ == null) {
              return base_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : base_;
            } else {
              return baseBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          public Builder setBase(com.google.protobuf.FloatValue value) {
            if (baseBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              base_ = value;
              onChanged();
            } else {
              baseBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          public Builder setBase(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (baseBuilder_ == null) {
              base_ = builderForValue.build();
              onChanged();
            } else {
              baseBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          public Builder mergeBase(com.google.protobuf.FloatValue value) {
            if (baseBuilder_ == null) {
              if (base_ != null) {
                base_ =
                  com.google.protobuf.FloatValue.newBuilder(base_).mergeFrom(value).buildPartial();
              } else {
                base_ = value;
              }
              onChanged();
            } else {
              baseBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          public Builder clearBase() {
            if (baseBuilder_ == null) {
              base_ = null;
              onChanged();
            } else {
              base_ = null;
              baseBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          public com.google.protobuf.FloatValue.Builder getBaseBuilder() {
            
            onChanged();
            return getBaseFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getBaseOrBuilder() {
            if (baseBuilder_ != null) {
              return baseBuilder_.getMessageOrBuilder();
            } else {
              return base_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : base_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue base = 12;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getBaseFieldBuilder() {
            if (baseBuilder_ == null) {
              baseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getBase(),
                      getParentForChildren(),
                      isClean());
              base_ = null;
            }
            return baseBuilder_;
          }

          private com.google.protobuf.BoolValue verticalGradient_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> verticalGradientBuilder_;
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          public boolean hasVerticalGradient() {
            return verticalGradientBuilder_ != null || verticalGradient_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          public com.google.protobuf.BoolValue getVerticalGradient() {
            if (verticalGradientBuilder_ == null) {
              return verticalGradient_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : verticalGradient_;
            } else {
              return verticalGradientBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          public Builder setVerticalGradient(com.google.protobuf.BoolValue value) {
            if (verticalGradientBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              verticalGradient_ = value;
              onChanged();
            } else {
              verticalGradientBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          public Builder setVerticalGradient(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (verticalGradientBuilder_ == null) {
              verticalGradient_ = builderForValue.build();
              onChanged();
            } else {
              verticalGradientBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          public Builder mergeVerticalGradient(com.google.protobuf.BoolValue value) {
            if (verticalGradientBuilder_ == null) {
              if (verticalGradient_ != null) {
                verticalGradient_ =
                  com.google.protobuf.BoolValue.newBuilder(verticalGradient_).mergeFrom(value).buildPartial();
              } else {
                verticalGradient_ = value;
              }
              onChanged();
            } else {
              verticalGradientBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          public Builder clearVerticalGradient() {
            if (verticalGradientBuilder_ == null) {
              verticalGradient_ = null;
              onChanged();
            } else {
              verticalGradient_ = null;
              verticalGradientBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVerticalGradientBuilder() {
            
            onChanged();
            return getVerticalGradientFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVerticalGradientOrBuilder() {
            if (verticalGradientBuilder_ != null) {
              return verticalGradientBuilder_.getMessageOrBuilder();
            } else {
              return verticalGradient_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : verticalGradient_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue vertical_gradient = 13;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVerticalGradientFieldBuilder() {
            if (verticalGradientBuilder_ == null) {
              verticalGradientBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVerticalGradient(),
                      getParentForChildren(),
                      isClean());
              verticalGradient_ = null;
            }
            return verticalGradientBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> opacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          public boolean hasOpacityTransition() {
            return opacityTransitionBuilder_ != null || opacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            } else {
              return opacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          public Builder setOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacityTransition_ = value;
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          public Builder setOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          public Builder mergeOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (opacityTransition_ != null) {
                opacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(opacityTransition_).mergeFrom(value).buildPartial();
              } else {
                opacityTransition_ = value;
              }
              onChanged();
            } else {
              opacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          public Builder clearOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
              onChanged();
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getOpacityTransitionBuilder() {
            
            onChanged();
            return getOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
            if (opacityTransitionBuilder_ != null) {
              return opacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return opacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 14;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getOpacityTransitionFieldBuilder() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              opacityTransition_ = null;
            }
            return opacityTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> colorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          public boolean hasColorTransition() {
            return colorTransitionBuilder_ != null || colorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
            if (colorTransitionBuilder_ == null) {
              return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            } else {
              return colorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          public Builder setColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorTransition_ = value;
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          public Builder setColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = builderForValue.build();
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          public Builder mergeColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (colorTransition_ != null) {
                colorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(colorTransition_).mergeFrom(value).buildPartial();
              } else {
                colorTransition_ = value;
              }
              onChanged();
            } else {
              colorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          public Builder clearColorTransition() {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
              onChanged();
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getColorTransitionBuilder() {
            
            onChanged();
            return getColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
            if (colorTransitionBuilder_ != null) {
              return colorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return colorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 15;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getColorTransitionFieldBuilder() {
            if (colorTransitionBuilder_ == null) {
              colorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getColorTransition(),
                      getParentForChildren(),
                      isClean());
              colorTransition_ = null;
            }
            return colorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions translateTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> translateTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public boolean hasTranslateTransition() {
            return translateTransitionBuilder_ != null || translateTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition() {
            if (translateTransitionBuilder_ == null) {
              return translateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
            } else {
              return translateTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public Builder setTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (translateTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              translateTransition_ = value;
              onChanged();
            } else {
              translateTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public Builder setTranslateTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = builderForValue.build();
              onChanged();
            } else {
              translateTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public Builder mergeTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (translateTransitionBuilder_ == null) {
              if (translateTransition_ != null) {
                translateTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(translateTransition_).mergeFrom(value).buildPartial();
              } else {
                translateTransition_ = value;
              }
              onChanged();
            } else {
              translateTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public Builder clearTranslateTransition() {
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = null;
              onChanged();
            } else {
              translateTransition_ = null;
              translateTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTranslateTransitionBuilder() {
            
            onChanged();
            return getTranslateTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder() {
            if (translateTransitionBuilder_ != null) {
              return translateTransitionBuilder_.getMessageOrBuilder();
            } else {
              return translateTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTranslateTransitionFieldBuilder() {
            if (translateTransitionBuilder_ == null) {
              translateTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTranslateTransition(),
                      getParentForChildren(),
                      isClean());
              translateTransition_ = null;
            }
            return translateTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions patternTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> patternTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public boolean hasPatternTransition() {
            return patternTransitionBuilder_ != null || patternTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition() {
            if (patternTransitionBuilder_ == null) {
              return patternTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
            } else {
              return patternTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public Builder setPatternTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (patternTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              patternTransition_ = value;
              onChanged();
            } else {
              patternTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public Builder setPatternTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = builderForValue.build();
              onChanged();
            } else {
              patternTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public Builder mergePatternTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (patternTransitionBuilder_ == null) {
              if (patternTransition_ != null) {
                patternTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(patternTransition_).mergeFrom(value).buildPartial();
              } else {
                patternTransition_ = value;
              }
              onChanged();
            } else {
              patternTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public Builder clearPatternTransition() {
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = null;
              onChanged();
            } else {
              patternTransition_ = null;
              patternTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getPatternTransitionBuilder() {
            
            onChanged();
            return getPatternTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder() {
            if (patternTransitionBuilder_ != null) {
              return patternTransitionBuilder_.getMessageOrBuilder();
            } else {
              return patternTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getPatternTransitionFieldBuilder() {
            if (patternTransitionBuilder_ == null) {
              patternTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getPatternTransition(),
                      getParentForChildren(),
                      isClean());
              patternTransition_ = null;
            }
            return patternTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions heightTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> heightTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          public boolean hasHeightTransition() {
            return heightTransitionBuilder_ != null || heightTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getHeightTransition() {
            if (heightTransitionBuilder_ == null) {
              return heightTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : heightTransition_;
            } else {
              return heightTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          public Builder setHeightTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (heightTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              heightTransition_ = value;
              onChanged();
            } else {
              heightTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          public Builder setHeightTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (heightTransitionBuilder_ == null) {
              heightTransition_ = builderForValue.build();
              onChanged();
            } else {
              heightTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          public Builder mergeHeightTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (heightTransitionBuilder_ == null) {
              if (heightTransition_ != null) {
                heightTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(heightTransition_).mergeFrom(value).buildPartial();
              } else {
                heightTransition_ = value;
              }
              onChanged();
            } else {
              heightTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          public Builder clearHeightTransition() {
            if (heightTransitionBuilder_ == null) {
              heightTransition_ = null;
              onChanged();
            } else {
              heightTransition_ = null;
              heightTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getHeightTransitionBuilder() {
            
            onChanged();
            return getHeightTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getHeightTransitionOrBuilder() {
            if (heightTransitionBuilder_ != null) {
              return heightTransitionBuilder_.getMessageOrBuilder();
            } else {
              return heightTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : heightTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions height_transition = 18;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getHeightTransitionFieldBuilder() {
            if (heightTransitionBuilder_ == null) {
              heightTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getHeightTransition(),
                      getParentForChildren(),
                      isClean());
              heightTransition_ = null;
            }
            return heightTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions baseTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> baseTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          public boolean hasBaseTransition() {
            return baseTransitionBuilder_ != null || baseTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBaseTransition() {
            if (baseTransitionBuilder_ == null) {
              return baseTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : baseTransition_;
            } else {
              return baseTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          public Builder setBaseTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (baseTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              baseTransition_ = value;
              onChanged();
            } else {
              baseTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          public Builder setBaseTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (baseTransitionBuilder_ == null) {
              baseTransition_ = builderForValue.build();
              onChanged();
            } else {
              baseTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          public Builder mergeBaseTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (baseTransitionBuilder_ == null) {
              if (baseTransition_ != null) {
                baseTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(baseTransition_).mergeFrom(value).buildPartial();
              } else {
                baseTransition_ = value;
              }
              onChanged();
            } else {
              baseTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          public Builder clearBaseTransition() {
            if (baseTransitionBuilder_ == null) {
              baseTransition_ = null;
              onChanged();
            } else {
              baseTransition_ = null;
              baseTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getBaseTransitionBuilder() {
            
            onChanged();
            return getBaseTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBaseTransitionOrBuilder() {
            if (baseTransitionBuilder_ != null) {
              return baseTransitionBuilder_.getMessageOrBuilder();
            } else {
              return baseTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : baseTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions base_transition = 19;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getBaseTransitionFieldBuilder() {
            if (baseTransitionBuilder_ == null) {
              baseTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getBaseTransition(),
                      getParentForChildren(),
                      isClean());
              baseTransition_ = null;
            }
            return baseTransitionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion)
        }

        // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion)
        private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion();
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<FillExtrusion>
            PARSER = new com.google.protobuf.AbstractParser<FillExtrusion>() {
          @java.lang.Override
          public FillExtrusion parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new FillExtrusion(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<FillExtrusion> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<FillExtrusion> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface FillOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update.Fill)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        boolean hasVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValue getVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        boolean hasMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValue getMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        boolean hasMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValue getMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue antialias = 4;</code>
         */
        boolean hasAntialias();
        /**
         * <code>.google.protobuf.BoolValue antialias = 4;</code>
         */
        com.google.protobuf.BoolValue getAntialias();
        /**
         * <code>.google.protobuf.BoolValue antialias = 4;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getAntialiasOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue opacity = 5;</code>
         */
        boolean hasOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 5;</code>
         */
        com.google.protobuf.FloatValue getOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 5;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value color = 6;</code>
         */
        boolean hasColor();
        /**
         * <code>.google.protobuf.Int32Value color = 6;</code>
         */
        com.google.protobuf.Int32Value getColor();
        /**
         * <code>.google.protobuf.Int32Value color = 6;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value outline_color = 7;</code>
         */
        boolean hasOutlineColor();
        /**
         * <code>.google.protobuf.Int32Value outline_color = 7;</code>
         */
        com.google.protobuf.Int32Value getOutlineColor();
        /**
         * <code>.google.protobuf.Int32Value outline_color = 7;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getOutlineColorOrBuilder();

        /**
         * <code>repeated float translate = 8;</code>
         */
        java.util.List<java.lang.Float> getTranslateList();
        /**
         * <code>repeated float translate = 8;</code>
         */
        int getTranslateCount();
        /**
         * <code>repeated float translate = 8;</code>
         */
        float getTranslate(int index);

        /**
         * <code>bool has_translate = 9;</code>
         */
        boolean getHasTranslate();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
         */
        int getTranslateAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor();

        /**
         * <code>bool has_translate_anchor = 11;</code>
         */
        boolean getHasTranslateAnchor();

        /**
         * <code>.google.protobuf.StringValue pattern = 12;</code>
         */
        boolean hasPattern();
        /**
         * <code>.google.protobuf.StringValue pattern = 12;</code>
         */
        com.google.protobuf.StringValue getPattern();
        /**
         * <code>.google.protobuf.StringValue pattern = 12;</code>
         */
        com.google.protobuf.StringValueOrBuilder getPatternOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
         */
        boolean hasOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
         */
        boolean hasColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
         */
        boolean hasOutlineColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOutlineColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOutlineColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        boolean hasTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        boolean hasPatternTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder();
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Fill}
       */
      public  static final class Fill extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update.Fill)
          FillOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Fill.newBuilder() to construct.
        private Fill(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Fill() {
          translate_ = emptyFloatList();
          translateAnchor_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Fill(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (visible_ != null) {
                    subBuilder = visible_.toBuilder();
                  }
                  visible_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visible_);
                    visible_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (minZoom_ != null) {
                    subBuilder = minZoom_.toBuilder();
                  }
                  minZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minZoom_);
                    minZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (maxZoom_ != null) {
                    subBuilder = maxZoom_.toBuilder();
                  }
                  maxZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxZoom_);
                    maxZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (antialias_ != null) {
                    subBuilder = antialias_.toBuilder();
                  }
                  antialias_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(antialias_);
                    antialias_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (opacity_ != null) {
                    subBuilder = opacity_.toBuilder();
                  }
                  opacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacity_);
                    opacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (color_ != null) {
                    subBuilder = color_.toBuilder();
                  }
                  color_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(color_);
                    color_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (outlineColor_ != null) {
                    subBuilder = outlineColor_.toBuilder();
                  }
                  outlineColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(outlineColor_);
                    outlineColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 69: {
                  if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                    translate_ = newFloatList();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  translate_.addFloat(input.readFloat());
                  break;
                }
                case 66: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                    translate_ = newFloatList();
                    mutable_bitField0_ |= 0x00000080;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    translate_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 72: {

                  hasTranslate_ = input.readBool();
                  break;
                }
                case 80: {
                  int rawValue = input.readEnum();

                  translateAnchor_ = rawValue;
                  break;
                }
                case 88: {

                  hasTranslateAnchor_ = input.readBool();
                  break;
                }
                case 98: {
                  com.google.protobuf.StringValue.Builder subBuilder = null;
                  if (pattern_ != null) {
                    subBuilder = pattern_.toBuilder();
                  }
                  pattern_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pattern_);
                    pattern_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 106: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (opacityTransition_ != null) {
                    subBuilder = opacityTransition_.toBuilder();
                  }
                  opacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacityTransition_);
                    opacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 114: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (colorTransition_ != null) {
                    subBuilder = colorTransition_.toBuilder();
                  }
                  colorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorTransition_);
                    colorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 122: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (outlineColorTransition_ != null) {
                    subBuilder = outlineColorTransition_.toBuilder();
                  }
                  outlineColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(outlineColorTransition_);
                    outlineColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 130: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (translateTransition_ != null) {
                    subBuilder = translateTransition_.toBuilder();
                  }
                  translateTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(translateTransition_);
                    translateTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 138: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (patternTransition_ != null) {
                    subBuilder = patternTransition_.toBuilder();
                  }
                  patternTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(patternTransition_);
                    patternTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000080) != 0)) {
              translate_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.Builder.class);
        }

        private int bitField0_;
        public static final int VISIBLE_FIELD_NUMBER = 1;
        private com.google.protobuf.BoolValue visible_;
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public boolean hasVisible() {
          return visible_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValue getVisible() {
          return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
          return getVisible();
        }

        public static final int MIN_ZOOM_FIELD_NUMBER = 2;
        private com.google.protobuf.FloatValue minZoom_;
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public boolean hasMinZoom() {
          return minZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValue getMinZoom() {
          return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
          return getMinZoom();
        }

        public static final int MAX_ZOOM_FIELD_NUMBER = 3;
        private com.google.protobuf.FloatValue maxZoom_;
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public boolean hasMaxZoom() {
          return maxZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValue getMaxZoom() {
          return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
          return getMaxZoom();
        }

        public static final int ANTIALIAS_FIELD_NUMBER = 4;
        private com.google.protobuf.BoolValue antialias_;
        /**
         * <code>.google.protobuf.BoolValue antialias = 4;</code>
         */
        public boolean hasAntialias() {
          return antialias_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue antialias = 4;</code>
         */
        public com.google.protobuf.BoolValue getAntialias() {
          return antialias_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : antialias_;
        }
        /**
         * <code>.google.protobuf.BoolValue antialias = 4;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getAntialiasOrBuilder() {
          return getAntialias();
        }

        public static final int OPACITY_FIELD_NUMBER = 5;
        private com.google.protobuf.FloatValue opacity_;
        /**
         * <code>.google.protobuf.FloatValue opacity = 5;</code>
         */
        public boolean hasOpacity() {
          return opacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 5;</code>
         */
        public com.google.protobuf.FloatValue getOpacity() {
          return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 5;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
          return getOpacity();
        }

        public static final int COLOR_FIELD_NUMBER = 6;
        private com.google.protobuf.Int32Value color_;
        /**
         * <code>.google.protobuf.Int32Value color = 6;</code>
         */
        public boolean hasColor() {
          return color_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 6;</code>
         */
        public com.google.protobuf.Int32Value getColor() {
          return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 6;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
          return getColor();
        }

        public static final int OUTLINE_COLOR_FIELD_NUMBER = 7;
        private com.google.protobuf.Int32Value outlineColor_;
        /**
         * <code>.google.protobuf.Int32Value outline_color = 7;</code>
         */
        public boolean hasOutlineColor() {
          return outlineColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value outline_color = 7;</code>
         */
        public com.google.protobuf.Int32Value getOutlineColor() {
          return outlineColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : outlineColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value outline_color = 7;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getOutlineColorOrBuilder() {
          return getOutlineColor();
        }

        public static final int TRANSLATE_FIELD_NUMBER = 8;
        private com.google.protobuf.Internal.FloatList translate_;
        /**
         * <code>repeated float translate = 8;</code>
         */
        public java.util.List<java.lang.Float>
            getTranslateList() {
          return translate_;
        }
        /**
         * <code>repeated float translate = 8;</code>
         */
        public int getTranslateCount() {
          return translate_.size();
        }
        /**
         * <code>repeated float translate = 8;</code>
         */
        public float getTranslate(int index) {
          return translate_.getFloat(index);
        }
        private int translateMemoizedSerializedSize = -1;

        public static final int HAS_TRANSLATE_FIELD_NUMBER = 9;
        private boolean hasTranslate_;
        /**
         * <code>bool has_translate = 9;</code>
         */
        public boolean getHasTranslate() {
          return hasTranslate_;
        }

        public static final int TRANSLATE_ANCHOR_FIELD_NUMBER = 10;
        private int translateAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
         */
        public int getTranslateAnchorValue() {
          return translateAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(translateAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_TRANSLATE_ANCHOR_FIELD_NUMBER = 11;
        private boolean hasTranslateAnchor_;
        /**
         * <code>bool has_translate_anchor = 11;</code>
         */
        public boolean getHasTranslateAnchor() {
          return hasTranslateAnchor_;
        }

        public static final int PATTERN_FIELD_NUMBER = 12;
        private com.google.protobuf.StringValue pattern_;
        /**
         * <code>.google.protobuf.StringValue pattern = 12;</code>
         */
        public boolean hasPattern() {
          return pattern_ != null;
        }
        /**
         * <code>.google.protobuf.StringValue pattern = 12;</code>
         */
        public com.google.protobuf.StringValue getPattern() {
          return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
        }
        /**
         * <code>.google.protobuf.StringValue pattern = 12;</code>
         */
        public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
          return getPattern();
        }

        public static final int OPACITY_TRANSITION_FIELD_NUMBER = 13;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
         */
        public boolean hasOpacityTransition() {
          return opacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
          return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
          return getOpacityTransition();
        }

        public static final int COLOR_TRANSITION_FIELD_NUMBER = 14;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
         */
        public boolean hasColorTransition() {
          return colorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
          return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
          return getColorTransition();
        }

        public static final int OUTLINE_COLOR_TRANSITION_FIELD_NUMBER = 15;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions outlineColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
         */
        public boolean hasOutlineColorTransition() {
          return outlineColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOutlineColorTransition() {
          return outlineColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : outlineColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOutlineColorTransitionOrBuilder() {
          return getOutlineColorTransition();
        }

        public static final int TRANSLATE_TRANSITION_FIELD_NUMBER = 16;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions translateTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        public boolean hasTranslateTransition() {
          return translateTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition() {
          return translateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder() {
          return getTranslateTransition();
        }

        public static final int PATTERN_TRANSITION_FIELD_NUMBER = 17;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions patternTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        public boolean hasPatternTransition() {
          return patternTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition() {
          return patternTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder() {
          return getPatternTransition();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (visible_ != null) {
            output.writeMessage(1, getVisible());
          }
          if (minZoom_ != null) {
            output.writeMessage(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            output.writeMessage(3, getMaxZoom());
          }
          if (antialias_ != null) {
            output.writeMessage(4, getAntialias());
          }
          if (opacity_ != null) {
            output.writeMessage(5, getOpacity());
          }
          if (color_ != null) {
            output.writeMessage(6, getColor());
          }
          if (outlineColor_ != null) {
            output.writeMessage(7, getOutlineColor());
          }
          if (getTranslateList().size() > 0) {
            output.writeUInt32NoTag(66);
            output.writeUInt32NoTag(translateMemoizedSerializedSize);
          }
          for (int i = 0; i < translate_.size(); i++) {
            output.writeFloatNoTag(translate_.getFloat(i));
          }
          if (hasTranslate_ != false) {
            output.writeBool(9, hasTranslate_);
          }
          if (translateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(10, translateAnchor_);
          }
          if (hasTranslateAnchor_ != false) {
            output.writeBool(11, hasTranslateAnchor_);
          }
          if (pattern_ != null) {
            output.writeMessage(12, getPattern());
          }
          if (opacityTransition_ != null) {
            output.writeMessage(13, getOpacityTransition());
          }
          if (colorTransition_ != null) {
            output.writeMessage(14, getColorTransition());
          }
          if (outlineColorTransition_ != null) {
            output.writeMessage(15, getOutlineColorTransition());
          }
          if (translateTransition_ != null) {
            output.writeMessage(16, getTranslateTransition());
          }
          if (patternTransition_ != null) {
            output.writeMessage(17, getPatternTransition());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (visible_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getVisible());
          }
          if (minZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getMaxZoom());
          }
          if (antialias_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getAntialias());
          }
          if (opacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getOpacity());
          }
          if (color_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getColor());
          }
          if (outlineColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getOutlineColor());
          }
          {
            int dataSize = 0;
            dataSize = 4 * getTranslateList().size();
            size += dataSize;
            if (!getTranslateList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            translateMemoizedSerializedSize = dataSize;
          }
          if (hasTranslate_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(9, hasTranslate_);
          }
          if (translateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(10, translateAnchor_);
          }
          if (hasTranslateAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(11, hasTranslateAnchor_);
          }
          if (pattern_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(12, getPattern());
          }
          if (opacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(13, getOpacityTransition());
          }
          if (colorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(14, getColorTransition());
          }
          if (outlineColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(15, getOutlineColorTransition());
          }
          if (translateTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(16, getTranslateTransition());
          }
          if (patternTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(17, getPatternTransition());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill)) {
            return super.equals(obj);
          }
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) obj;

          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (!getVisible()
                .equals(other.getVisible())) return false;
          }
          if (hasMinZoom() != other.hasMinZoom()) return false;
          if (hasMinZoom()) {
            if (!getMinZoom()
                .equals(other.getMinZoom())) return false;
          }
          if (hasMaxZoom() != other.hasMaxZoom()) return false;
          if (hasMaxZoom()) {
            if (!getMaxZoom()
                .equals(other.getMaxZoom())) return false;
          }
          if (hasAntialias() != other.hasAntialias()) return false;
          if (hasAntialias()) {
            if (!getAntialias()
                .equals(other.getAntialias())) return false;
          }
          if (hasOpacity() != other.hasOpacity()) return false;
          if (hasOpacity()) {
            if (!getOpacity()
                .equals(other.getOpacity())) return false;
          }
          if (hasColor() != other.hasColor()) return false;
          if (hasColor()) {
            if (!getColor()
                .equals(other.getColor())) return false;
          }
          if (hasOutlineColor() != other.hasOutlineColor()) return false;
          if (hasOutlineColor()) {
            if (!getOutlineColor()
                .equals(other.getOutlineColor())) return false;
          }
          if (!getTranslateList()
              .equals(other.getTranslateList())) return false;
          if (getHasTranslate()
              != other.getHasTranslate()) return false;
          if (translateAnchor_ != other.translateAnchor_) return false;
          if (getHasTranslateAnchor()
              != other.getHasTranslateAnchor()) return false;
          if (hasPattern() != other.hasPattern()) return false;
          if (hasPattern()) {
            if (!getPattern()
                .equals(other.getPattern())) return false;
          }
          if (hasOpacityTransition() != other.hasOpacityTransition()) return false;
          if (hasOpacityTransition()) {
            if (!getOpacityTransition()
                .equals(other.getOpacityTransition())) return false;
          }
          if (hasColorTransition() != other.hasColorTransition()) return false;
          if (hasColorTransition()) {
            if (!getColorTransition()
                .equals(other.getColorTransition())) return false;
          }
          if (hasOutlineColorTransition() != other.hasOutlineColorTransition()) return false;
          if (hasOutlineColorTransition()) {
            if (!getOutlineColorTransition()
                .equals(other.getOutlineColorTransition())) return false;
          }
          if (hasTranslateTransition() != other.hasTranslateTransition()) return false;
          if (hasTranslateTransition()) {
            if (!getTranslateTransition()
                .equals(other.getTranslateTransition())) return false;
          }
          if (hasPatternTransition() != other.hasPatternTransition()) return false;
          if (hasPatternTransition()) {
            if (!getPatternTransition()
                .equals(other.getPatternTransition())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + getVisible().hashCode();
          }
          if (hasMinZoom()) {
            hash = (37 * hash) + MIN_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMinZoom().hashCode();
          }
          if (hasMaxZoom()) {
            hash = (37 * hash) + MAX_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMaxZoom().hashCode();
          }
          if (hasAntialias()) {
            hash = (37 * hash) + ANTIALIAS_FIELD_NUMBER;
            hash = (53 * hash) + getAntialias().hashCode();
          }
          if (hasOpacity()) {
            hash = (37 * hash) + OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getOpacity().hashCode();
          }
          if (hasColor()) {
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor().hashCode();
          }
          if (hasOutlineColor()) {
            hash = (37 * hash) + OUTLINE_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getOutlineColor().hashCode();
          }
          if (getTranslateCount() > 0) {
            hash = (37 * hash) + TRANSLATE_FIELD_NUMBER;
            hash = (53 * hash) + getTranslateList().hashCode();
          }
          hash = (37 * hash) + HAS_TRANSLATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTranslate());
          hash = (37 * hash) + TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + translateAnchor_;
          hash = (37 * hash) + HAS_TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTranslateAnchor());
          if (hasPattern()) {
            hash = (37 * hash) + PATTERN_FIELD_NUMBER;
            hash = (53 * hash) + getPattern().hashCode();
          }
          if (hasOpacityTransition()) {
            hash = (37 * hash) + OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getOpacityTransition().hashCode();
          }
          if (hasColorTransition()) {
            hash = (37 * hash) + COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getColorTransition().hashCode();
          }
          if (hasOutlineColorTransition()) {
            hash = (37 * hash) + OUTLINE_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getOutlineColorTransition().hashCode();
          }
          if (hasTranslateTransition()) {
            hash = (37 * hash) + TRANSLATE_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTranslateTransition().hashCode();
          }
          if (hasPatternTransition()) {
            hash = (37 * hash) + PATTERN_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getPatternTransition().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Fill}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update.Fill)
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.Builder.class);
          }

          // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (visibleBuilder_ == null) {
              visible_ = null;
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }
            if (antialiasBuilder_ == null) {
              antialias_ = null;
            } else {
              antialias_ = null;
              antialiasBuilder_ = null;
            }
            if (opacityBuilder_ == null) {
              opacity_ = null;
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }
            if (colorBuilder_ == null) {
              color_ = null;
            } else {
              color_ = null;
              colorBuilder_ = null;
            }
            if (outlineColorBuilder_ == null) {
              outlineColor_ = null;
            } else {
              outlineColor_ = null;
              outlineColorBuilder_ = null;
            }
            translate_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000080);
            hasTranslate_ = false;

            translateAnchor_ = 0;

            hasTranslateAnchor_ = false;

            if (patternBuilder_ == null) {
              pattern_ = null;
            } else {
              pattern_ = null;
              patternBuilder_ = null;
            }
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }
            if (outlineColorTransitionBuilder_ == null) {
              outlineColorTransition_ = null;
            } else {
              outlineColorTransition_ = null;
              outlineColorTransitionBuilder_ = null;
            }
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = null;
            } else {
              translateTransition_ = null;
              translateTransitionBuilder_ = null;
            }
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = null;
            } else {
              patternTransition_ = null;
              patternTransitionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_descriptor;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill getDefaultInstanceForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance();
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill build() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill buildPartial() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (visibleBuilder_ == null) {
              result.visible_ = visible_;
            } else {
              result.visible_ = visibleBuilder_.build();
            }
            if (minZoomBuilder_ == null) {
              result.minZoom_ = minZoom_;
            } else {
              result.minZoom_ = minZoomBuilder_.build();
            }
            if (maxZoomBuilder_ == null) {
              result.maxZoom_ = maxZoom_;
            } else {
              result.maxZoom_ = maxZoomBuilder_.build();
            }
            if (antialiasBuilder_ == null) {
              result.antialias_ = antialias_;
            } else {
              result.antialias_ = antialiasBuilder_.build();
            }
            if (opacityBuilder_ == null) {
              result.opacity_ = opacity_;
            } else {
              result.opacity_ = opacityBuilder_.build();
            }
            if (colorBuilder_ == null) {
              result.color_ = color_;
            } else {
              result.color_ = colorBuilder_.build();
            }
            if (outlineColorBuilder_ == null) {
              result.outlineColor_ = outlineColor_;
            } else {
              result.outlineColor_ = outlineColorBuilder_.build();
            }
            if (((bitField0_ & 0x00000080) != 0)) {
              translate_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00000080);
            }
            result.translate_ = translate_;
            result.hasTranslate_ = hasTranslate_;
            result.translateAnchor_ = translateAnchor_;
            result.hasTranslateAnchor_ = hasTranslateAnchor_;
            if (patternBuilder_ == null) {
              result.pattern_ = pattern_;
            } else {
              result.pattern_ = patternBuilder_.build();
            }
            if (opacityTransitionBuilder_ == null) {
              result.opacityTransition_ = opacityTransition_;
            } else {
              result.opacityTransition_ = opacityTransitionBuilder_.build();
            }
            if (colorTransitionBuilder_ == null) {
              result.colorTransition_ = colorTransition_;
            } else {
              result.colorTransition_ = colorTransitionBuilder_.build();
            }
            if (outlineColorTransitionBuilder_ == null) {
              result.outlineColorTransition_ = outlineColorTransition_;
            } else {
              result.outlineColorTransition_ = outlineColorTransitionBuilder_.build();
            }
            if (translateTransitionBuilder_ == null) {
              result.translateTransition_ = translateTransition_;
            } else {
              result.translateTransition_ = translateTransitionBuilder_.build();
            }
            if (patternTransitionBuilder_ == null) {
              result.patternTransition_ = patternTransition_;
            } else {
              result.patternTransition_ = patternTransitionBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) {
              return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill other) {
            if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance()) return this;
            if (other.hasVisible()) {
              mergeVisible(other.getVisible());
            }
            if (other.hasMinZoom()) {
              mergeMinZoom(other.getMinZoom());
            }
            if (other.hasMaxZoom()) {
              mergeMaxZoom(other.getMaxZoom());
            }
            if (other.hasAntialias()) {
              mergeAntialias(other.getAntialias());
            }
            if (other.hasOpacity()) {
              mergeOpacity(other.getOpacity());
            }
            if (other.hasColor()) {
              mergeColor(other.getColor());
            }
            if (other.hasOutlineColor()) {
              mergeOutlineColor(other.getOutlineColor());
            }
            if (!other.translate_.isEmpty()) {
              if (translate_.isEmpty()) {
                translate_ = other.translate_;
                bitField0_ = (bitField0_ & ~0x00000080);
              } else {
                ensureTranslateIsMutable();
                translate_.addAll(other.translate_);
              }
              onChanged();
            }
            if (other.getHasTranslate() != false) {
              setHasTranslate(other.getHasTranslate());
            }
            if (other.translateAnchor_ != 0) {
              setTranslateAnchorValue(other.getTranslateAnchorValue());
            }
            if (other.getHasTranslateAnchor() != false) {
              setHasTranslateAnchor(other.getHasTranslateAnchor());
            }
            if (other.hasPattern()) {
              mergePattern(other.getPattern());
            }
            if (other.hasOpacityTransition()) {
              mergeOpacityTransition(other.getOpacityTransition());
            }
            if (other.hasColorTransition()) {
              mergeColorTransition(other.getColorTransition());
            }
            if (other.hasOutlineColorTransition()) {
              mergeOutlineColorTransition(other.getOutlineColorTransition());
            }
            if (other.hasTranslateTransition()) {
              mergeTranslateTransition(other.getTranslateTransition());
            }
            if (other.hasPatternTransition()) {
              mergePatternTransition(other.getPatternTransition());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.BoolValue visible_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> visibleBuilder_;
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public boolean hasVisible() {
            return visibleBuilder_ != null || visible_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue getVisible() {
            if (visibleBuilder_ == null) {
              return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            } else {
              return visibleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visible_ = value;
              onChanged();
            } else {
              visibleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (visibleBuilder_ == null) {
              visible_ = builderForValue.build();
              onChanged();
            } else {
              visibleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder mergeVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (visible_ != null) {
                visible_ =
                  com.google.protobuf.BoolValue.newBuilder(visible_).mergeFrom(value).buildPartial();
              } else {
                visible_ = value;
              }
              onChanged();
            } else {
              visibleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder clearVisible() {
            if (visibleBuilder_ == null) {
              visible_ = null;
              onChanged();
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVisibleBuilder() {
            
            onChanged();
            return getVisibleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
            if (visibleBuilder_ != null) {
              return visibleBuilder_.getMessageOrBuilder();
            } else {
              return visible_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVisibleFieldBuilder() {
            if (visibleBuilder_ == null) {
              visibleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVisible(),
                      getParentForChildren(),
                      isClean());
              visible_ = null;
            }
            return visibleBuilder_;
          }

          private com.google.protobuf.FloatValue minZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> minZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public boolean hasMinZoom() {
            return minZoomBuilder_ != null || minZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue getMinZoom() {
            if (minZoomBuilder_ == null) {
              return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            } else {
              return minZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              minZoom_ = value;
              onChanged();
            } else {
              minZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (minZoomBuilder_ == null) {
              minZoom_ = builderForValue.build();
              onChanged();
            } else {
              minZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder mergeMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (minZoom_ != null) {
                minZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(minZoom_).mergeFrom(value).buildPartial();
              } else {
                minZoom_ = value;
              }
              onChanged();
            } else {
              minZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder clearMinZoom() {
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
              onChanged();
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMinZoomBuilder() {
            
            onChanged();
            return getMinZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
            if (minZoomBuilder_ != null) {
              return minZoomBuilder_.getMessageOrBuilder();
            } else {
              return minZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMinZoomFieldBuilder() {
            if (minZoomBuilder_ == null) {
              minZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMinZoom(),
                      getParentForChildren(),
                      isClean());
              minZoom_ = null;
            }
            return minZoomBuilder_;
          }

          private com.google.protobuf.FloatValue maxZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> maxZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public boolean hasMaxZoom() {
            return maxZoomBuilder_ != null || maxZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue getMaxZoom() {
            if (maxZoomBuilder_ == null) {
              return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            } else {
              return maxZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              maxZoom_ = value;
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = builderForValue.build();
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder mergeMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (maxZoom_ != null) {
                maxZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(maxZoom_).mergeFrom(value).buildPartial();
              } else {
                maxZoom_ = value;
              }
              onChanged();
            } else {
              maxZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder clearMaxZoom() {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
              onChanged();
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMaxZoomBuilder() {
            
            onChanged();
            return getMaxZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
            if (maxZoomBuilder_ != null) {
              return maxZoomBuilder_.getMessageOrBuilder();
            } else {
              return maxZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMaxZoomFieldBuilder() {
            if (maxZoomBuilder_ == null) {
              maxZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMaxZoom(),
                      getParentForChildren(),
                      isClean());
              maxZoom_ = null;
            }
            return maxZoomBuilder_;
          }

          private com.google.protobuf.BoolValue antialias_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> antialiasBuilder_;
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          public boolean hasAntialias() {
            return antialiasBuilder_ != null || antialias_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          public com.google.protobuf.BoolValue getAntialias() {
            if (antialiasBuilder_ == null) {
              return antialias_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : antialias_;
            } else {
              return antialiasBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          public Builder setAntialias(com.google.protobuf.BoolValue value) {
            if (antialiasBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              antialias_ = value;
              onChanged();
            } else {
              antialiasBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          public Builder setAntialias(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (antialiasBuilder_ == null) {
              antialias_ = builderForValue.build();
              onChanged();
            } else {
              antialiasBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          public Builder mergeAntialias(com.google.protobuf.BoolValue value) {
            if (antialiasBuilder_ == null) {
              if (antialias_ != null) {
                antialias_ =
                  com.google.protobuf.BoolValue.newBuilder(antialias_).mergeFrom(value).buildPartial();
              } else {
                antialias_ = value;
              }
              onChanged();
            } else {
              antialiasBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          public Builder clearAntialias() {
            if (antialiasBuilder_ == null) {
              antialias_ = null;
              onChanged();
            } else {
              antialias_ = null;
              antialiasBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          public com.google.protobuf.BoolValue.Builder getAntialiasBuilder() {
            
            onChanged();
            return getAntialiasFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getAntialiasOrBuilder() {
            if (antialiasBuilder_ != null) {
              return antialiasBuilder_.getMessageOrBuilder();
            } else {
              return antialias_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : antialias_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue antialias = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getAntialiasFieldBuilder() {
            if (antialiasBuilder_ == null) {
              antialiasBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getAntialias(),
                      getParentForChildren(),
                      isClean());
              antialias_ = null;
            }
            return antialiasBuilder_;
          }

          private com.google.protobuf.FloatValue opacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> opacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          public boolean hasOpacity() {
            return opacityBuilder_ != null || opacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          public com.google.protobuf.FloatValue getOpacity() {
            if (opacityBuilder_ == null) {
              return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            } else {
              return opacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          public Builder setOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacity_ = value;
              onChanged();
            } else {
              opacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          public Builder setOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (opacityBuilder_ == null) {
              opacity_ = builderForValue.build();
              onChanged();
            } else {
              opacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          public Builder mergeOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (opacity_ != null) {
                opacity_ =
                  com.google.protobuf.FloatValue.newBuilder(opacity_).mergeFrom(value).buildPartial();
              } else {
                opacity_ = value;
              }
              onChanged();
            } else {
              opacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          public Builder clearOpacity() {
            if (opacityBuilder_ == null) {
              opacity_ = null;
              onChanged();
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          public com.google.protobuf.FloatValue.Builder getOpacityBuilder() {
            
            onChanged();
            return getOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
            if (opacityBuilder_ != null) {
              return opacityBuilder_.getMessageOrBuilder();
            } else {
              return opacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getOpacityFieldBuilder() {
            if (opacityBuilder_ == null) {
              opacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getOpacity(),
                      getParentForChildren(),
                      isClean());
              opacity_ = null;
            }
            return opacityBuilder_;
          }

          private com.google.protobuf.Int32Value color_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> colorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          public boolean hasColor() {
            return colorBuilder_ != null || color_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          public com.google.protobuf.Int32Value getColor() {
            if (colorBuilder_ == null) {
              return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            } else {
              return colorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          public Builder setColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              color_ = value;
              onChanged();
            } else {
              colorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          public Builder setColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (colorBuilder_ == null) {
              color_ = builderForValue.build();
              onChanged();
            } else {
              colorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          public Builder mergeColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (color_ != null) {
                color_ =
                  com.google.protobuf.Int32Value.newBuilder(color_).mergeFrom(value).buildPartial();
              } else {
                color_ = value;
              }
              onChanged();
            } else {
              colorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          public Builder clearColor() {
            if (colorBuilder_ == null) {
              color_ = null;
              onChanged();
            } else {
              color_ = null;
              colorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          public com.google.protobuf.Int32Value.Builder getColorBuilder() {
            
            onChanged();
            return getColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
            if (colorBuilder_ != null) {
              return colorBuilder_.getMessageOrBuilder();
            } else {
              return color_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getColorFieldBuilder() {
            if (colorBuilder_ == null) {
              colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getColor(),
                      getParentForChildren(),
                      isClean());
              color_ = null;
            }
            return colorBuilder_;
          }

          private com.google.protobuf.Int32Value outlineColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> outlineColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          public boolean hasOutlineColor() {
            return outlineColorBuilder_ != null || outlineColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          public com.google.protobuf.Int32Value getOutlineColor() {
            if (outlineColorBuilder_ == null) {
              return outlineColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : outlineColor_;
            } else {
              return outlineColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          public Builder setOutlineColor(com.google.protobuf.Int32Value value) {
            if (outlineColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              outlineColor_ = value;
              onChanged();
            } else {
              outlineColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          public Builder setOutlineColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (outlineColorBuilder_ == null) {
              outlineColor_ = builderForValue.build();
              onChanged();
            } else {
              outlineColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          public Builder mergeOutlineColor(com.google.protobuf.Int32Value value) {
            if (outlineColorBuilder_ == null) {
              if (outlineColor_ != null) {
                outlineColor_ =
                  com.google.protobuf.Int32Value.newBuilder(outlineColor_).mergeFrom(value).buildPartial();
              } else {
                outlineColor_ = value;
              }
              onChanged();
            } else {
              outlineColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          public Builder clearOutlineColor() {
            if (outlineColorBuilder_ == null) {
              outlineColor_ = null;
              onChanged();
            } else {
              outlineColor_ = null;
              outlineColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          public com.google.protobuf.Int32Value.Builder getOutlineColorBuilder() {
            
            onChanged();
            return getOutlineColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getOutlineColorOrBuilder() {
            if (outlineColorBuilder_ != null) {
              return outlineColorBuilder_.getMessageOrBuilder();
            } else {
              return outlineColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : outlineColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value outline_color = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getOutlineColorFieldBuilder() {
            if (outlineColorBuilder_ == null) {
              outlineColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getOutlineColor(),
                      getParentForChildren(),
                      isClean());
              outlineColor_ = null;
            }
            return outlineColorBuilder_;
          }

          private com.google.protobuf.Internal.FloatList translate_ = emptyFloatList();
          private void ensureTranslateIsMutable() {
            if (!((bitField0_ & 0x00000080) != 0)) {
              translate_ = mutableCopy(translate_);
              bitField0_ |= 0x00000080;
             }
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public java.util.List<java.lang.Float>
              getTranslateList() {
            return ((bitField0_ & 0x00000080) != 0) ?
                     java.util.Collections.unmodifiableList(translate_) : translate_;
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public int getTranslateCount() {
            return translate_.size();
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public float getTranslate(int index) {
            return translate_.getFloat(index);
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public Builder setTranslate(
              int index, float value) {
            ensureTranslateIsMutable();
            translate_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public Builder addTranslate(float value) {
            ensureTranslateIsMutable();
            translate_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public Builder addAllTranslate(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureTranslateIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, translate_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 8;</code>
           */
          public Builder clearTranslate() {
            translate_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000080);
            onChanged();
            return this;
          }

          private boolean hasTranslate_ ;
          /**
           * <code>bool has_translate = 9;</code>
           */
          public boolean getHasTranslate() {
            return hasTranslate_;
          }
          /**
           * <code>bool has_translate = 9;</code>
           */
          public Builder setHasTranslate(boolean value) {
            
            hasTranslate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_translate = 9;</code>
           */
          public Builder clearHasTranslate() {
            
            hasTranslate_ = false;
            onChanged();
            return this;
          }

          private int translateAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public int getTranslateAnchorValue() {
            return translateAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public Builder setTranslateAnchorValue(int value) {
            translateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(translateAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public Builder setTranslateAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            translateAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 10;</code>
           */
          public Builder clearTranslateAnchor() {
            
            translateAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTranslateAnchor_ ;
          /**
           * <code>bool has_translate_anchor = 11;</code>
           */
          public boolean getHasTranslateAnchor() {
            return hasTranslateAnchor_;
          }
          /**
           * <code>bool has_translate_anchor = 11;</code>
           */
          public Builder setHasTranslateAnchor(boolean value) {
            
            hasTranslateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_translate_anchor = 11;</code>
           */
          public Builder clearHasTranslateAnchor() {
            
            hasTranslateAnchor_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.StringValue pattern_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> patternBuilder_;
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          public boolean hasPattern() {
            return patternBuilder_ != null || pattern_ != null;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          public com.google.protobuf.StringValue getPattern() {
            if (patternBuilder_ == null) {
              return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
            } else {
              return patternBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          public Builder setPattern(com.google.protobuf.StringValue value) {
            if (patternBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              pattern_ = value;
              onChanged();
            } else {
              patternBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          public Builder setPattern(
              com.google.protobuf.StringValue.Builder builderForValue) {
            if (patternBuilder_ == null) {
              pattern_ = builderForValue.build();
              onChanged();
            } else {
              patternBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          public Builder mergePattern(com.google.protobuf.StringValue value) {
            if (patternBuilder_ == null) {
              if (pattern_ != null) {
                pattern_ =
                  com.google.protobuf.StringValue.newBuilder(pattern_).mergeFrom(value).buildPartial();
              } else {
                pattern_ = value;
              }
              onChanged();
            } else {
              patternBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          public Builder clearPattern() {
            if (patternBuilder_ == null) {
              pattern_ = null;
              onChanged();
            } else {
              pattern_ = null;
              patternBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          public com.google.protobuf.StringValue.Builder getPatternBuilder() {
            
            onChanged();
            return getPatternFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
            if (patternBuilder_ != null) {
              return patternBuilder_.getMessageOrBuilder();
            } else {
              return pattern_ == null ?
                  com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
            }
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 12;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
              getPatternFieldBuilder() {
            if (patternBuilder_ == null) {
              patternBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                      getPattern(),
                      getParentForChildren(),
                      isClean());
              pattern_ = null;
            }
            return patternBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> opacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          public boolean hasOpacityTransition() {
            return opacityTransitionBuilder_ != null || opacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            } else {
              return opacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          public Builder setOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacityTransition_ = value;
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          public Builder setOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          public Builder mergeOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (opacityTransition_ != null) {
                opacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(opacityTransition_).mergeFrom(value).buildPartial();
              } else {
                opacityTransition_ = value;
              }
              onChanged();
            } else {
              opacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          public Builder clearOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
              onChanged();
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getOpacityTransitionBuilder() {
            
            onChanged();
            return getOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
            if (opacityTransitionBuilder_ != null) {
              return opacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return opacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 13;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getOpacityTransitionFieldBuilder() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              opacityTransition_ = null;
            }
            return opacityTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> colorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          public boolean hasColorTransition() {
            return colorTransitionBuilder_ != null || colorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
            if (colorTransitionBuilder_ == null) {
              return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            } else {
              return colorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          public Builder setColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorTransition_ = value;
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          public Builder setColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = builderForValue.build();
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          public Builder mergeColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (colorTransition_ != null) {
                colorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(colorTransition_).mergeFrom(value).buildPartial();
              } else {
                colorTransition_ = value;
              }
              onChanged();
            } else {
              colorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          public Builder clearColorTransition() {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
              onChanged();
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getColorTransitionBuilder() {
            
            onChanged();
            return getColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
            if (colorTransitionBuilder_ != null) {
              return colorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return colorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 14;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getColorTransitionFieldBuilder() {
            if (colorTransitionBuilder_ == null) {
              colorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getColorTransition(),
                      getParentForChildren(),
                      isClean());
              colorTransition_ = null;
            }
            return colorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions outlineColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> outlineColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          public boolean hasOutlineColorTransition() {
            return outlineColorTransitionBuilder_ != null || outlineColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOutlineColorTransition() {
            if (outlineColorTransitionBuilder_ == null) {
              return outlineColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : outlineColorTransition_;
            } else {
              return outlineColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          public Builder setOutlineColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (outlineColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              outlineColorTransition_ = value;
              onChanged();
            } else {
              outlineColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          public Builder setOutlineColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (outlineColorTransitionBuilder_ == null) {
              outlineColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              outlineColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          public Builder mergeOutlineColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (outlineColorTransitionBuilder_ == null) {
              if (outlineColorTransition_ != null) {
                outlineColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(outlineColorTransition_).mergeFrom(value).buildPartial();
              } else {
                outlineColorTransition_ = value;
              }
              onChanged();
            } else {
              outlineColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          public Builder clearOutlineColorTransition() {
            if (outlineColorTransitionBuilder_ == null) {
              outlineColorTransition_ = null;
              onChanged();
            } else {
              outlineColorTransition_ = null;
              outlineColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getOutlineColorTransitionBuilder() {
            
            onChanged();
            return getOutlineColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOutlineColorTransitionOrBuilder() {
            if (outlineColorTransitionBuilder_ != null) {
              return outlineColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return outlineColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : outlineColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions outline_color_transition = 15;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getOutlineColorTransitionFieldBuilder() {
            if (outlineColorTransitionBuilder_ == null) {
              outlineColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getOutlineColorTransition(),
                      getParentForChildren(),
                      isClean());
              outlineColorTransition_ = null;
            }
            return outlineColorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions translateTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> translateTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public boolean hasTranslateTransition() {
            return translateTransitionBuilder_ != null || translateTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition() {
            if (translateTransitionBuilder_ == null) {
              return translateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
            } else {
              return translateTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public Builder setTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (translateTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              translateTransition_ = value;
              onChanged();
            } else {
              translateTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public Builder setTranslateTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = builderForValue.build();
              onChanged();
            } else {
              translateTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public Builder mergeTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (translateTransitionBuilder_ == null) {
              if (translateTransition_ != null) {
                translateTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(translateTransition_).mergeFrom(value).buildPartial();
              } else {
                translateTransition_ = value;
              }
              onChanged();
            } else {
              translateTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public Builder clearTranslateTransition() {
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = null;
              onChanged();
            } else {
              translateTransition_ = null;
              translateTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTranslateTransitionBuilder() {
            
            onChanged();
            return getTranslateTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder() {
            if (translateTransitionBuilder_ != null) {
              return translateTransitionBuilder_.getMessageOrBuilder();
            } else {
              return translateTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 16;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTranslateTransitionFieldBuilder() {
            if (translateTransitionBuilder_ == null) {
              translateTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTranslateTransition(),
                      getParentForChildren(),
                      isClean());
              translateTransition_ = null;
            }
            return translateTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions patternTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> patternTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public boolean hasPatternTransition() {
            return patternTransitionBuilder_ != null || patternTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition() {
            if (patternTransitionBuilder_ == null) {
              return patternTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
            } else {
              return patternTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public Builder setPatternTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (patternTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              patternTransition_ = value;
              onChanged();
            } else {
              patternTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public Builder setPatternTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = builderForValue.build();
              onChanged();
            } else {
              patternTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public Builder mergePatternTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (patternTransitionBuilder_ == null) {
              if (patternTransition_ != null) {
                patternTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(patternTransition_).mergeFrom(value).buildPartial();
              } else {
                patternTransition_ = value;
              }
              onChanged();
            } else {
              patternTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public Builder clearPatternTransition() {
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = null;
              onChanged();
            } else {
              patternTransition_ = null;
              patternTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getPatternTransitionBuilder() {
            
            onChanged();
            return getPatternTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder() {
            if (patternTransitionBuilder_ != null) {
              return patternTransitionBuilder_.getMessageOrBuilder();
            } else {
              return patternTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 17;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getPatternTransitionFieldBuilder() {
            if (patternTransitionBuilder_ == null) {
              patternTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getPatternTransition(),
                      getParentForChildren(),
                      isClean());
              patternTransition_ = null;
            }
            return patternTransitionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update.Fill)
        }

        // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update.Fill)
        private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill();
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Fill>
            PARSER = new com.google.protobuf.AbstractParser<Fill>() {
          @java.lang.Override
          public Fill parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Fill(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Fill> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Fill> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface HeatmapOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update.Heatmap)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        boolean hasVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValue getVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        boolean hasMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValue getMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        boolean hasMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValue getMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        boolean hasRadius();
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        com.google.protobuf.FloatValue getRadius();
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getRadiusOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue weight = 5;</code>
         */
        boolean hasWeight();
        /**
         * <code>.google.protobuf.FloatValue weight = 5;</code>
         */
        com.google.protobuf.FloatValue getWeight();
        /**
         * <code>.google.protobuf.FloatValue weight = 5;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getWeightOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue intensity = 6;</code>
         */
        boolean hasIntensity();
        /**
         * <code>.google.protobuf.FloatValue intensity = 6;</code>
         */
        com.google.protobuf.FloatValue getIntensity();
        /**
         * <code>.google.protobuf.FloatValue intensity = 6;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getIntensityOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value color = 7;</code>
         */
        boolean hasColor();
        /**
         * <code>.google.protobuf.Int32Value color = 7;</code>
         */
        com.google.protobuf.Int32Value getColor();
        /**
         * <code>.google.protobuf.Int32Value color = 7;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue opacity = 8;</code>
         */
        boolean hasOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 8;</code>
         */
        com.google.protobuf.FloatValue getOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 8;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
         */
        boolean hasRadiusTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getRadiusTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getRadiusTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
         */
        boolean hasIntensityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIntensityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIntensityTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
         */
        boolean hasOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder();
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Heatmap}
       */
      public  static final class Heatmap extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update.Heatmap)
          HeatmapOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Heatmap.newBuilder() to construct.
        private Heatmap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Heatmap() {
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Heatmap(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (visible_ != null) {
                    subBuilder = visible_.toBuilder();
                  }
                  visible_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visible_);
                    visible_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (minZoom_ != null) {
                    subBuilder = minZoom_.toBuilder();
                  }
                  minZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minZoom_);
                    minZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (maxZoom_ != null) {
                    subBuilder = maxZoom_.toBuilder();
                  }
                  maxZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxZoom_);
                    maxZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (radius_ != null) {
                    subBuilder = radius_.toBuilder();
                  }
                  radius_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(radius_);
                    radius_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 42: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (weight_ != null) {
                    subBuilder = weight_.toBuilder();
                  }
                  weight_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(weight_);
                    weight_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 50: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (intensity_ != null) {
                    subBuilder = intensity_.toBuilder();
                  }
                  intensity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(intensity_);
                    intensity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (color_ != null) {
                    subBuilder = color_.toBuilder();
                  }
                  color_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(color_);
                    color_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 66: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (opacity_ != null) {
                    subBuilder = opacity_.toBuilder();
                  }
                  opacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacity_);
                    opacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 74: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (radiusTransition_ != null) {
                    subBuilder = radiusTransition_.toBuilder();
                  }
                  radiusTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(radiusTransition_);
                    radiusTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 82: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (intensityTransition_ != null) {
                    subBuilder = intensityTransition_.toBuilder();
                  }
                  intensityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(intensityTransition_);
                    intensityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (opacityTransition_ != null) {
                    subBuilder = opacityTransition_.toBuilder();
                  }
                  opacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacityTransition_);
                    opacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.Builder.class);
        }

        public static final int VISIBLE_FIELD_NUMBER = 1;
        private com.google.protobuf.BoolValue visible_;
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public boolean hasVisible() {
          return visible_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValue getVisible() {
          return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
          return getVisible();
        }

        public static final int MIN_ZOOM_FIELD_NUMBER = 2;
        private com.google.protobuf.FloatValue minZoom_;
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public boolean hasMinZoom() {
          return minZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValue getMinZoom() {
          return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
          return getMinZoom();
        }

        public static final int MAX_ZOOM_FIELD_NUMBER = 3;
        private com.google.protobuf.FloatValue maxZoom_;
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public boolean hasMaxZoom() {
          return maxZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValue getMaxZoom() {
          return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
          return getMaxZoom();
        }

        public static final int RADIUS_FIELD_NUMBER = 4;
        private com.google.protobuf.FloatValue radius_;
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        public boolean hasRadius() {
          return radius_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        public com.google.protobuf.FloatValue getRadius() {
          return radius_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : radius_;
        }
        /**
         * <code>.google.protobuf.FloatValue radius = 4;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getRadiusOrBuilder() {
          return getRadius();
        }

        public static final int WEIGHT_FIELD_NUMBER = 5;
        private com.google.protobuf.FloatValue weight_;
        /**
         * <code>.google.protobuf.FloatValue weight = 5;</code>
         */
        public boolean hasWeight() {
          return weight_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue weight = 5;</code>
         */
        public com.google.protobuf.FloatValue getWeight() {
          return weight_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : weight_;
        }
        /**
         * <code>.google.protobuf.FloatValue weight = 5;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getWeightOrBuilder() {
          return getWeight();
        }

        public static final int INTENSITY_FIELD_NUMBER = 6;
        private com.google.protobuf.FloatValue intensity_;
        /**
         * <code>.google.protobuf.FloatValue intensity = 6;</code>
         */
        public boolean hasIntensity() {
          return intensity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue intensity = 6;</code>
         */
        public com.google.protobuf.FloatValue getIntensity() {
          return intensity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : intensity_;
        }
        /**
         * <code>.google.protobuf.FloatValue intensity = 6;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getIntensityOrBuilder() {
          return getIntensity();
        }

        public static final int COLOR_FIELD_NUMBER = 7;
        private com.google.protobuf.Int32Value color_;
        /**
         * <code>.google.protobuf.Int32Value color = 7;</code>
         */
        public boolean hasColor() {
          return color_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 7;</code>
         */
        public com.google.protobuf.Int32Value getColor() {
          return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 7;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
          return getColor();
        }

        public static final int OPACITY_FIELD_NUMBER = 8;
        private com.google.protobuf.FloatValue opacity_;
        /**
         * <code>.google.protobuf.FloatValue opacity = 8;</code>
         */
        public boolean hasOpacity() {
          return opacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 8;</code>
         */
        public com.google.protobuf.FloatValue getOpacity() {
          return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 8;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
          return getOpacity();
        }

        public static final int RADIUS_TRANSITION_FIELD_NUMBER = 9;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions radiusTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
         */
        public boolean hasRadiusTransition() {
          return radiusTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getRadiusTransition() {
          return radiusTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : radiusTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getRadiusTransitionOrBuilder() {
          return getRadiusTransition();
        }

        public static final int INTENSITY_TRANSITION_FIELD_NUMBER = 10;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions intensityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
         */
        public boolean hasIntensityTransition() {
          return intensityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIntensityTransition() {
          return intensityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : intensityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIntensityTransitionOrBuilder() {
          return getIntensityTransition();
        }

        public static final int OPACITY_TRANSITION_FIELD_NUMBER = 11;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
         */
        public boolean hasOpacityTransition() {
          return opacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
          return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
          return getOpacityTransition();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (visible_ != null) {
            output.writeMessage(1, getVisible());
          }
          if (minZoom_ != null) {
            output.writeMessage(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            output.writeMessage(3, getMaxZoom());
          }
          if (radius_ != null) {
            output.writeMessage(4, getRadius());
          }
          if (weight_ != null) {
            output.writeMessage(5, getWeight());
          }
          if (intensity_ != null) {
            output.writeMessage(6, getIntensity());
          }
          if (color_ != null) {
            output.writeMessage(7, getColor());
          }
          if (opacity_ != null) {
            output.writeMessage(8, getOpacity());
          }
          if (radiusTransition_ != null) {
            output.writeMessage(9, getRadiusTransition());
          }
          if (intensityTransition_ != null) {
            output.writeMessage(10, getIntensityTransition());
          }
          if (opacityTransition_ != null) {
            output.writeMessage(11, getOpacityTransition());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (visible_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getVisible());
          }
          if (minZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getMaxZoom());
          }
          if (radius_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getRadius());
          }
          if (weight_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(5, getWeight());
          }
          if (intensity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getIntensity());
          }
          if (color_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getColor());
          }
          if (opacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(8, getOpacity());
          }
          if (radiusTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, getRadiusTransition());
          }
          if (intensityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, getIntensityTransition());
          }
          if (opacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(11, getOpacityTransition());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap)) {
            return super.equals(obj);
          }
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) obj;

          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (!getVisible()
                .equals(other.getVisible())) return false;
          }
          if (hasMinZoom() != other.hasMinZoom()) return false;
          if (hasMinZoom()) {
            if (!getMinZoom()
                .equals(other.getMinZoom())) return false;
          }
          if (hasMaxZoom() != other.hasMaxZoom()) return false;
          if (hasMaxZoom()) {
            if (!getMaxZoom()
                .equals(other.getMaxZoom())) return false;
          }
          if (hasRadius() != other.hasRadius()) return false;
          if (hasRadius()) {
            if (!getRadius()
                .equals(other.getRadius())) return false;
          }
          if (hasWeight() != other.hasWeight()) return false;
          if (hasWeight()) {
            if (!getWeight()
                .equals(other.getWeight())) return false;
          }
          if (hasIntensity() != other.hasIntensity()) return false;
          if (hasIntensity()) {
            if (!getIntensity()
                .equals(other.getIntensity())) return false;
          }
          if (hasColor() != other.hasColor()) return false;
          if (hasColor()) {
            if (!getColor()
                .equals(other.getColor())) return false;
          }
          if (hasOpacity() != other.hasOpacity()) return false;
          if (hasOpacity()) {
            if (!getOpacity()
                .equals(other.getOpacity())) return false;
          }
          if (hasRadiusTransition() != other.hasRadiusTransition()) return false;
          if (hasRadiusTransition()) {
            if (!getRadiusTransition()
                .equals(other.getRadiusTransition())) return false;
          }
          if (hasIntensityTransition() != other.hasIntensityTransition()) return false;
          if (hasIntensityTransition()) {
            if (!getIntensityTransition()
                .equals(other.getIntensityTransition())) return false;
          }
          if (hasOpacityTransition() != other.hasOpacityTransition()) return false;
          if (hasOpacityTransition()) {
            if (!getOpacityTransition()
                .equals(other.getOpacityTransition())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + getVisible().hashCode();
          }
          if (hasMinZoom()) {
            hash = (37 * hash) + MIN_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMinZoom().hashCode();
          }
          if (hasMaxZoom()) {
            hash = (37 * hash) + MAX_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMaxZoom().hashCode();
          }
          if (hasRadius()) {
            hash = (37 * hash) + RADIUS_FIELD_NUMBER;
            hash = (53 * hash) + getRadius().hashCode();
          }
          if (hasWeight()) {
            hash = (37 * hash) + WEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getWeight().hashCode();
          }
          if (hasIntensity()) {
            hash = (37 * hash) + INTENSITY_FIELD_NUMBER;
            hash = (53 * hash) + getIntensity().hashCode();
          }
          if (hasColor()) {
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor().hashCode();
          }
          if (hasOpacity()) {
            hash = (37 * hash) + OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getOpacity().hashCode();
          }
          if (hasRadiusTransition()) {
            hash = (37 * hash) + RADIUS_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getRadiusTransition().hashCode();
          }
          if (hasIntensityTransition()) {
            hash = (37 * hash) + INTENSITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getIntensityTransition().hashCode();
          }
          if (hasOpacityTransition()) {
            hash = (37 * hash) + OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getOpacityTransition().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Heatmap}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update.Heatmap)
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HeatmapOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.Builder.class);
          }

          // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (visibleBuilder_ == null) {
              visible_ = null;
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }
            if (radiusBuilder_ == null) {
              radius_ = null;
            } else {
              radius_ = null;
              radiusBuilder_ = null;
            }
            if (weightBuilder_ == null) {
              weight_ = null;
            } else {
              weight_ = null;
              weightBuilder_ = null;
            }
            if (intensityBuilder_ == null) {
              intensity_ = null;
            } else {
              intensity_ = null;
              intensityBuilder_ = null;
            }
            if (colorBuilder_ == null) {
              color_ = null;
            } else {
              color_ = null;
              colorBuilder_ = null;
            }
            if (opacityBuilder_ == null) {
              opacity_ = null;
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }
            if (radiusTransitionBuilder_ == null) {
              radiusTransition_ = null;
            } else {
              radiusTransition_ = null;
              radiusTransitionBuilder_ = null;
            }
            if (intensityTransitionBuilder_ == null) {
              intensityTransition_ = null;
            } else {
              intensityTransition_ = null;
              intensityTransitionBuilder_ = null;
            }
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_descriptor;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap getDefaultInstanceForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance();
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap build() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap buildPartial() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap(this);
            if (visibleBuilder_ == null) {
              result.visible_ = visible_;
            } else {
              result.visible_ = visibleBuilder_.build();
            }
            if (minZoomBuilder_ == null) {
              result.minZoom_ = minZoom_;
            } else {
              result.minZoom_ = minZoomBuilder_.build();
            }
            if (maxZoomBuilder_ == null) {
              result.maxZoom_ = maxZoom_;
            } else {
              result.maxZoom_ = maxZoomBuilder_.build();
            }
            if (radiusBuilder_ == null) {
              result.radius_ = radius_;
            } else {
              result.radius_ = radiusBuilder_.build();
            }
            if (weightBuilder_ == null) {
              result.weight_ = weight_;
            } else {
              result.weight_ = weightBuilder_.build();
            }
            if (intensityBuilder_ == null) {
              result.intensity_ = intensity_;
            } else {
              result.intensity_ = intensityBuilder_.build();
            }
            if (colorBuilder_ == null) {
              result.color_ = color_;
            } else {
              result.color_ = colorBuilder_.build();
            }
            if (opacityBuilder_ == null) {
              result.opacity_ = opacity_;
            } else {
              result.opacity_ = opacityBuilder_.build();
            }
            if (radiusTransitionBuilder_ == null) {
              result.radiusTransition_ = radiusTransition_;
            } else {
              result.radiusTransition_ = radiusTransitionBuilder_.build();
            }
            if (intensityTransitionBuilder_ == null) {
              result.intensityTransition_ = intensityTransition_;
            } else {
              result.intensityTransition_ = intensityTransitionBuilder_.build();
            }
            if (opacityTransitionBuilder_ == null) {
              result.opacityTransition_ = opacityTransition_;
            } else {
              result.opacityTransition_ = opacityTransitionBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) {
              return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap other) {
            if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance()) return this;
            if (other.hasVisible()) {
              mergeVisible(other.getVisible());
            }
            if (other.hasMinZoom()) {
              mergeMinZoom(other.getMinZoom());
            }
            if (other.hasMaxZoom()) {
              mergeMaxZoom(other.getMaxZoom());
            }
            if (other.hasRadius()) {
              mergeRadius(other.getRadius());
            }
            if (other.hasWeight()) {
              mergeWeight(other.getWeight());
            }
            if (other.hasIntensity()) {
              mergeIntensity(other.getIntensity());
            }
            if (other.hasColor()) {
              mergeColor(other.getColor());
            }
            if (other.hasOpacity()) {
              mergeOpacity(other.getOpacity());
            }
            if (other.hasRadiusTransition()) {
              mergeRadiusTransition(other.getRadiusTransition());
            }
            if (other.hasIntensityTransition()) {
              mergeIntensityTransition(other.getIntensityTransition());
            }
            if (other.hasOpacityTransition()) {
              mergeOpacityTransition(other.getOpacityTransition());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private com.google.protobuf.BoolValue visible_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> visibleBuilder_;
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public boolean hasVisible() {
            return visibleBuilder_ != null || visible_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue getVisible() {
            if (visibleBuilder_ == null) {
              return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            } else {
              return visibleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visible_ = value;
              onChanged();
            } else {
              visibleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (visibleBuilder_ == null) {
              visible_ = builderForValue.build();
              onChanged();
            } else {
              visibleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder mergeVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (visible_ != null) {
                visible_ =
                  com.google.protobuf.BoolValue.newBuilder(visible_).mergeFrom(value).buildPartial();
              } else {
                visible_ = value;
              }
              onChanged();
            } else {
              visibleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder clearVisible() {
            if (visibleBuilder_ == null) {
              visible_ = null;
              onChanged();
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVisibleBuilder() {
            
            onChanged();
            return getVisibleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
            if (visibleBuilder_ != null) {
              return visibleBuilder_.getMessageOrBuilder();
            } else {
              return visible_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVisibleFieldBuilder() {
            if (visibleBuilder_ == null) {
              visibleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVisible(),
                      getParentForChildren(),
                      isClean());
              visible_ = null;
            }
            return visibleBuilder_;
          }

          private com.google.protobuf.FloatValue minZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> minZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public boolean hasMinZoom() {
            return minZoomBuilder_ != null || minZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue getMinZoom() {
            if (minZoomBuilder_ == null) {
              return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            } else {
              return minZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              minZoom_ = value;
              onChanged();
            } else {
              minZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (minZoomBuilder_ == null) {
              minZoom_ = builderForValue.build();
              onChanged();
            } else {
              minZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder mergeMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (minZoom_ != null) {
                minZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(minZoom_).mergeFrom(value).buildPartial();
              } else {
                minZoom_ = value;
              }
              onChanged();
            } else {
              minZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder clearMinZoom() {
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
              onChanged();
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMinZoomBuilder() {
            
            onChanged();
            return getMinZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
            if (minZoomBuilder_ != null) {
              return minZoomBuilder_.getMessageOrBuilder();
            } else {
              return minZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMinZoomFieldBuilder() {
            if (minZoomBuilder_ == null) {
              minZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMinZoom(),
                      getParentForChildren(),
                      isClean());
              minZoom_ = null;
            }
            return minZoomBuilder_;
          }

          private com.google.protobuf.FloatValue maxZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> maxZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public boolean hasMaxZoom() {
            return maxZoomBuilder_ != null || maxZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue getMaxZoom() {
            if (maxZoomBuilder_ == null) {
              return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            } else {
              return maxZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              maxZoom_ = value;
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = builderForValue.build();
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder mergeMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (maxZoom_ != null) {
                maxZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(maxZoom_).mergeFrom(value).buildPartial();
              } else {
                maxZoom_ = value;
              }
              onChanged();
            } else {
              maxZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder clearMaxZoom() {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
              onChanged();
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMaxZoomBuilder() {
            
            onChanged();
            return getMaxZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
            if (maxZoomBuilder_ != null) {
              return maxZoomBuilder_.getMessageOrBuilder();
            } else {
              return maxZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMaxZoomFieldBuilder() {
            if (maxZoomBuilder_ == null) {
              maxZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMaxZoom(),
                      getParentForChildren(),
                      isClean());
              maxZoom_ = null;
            }
            return maxZoomBuilder_;
          }

          private com.google.protobuf.FloatValue radius_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> radiusBuilder_;
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public boolean hasRadius() {
            return radiusBuilder_ != null || radius_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public com.google.protobuf.FloatValue getRadius() {
            if (radiusBuilder_ == null) {
              return radius_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : radius_;
            } else {
              return radiusBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public Builder setRadius(com.google.protobuf.FloatValue value) {
            if (radiusBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              radius_ = value;
              onChanged();
            } else {
              radiusBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public Builder setRadius(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (radiusBuilder_ == null) {
              radius_ = builderForValue.build();
              onChanged();
            } else {
              radiusBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public Builder mergeRadius(com.google.protobuf.FloatValue value) {
            if (radiusBuilder_ == null) {
              if (radius_ != null) {
                radius_ =
                  com.google.protobuf.FloatValue.newBuilder(radius_).mergeFrom(value).buildPartial();
              } else {
                radius_ = value;
              }
              onChanged();
            } else {
              radiusBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public Builder clearRadius() {
            if (radiusBuilder_ == null) {
              radius_ = null;
              onChanged();
            } else {
              radius_ = null;
              radiusBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public com.google.protobuf.FloatValue.Builder getRadiusBuilder() {
            
            onChanged();
            return getRadiusFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getRadiusOrBuilder() {
            if (radiusBuilder_ != null) {
              return radiusBuilder_.getMessageOrBuilder();
            } else {
              return radius_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : radius_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue radius = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getRadiusFieldBuilder() {
            if (radiusBuilder_ == null) {
              radiusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getRadius(),
                      getParentForChildren(),
                      isClean());
              radius_ = null;
            }
            return radiusBuilder_;
          }

          private com.google.protobuf.FloatValue weight_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> weightBuilder_;
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          public boolean hasWeight() {
            return weightBuilder_ != null || weight_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          public com.google.protobuf.FloatValue getWeight() {
            if (weightBuilder_ == null) {
              return weight_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : weight_;
            } else {
              return weightBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          public Builder setWeight(com.google.protobuf.FloatValue value) {
            if (weightBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              weight_ = value;
              onChanged();
            } else {
              weightBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          public Builder setWeight(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (weightBuilder_ == null) {
              weight_ = builderForValue.build();
              onChanged();
            } else {
              weightBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          public Builder mergeWeight(com.google.protobuf.FloatValue value) {
            if (weightBuilder_ == null) {
              if (weight_ != null) {
                weight_ =
                  com.google.protobuf.FloatValue.newBuilder(weight_).mergeFrom(value).buildPartial();
              } else {
                weight_ = value;
              }
              onChanged();
            } else {
              weightBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          public Builder clearWeight() {
            if (weightBuilder_ == null) {
              weight_ = null;
              onChanged();
            } else {
              weight_ = null;
              weightBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          public com.google.protobuf.FloatValue.Builder getWeightBuilder() {
            
            onChanged();
            return getWeightFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getWeightOrBuilder() {
            if (weightBuilder_ != null) {
              return weightBuilder_.getMessageOrBuilder();
            } else {
              return weight_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : weight_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue weight = 5;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getWeightFieldBuilder() {
            if (weightBuilder_ == null) {
              weightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getWeight(),
                      getParentForChildren(),
                      isClean());
              weight_ = null;
            }
            return weightBuilder_;
          }

          private com.google.protobuf.FloatValue intensity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> intensityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          public boolean hasIntensity() {
            return intensityBuilder_ != null || intensity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          public com.google.protobuf.FloatValue getIntensity() {
            if (intensityBuilder_ == null) {
              return intensity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : intensity_;
            } else {
              return intensityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          public Builder setIntensity(com.google.protobuf.FloatValue value) {
            if (intensityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              intensity_ = value;
              onChanged();
            } else {
              intensityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          public Builder setIntensity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (intensityBuilder_ == null) {
              intensity_ = builderForValue.build();
              onChanged();
            } else {
              intensityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          public Builder mergeIntensity(com.google.protobuf.FloatValue value) {
            if (intensityBuilder_ == null) {
              if (intensity_ != null) {
                intensity_ =
                  com.google.protobuf.FloatValue.newBuilder(intensity_).mergeFrom(value).buildPartial();
              } else {
                intensity_ = value;
              }
              onChanged();
            } else {
              intensityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          public Builder clearIntensity() {
            if (intensityBuilder_ == null) {
              intensity_ = null;
              onChanged();
            } else {
              intensity_ = null;
              intensityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          public com.google.protobuf.FloatValue.Builder getIntensityBuilder() {
            
            onChanged();
            return getIntensityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getIntensityOrBuilder() {
            if (intensityBuilder_ != null) {
              return intensityBuilder_.getMessageOrBuilder();
            } else {
              return intensity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : intensity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue intensity = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getIntensityFieldBuilder() {
            if (intensityBuilder_ == null) {
              intensityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getIntensity(),
                      getParentForChildren(),
                      isClean());
              intensity_ = null;
            }
            return intensityBuilder_;
          }

          private com.google.protobuf.Int32Value color_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> colorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          public boolean hasColor() {
            return colorBuilder_ != null || color_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          public com.google.protobuf.Int32Value getColor() {
            if (colorBuilder_ == null) {
              return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            } else {
              return colorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          public Builder setColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              color_ = value;
              onChanged();
            } else {
              colorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          public Builder setColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (colorBuilder_ == null) {
              color_ = builderForValue.build();
              onChanged();
            } else {
              colorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          public Builder mergeColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (color_ != null) {
                color_ =
                  com.google.protobuf.Int32Value.newBuilder(color_).mergeFrom(value).buildPartial();
              } else {
                color_ = value;
              }
              onChanged();
            } else {
              colorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          public Builder clearColor() {
            if (colorBuilder_ == null) {
              color_ = null;
              onChanged();
            } else {
              color_ = null;
              colorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          public com.google.protobuf.Int32Value.Builder getColorBuilder() {
            
            onChanged();
            return getColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
            if (colorBuilder_ != null) {
              return colorBuilder_.getMessageOrBuilder();
            } else {
              return color_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getColorFieldBuilder() {
            if (colorBuilder_ == null) {
              colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getColor(),
                      getParentForChildren(),
                      isClean());
              color_ = null;
            }
            return colorBuilder_;
          }

          private com.google.protobuf.FloatValue opacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> opacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          public boolean hasOpacity() {
            return opacityBuilder_ != null || opacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          public com.google.protobuf.FloatValue getOpacity() {
            if (opacityBuilder_ == null) {
              return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            } else {
              return opacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          public Builder setOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacity_ = value;
              onChanged();
            } else {
              opacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          public Builder setOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (opacityBuilder_ == null) {
              opacity_ = builderForValue.build();
              onChanged();
            } else {
              opacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          public Builder mergeOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (opacity_ != null) {
                opacity_ =
                  com.google.protobuf.FloatValue.newBuilder(opacity_).mergeFrom(value).buildPartial();
              } else {
                opacity_ = value;
              }
              onChanged();
            } else {
              opacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          public Builder clearOpacity() {
            if (opacityBuilder_ == null) {
              opacity_ = null;
              onChanged();
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          public com.google.protobuf.FloatValue.Builder getOpacityBuilder() {
            
            onChanged();
            return getOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
            if (opacityBuilder_ != null) {
              return opacityBuilder_.getMessageOrBuilder();
            } else {
              return opacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 8;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getOpacityFieldBuilder() {
            if (opacityBuilder_ == null) {
              opacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getOpacity(),
                      getParentForChildren(),
                      isClean());
              opacity_ = null;
            }
            return opacityBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions radiusTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> radiusTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          public boolean hasRadiusTransition() {
            return radiusTransitionBuilder_ != null || radiusTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getRadiusTransition() {
            if (radiusTransitionBuilder_ == null) {
              return radiusTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : radiusTransition_;
            } else {
              return radiusTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          public Builder setRadiusTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (radiusTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              radiusTransition_ = value;
              onChanged();
            } else {
              radiusTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          public Builder setRadiusTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (radiusTransitionBuilder_ == null) {
              radiusTransition_ = builderForValue.build();
              onChanged();
            } else {
              radiusTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          public Builder mergeRadiusTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (radiusTransitionBuilder_ == null) {
              if (radiusTransition_ != null) {
                radiusTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(radiusTransition_).mergeFrom(value).buildPartial();
              } else {
                radiusTransition_ = value;
              }
              onChanged();
            } else {
              radiusTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          public Builder clearRadiusTransition() {
            if (radiusTransitionBuilder_ == null) {
              radiusTransition_ = null;
              onChanged();
            } else {
              radiusTransition_ = null;
              radiusTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getRadiusTransitionBuilder() {
            
            onChanged();
            return getRadiusTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getRadiusTransitionOrBuilder() {
            if (radiusTransitionBuilder_ != null) {
              return radiusTransitionBuilder_.getMessageOrBuilder();
            } else {
              return radiusTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : radiusTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions radius_transition = 9;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getRadiusTransitionFieldBuilder() {
            if (radiusTransitionBuilder_ == null) {
              radiusTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getRadiusTransition(),
                      getParentForChildren(),
                      isClean());
              radiusTransition_ = null;
            }
            return radiusTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions intensityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> intensityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          public boolean hasIntensityTransition() {
            return intensityTransitionBuilder_ != null || intensityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIntensityTransition() {
            if (intensityTransitionBuilder_ == null) {
              return intensityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : intensityTransition_;
            } else {
              return intensityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          public Builder setIntensityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (intensityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              intensityTransition_ = value;
              onChanged();
            } else {
              intensityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          public Builder setIntensityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (intensityTransitionBuilder_ == null) {
              intensityTransition_ = builderForValue.build();
              onChanged();
            } else {
              intensityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          public Builder mergeIntensityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (intensityTransitionBuilder_ == null) {
              if (intensityTransition_ != null) {
                intensityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(intensityTransition_).mergeFrom(value).buildPartial();
              } else {
                intensityTransition_ = value;
              }
              onChanged();
            } else {
              intensityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          public Builder clearIntensityTransition() {
            if (intensityTransitionBuilder_ == null) {
              intensityTransition_ = null;
              onChanged();
            } else {
              intensityTransition_ = null;
              intensityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getIntensityTransitionBuilder() {
            
            onChanged();
            return getIntensityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIntensityTransitionOrBuilder() {
            if (intensityTransitionBuilder_ != null) {
              return intensityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return intensityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : intensityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions intensity_transition = 10;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getIntensityTransitionFieldBuilder() {
            if (intensityTransitionBuilder_ == null) {
              intensityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getIntensityTransition(),
                      getParentForChildren(),
                      isClean());
              intensityTransition_ = null;
            }
            return intensityTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> opacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          public boolean hasOpacityTransition() {
            return opacityTransitionBuilder_ != null || opacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            } else {
              return opacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          public Builder setOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacityTransition_ = value;
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          public Builder setOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          public Builder mergeOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (opacityTransition_ != null) {
                opacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(opacityTransition_).mergeFrom(value).buildPartial();
              } else {
                opacityTransition_ = value;
              }
              onChanged();
            } else {
              opacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          public Builder clearOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
              onChanged();
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getOpacityTransitionBuilder() {
            
            onChanged();
            return getOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
            if (opacityTransitionBuilder_ != null) {
              return opacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return opacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 11;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getOpacityTransitionFieldBuilder() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              opacityTransition_ = null;
            }
            return opacityTransitionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update.Heatmap)
        }

        // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update.Heatmap)
        private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap();
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Heatmap>
            PARSER = new com.google.protobuf.AbstractParser<Heatmap>() {
          @java.lang.Override
          public Heatmap parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Heatmap(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Heatmap> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Heatmap> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface HillshadeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update.Hillshade)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        boolean hasVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValue getVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        boolean hasMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValue getMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        boolean hasMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValue getMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
         */
        boolean hasIlluminationDirection();
        /**
         * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
         */
        com.google.protobuf.FloatValue getIlluminationDirection();
        /**
         * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getIlluminationDirectionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
         */
        int getIlluminationAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getIlluminationAnchor();

        /**
         * <code>bool has_illumination_anchor = 6;</code>
         */
        boolean getHasIlluminationAnchor();

        /**
         * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
         */
        boolean hasExaggeration();
        /**
         * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
         */
        com.google.protobuf.FloatValue getExaggeration();
        /**
         * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getExaggerationOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
         */
        boolean hasShadowColor();
        /**
         * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
         */
        com.google.protobuf.Int32Value getShadowColor();
        /**
         * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getShadowColorOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
         */
        boolean hasHighlightColor();
        /**
         * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
         */
        com.google.protobuf.Int32Value getHighlightColor();
        /**
         * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getHighlightColorOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value accent_color = 10;</code>
         */
        boolean hasAccentColor();
        /**
         * <code>.google.protobuf.Int32Value accent_color = 10;</code>
         */
        com.google.protobuf.Int32Value getAccentColor();
        /**
         * <code>.google.protobuf.Int32Value accent_color = 10;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getAccentColorOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
         */
        boolean hasExaggerationTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getExaggerationTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getExaggerationTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
         */
        boolean hasShadowColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getShadowColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getShadowColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
         */
        boolean hasHighlightColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getHighlightColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getHighlightColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
         */
        boolean hasAccentColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getAccentColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getAccentColorTransitionOrBuilder();
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Hillshade}
       */
      public  static final class Hillshade extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update.Hillshade)
          HillshadeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Hillshade.newBuilder() to construct.
        private Hillshade(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Hillshade() {
          illuminationAnchor_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Hillshade(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (visible_ != null) {
                    subBuilder = visible_.toBuilder();
                  }
                  visible_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visible_);
                    visible_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (minZoom_ != null) {
                    subBuilder = minZoom_.toBuilder();
                  }
                  minZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minZoom_);
                    minZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (maxZoom_ != null) {
                    subBuilder = maxZoom_.toBuilder();
                  }
                  maxZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxZoom_);
                    maxZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 34: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (illuminationDirection_ != null) {
                    subBuilder = illuminationDirection_.toBuilder();
                  }
                  illuminationDirection_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(illuminationDirection_);
                    illuminationDirection_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 40: {
                  int rawValue = input.readEnum();

                  illuminationAnchor_ = rawValue;
                  break;
                }
                case 48: {

                  hasIlluminationAnchor_ = input.readBool();
                  break;
                }
                case 58: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (exaggeration_ != null) {
                    subBuilder = exaggeration_.toBuilder();
                  }
                  exaggeration_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(exaggeration_);
                    exaggeration_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 66: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (shadowColor_ != null) {
                    subBuilder = shadowColor_.toBuilder();
                  }
                  shadowColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(shadowColor_);
                    shadowColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 74: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (highlightColor_ != null) {
                    subBuilder = highlightColor_.toBuilder();
                  }
                  highlightColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(highlightColor_);
                    highlightColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 82: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (accentColor_ != null) {
                    subBuilder = accentColor_.toBuilder();
                  }
                  accentColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(accentColor_);
                    accentColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (exaggerationTransition_ != null) {
                    subBuilder = exaggerationTransition_.toBuilder();
                  }
                  exaggerationTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(exaggerationTransition_);
                    exaggerationTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 98: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (shadowColorTransition_ != null) {
                    subBuilder = shadowColorTransition_.toBuilder();
                  }
                  shadowColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(shadowColorTransition_);
                    shadowColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 106: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (highlightColorTransition_ != null) {
                    subBuilder = highlightColorTransition_.toBuilder();
                  }
                  highlightColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(highlightColorTransition_);
                    highlightColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 114: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (accentColorTransition_ != null) {
                    subBuilder = accentColorTransition_.toBuilder();
                  }
                  accentColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(accentColorTransition_);
                    accentColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.Builder.class);
        }

        public static final int VISIBLE_FIELD_NUMBER = 1;
        private com.google.protobuf.BoolValue visible_;
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public boolean hasVisible() {
          return visible_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValue getVisible() {
          return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
          return getVisible();
        }

        public static final int MIN_ZOOM_FIELD_NUMBER = 2;
        private com.google.protobuf.FloatValue minZoom_;
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public boolean hasMinZoom() {
          return minZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValue getMinZoom() {
          return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
          return getMinZoom();
        }

        public static final int MAX_ZOOM_FIELD_NUMBER = 3;
        private com.google.protobuf.FloatValue maxZoom_;
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public boolean hasMaxZoom() {
          return maxZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValue getMaxZoom() {
          return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
          return getMaxZoom();
        }

        public static final int ILLUMINATION_DIRECTION_FIELD_NUMBER = 4;
        private com.google.protobuf.FloatValue illuminationDirection_;
        /**
         * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
         */
        public boolean hasIlluminationDirection() {
          return illuminationDirection_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
         */
        public com.google.protobuf.FloatValue getIlluminationDirection() {
          return illuminationDirection_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : illuminationDirection_;
        }
        /**
         * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getIlluminationDirectionOrBuilder() {
          return getIlluminationDirection();
        }

        public static final int ILLUMINATION_ANCHOR_FIELD_NUMBER = 5;
        private int illuminationAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
         */
        public int getIlluminationAnchorValue() {
          return illuminationAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getIlluminationAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(illuminationAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_ILLUMINATION_ANCHOR_FIELD_NUMBER = 6;
        private boolean hasIlluminationAnchor_;
        /**
         * <code>bool has_illumination_anchor = 6;</code>
         */
        public boolean getHasIlluminationAnchor() {
          return hasIlluminationAnchor_;
        }

        public static final int EXAGGERATION_FIELD_NUMBER = 7;
        private com.google.protobuf.FloatValue exaggeration_;
        /**
         * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
         */
        public boolean hasExaggeration() {
          return exaggeration_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
         */
        public com.google.protobuf.FloatValue getExaggeration() {
          return exaggeration_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : exaggeration_;
        }
        /**
         * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getExaggerationOrBuilder() {
          return getExaggeration();
        }

        public static final int SHADOW_COLOR_FIELD_NUMBER = 8;
        private com.google.protobuf.Int32Value shadowColor_;
        /**
         * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
         */
        public boolean hasShadowColor() {
          return shadowColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
         */
        public com.google.protobuf.Int32Value getShadowColor() {
          return shadowColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : shadowColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getShadowColorOrBuilder() {
          return getShadowColor();
        }

        public static final int HIGHLIGHT_COLOR_FIELD_NUMBER = 9;
        private com.google.protobuf.Int32Value highlightColor_;
        /**
         * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
         */
        public boolean hasHighlightColor() {
          return highlightColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
         */
        public com.google.protobuf.Int32Value getHighlightColor() {
          return highlightColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : highlightColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getHighlightColorOrBuilder() {
          return getHighlightColor();
        }

        public static final int ACCENT_COLOR_FIELD_NUMBER = 10;
        private com.google.protobuf.Int32Value accentColor_;
        /**
         * <code>.google.protobuf.Int32Value accent_color = 10;</code>
         */
        public boolean hasAccentColor() {
          return accentColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value accent_color = 10;</code>
         */
        public com.google.protobuf.Int32Value getAccentColor() {
          return accentColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : accentColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value accent_color = 10;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getAccentColorOrBuilder() {
          return getAccentColor();
        }

        public static final int EXAGGERATION_TRANSITION_FIELD_NUMBER = 11;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions exaggerationTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
         */
        public boolean hasExaggerationTransition() {
          return exaggerationTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getExaggerationTransition() {
          return exaggerationTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : exaggerationTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getExaggerationTransitionOrBuilder() {
          return getExaggerationTransition();
        }

        public static final int SHADOW_COLOR_TRANSITION_FIELD_NUMBER = 12;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions shadowColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
         */
        public boolean hasShadowColorTransition() {
          return shadowColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getShadowColorTransition() {
          return shadowColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : shadowColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getShadowColorTransitionOrBuilder() {
          return getShadowColorTransition();
        }

        public static final int HIGHLIGHT_COLOR_TRANSITION_FIELD_NUMBER = 13;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions highlightColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
         */
        public boolean hasHighlightColorTransition() {
          return highlightColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getHighlightColorTransition() {
          return highlightColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : highlightColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getHighlightColorTransitionOrBuilder() {
          return getHighlightColorTransition();
        }

        public static final int ACCENT_COLOR_TRANSITION_FIELD_NUMBER = 14;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions accentColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
         */
        public boolean hasAccentColorTransition() {
          return accentColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getAccentColorTransition() {
          return accentColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : accentColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getAccentColorTransitionOrBuilder() {
          return getAccentColorTransition();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (visible_ != null) {
            output.writeMessage(1, getVisible());
          }
          if (minZoom_ != null) {
            output.writeMessage(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            output.writeMessage(3, getMaxZoom());
          }
          if (illuminationDirection_ != null) {
            output.writeMessage(4, getIlluminationDirection());
          }
          if (illuminationAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(5, illuminationAnchor_);
          }
          if (hasIlluminationAnchor_ != false) {
            output.writeBool(6, hasIlluminationAnchor_);
          }
          if (exaggeration_ != null) {
            output.writeMessage(7, getExaggeration());
          }
          if (shadowColor_ != null) {
            output.writeMessage(8, getShadowColor());
          }
          if (highlightColor_ != null) {
            output.writeMessage(9, getHighlightColor());
          }
          if (accentColor_ != null) {
            output.writeMessage(10, getAccentColor());
          }
          if (exaggerationTransition_ != null) {
            output.writeMessage(11, getExaggerationTransition());
          }
          if (shadowColorTransition_ != null) {
            output.writeMessage(12, getShadowColorTransition());
          }
          if (highlightColorTransition_ != null) {
            output.writeMessage(13, getHighlightColorTransition());
          }
          if (accentColorTransition_ != null) {
            output.writeMessage(14, getAccentColorTransition());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (visible_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getVisible());
          }
          if (minZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getMaxZoom());
          }
          if (illuminationDirection_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, getIlluminationDirection());
          }
          if (illuminationAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(5, illuminationAnchor_);
          }
          if (hasIlluminationAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(6, hasIlluminationAnchor_);
          }
          if (exaggeration_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getExaggeration());
          }
          if (shadowColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(8, getShadowColor());
          }
          if (highlightColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, getHighlightColor());
          }
          if (accentColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, getAccentColor());
          }
          if (exaggerationTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(11, getExaggerationTransition());
          }
          if (shadowColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(12, getShadowColorTransition());
          }
          if (highlightColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(13, getHighlightColorTransition());
          }
          if (accentColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(14, getAccentColorTransition());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade)) {
            return super.equals(obj);
          }
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) obj;

          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (!getVisible()
                .equals(other.getVisible())) return false;
          }
          if (hasMinZoom() != other.hasMinZoom()) return false;
          if (hasMinZoom()) {
            if (!getMinZoom()
                .equals(other.getMinZoom())) return false;
          }
          if (hasMaxZoom() != other.hasMaxZoom()) return false;
          if (hasMaxZoom()) {
            if (!getMaxZoom()
                .equals(other.getMaxZoom())) return false;
          }
          if (hasIlluminationDirection() != other.hasIlluminationDirection()) return false;
          if (hasIlluminationDirection()) {
            if (!getIlluminationDirection()
                .equals(other.getIlluminationDirection())) return false;
          }
          if (illuminationAnchor_ != other.illuminationAnchor_) return false;
          if (getHasIlluminationAnchor()
              != other.getHasIlluminationAnchor()) return false;
          if (hasExaggeration() != other.hasExaggeration()) return false;
          if (hasExaggeration()) {
            if (!getExaggeration()
                .equals(other.getExaggeration())) return false;
          }
          if (hasShadowColor() != other.hasShadowColor()) return false;
          if (hasShadowColor()) {
            if (!getShadowColor()
                .equals(other.getShadowColor())) return false;
          }
          if (hasHighlightColor() != other.hasHighlightColor()) return false;
          if (hasHighlightColor()) {
            if (!getHighlightColor()
                .equals(other.getHighlightColor())) return false;
          }
          if (hasAccentColor() != other.hasAccentColor()) return false;
          if (hasAccentColor()) {
            if (!getAccentColor()
                .equals(other.getAccentColor())) return false;
          }
          if (hasExaggerationTransition() != other.hasExaggerationTransition()) return false;
          if (hasExaggerationTransition()) {
            if (!getExaggerationTransition()
                .equals(other.getExaggerationTransition())) return false;
          }
          if (hasShadowColorTransition() != other.hasShadowColorTransition()) return false;
          if (hasShadowColorTransition()) {
            if (!getShadowColorTransition()
                .equals(other.getShadowColorTransition())) return false;
          }
          if (hasHighlightColorTransition() != other.hasHighlightColorTransition()) return false;
          if (hasHighlightColorTransition()) {
            if (!getHighlightColorTransition()
                .equals(other.getHighlightColorTransition())) return false;
          }
          if (hasAccentColorTransition() != other.hasAccentColorTransition()) return false;
          if (hasAccentColorTransition()) {
            if (!getAccentColorTransition()
                .equals(other.getAccentColorTransition())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + getVisible().hashCode();
          }
          if (hasMinZoom()) {
            hash = (37 * hash) + MIN_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMinZoom().hashCode();
          }
          if (hasMaxZoom()) {
            hash = (37 * hash) + MAX_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMaxZoom().hashCode();
          }
          if (hasIlluminationDirection()) {
            hash = (37 * hash) + ILLUMINATION_DIRECTION_FIELD_NUMBER;
            hash = (53 * hash) + getIlluminationDirection().hashCode();
          }
          hash = (37 * hash) + ILLUMINATION_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + illuminationAnchor_;
          hash = (37 * hash) + HAS_ILLUMINATION_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIlluminationAnchor());
          if (hasExaggeration()) {
            hash = (37 * hash) + EXAGGERATION_FIELD_NUMBER;
            hash = (53 * hash) + getExaggeration().hashCode();
          }
          if (hasShadowColor()) {
            hash = (37 * hash) + SHADOW_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getShadowColor().hashCode();
          }
          if (hasHighlightColor()) {
            hash = (37 * hash) + HIGHLIGHT_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getHighlightColor().hashCode();
          }
          if (hasAccentColor()) {
            hash = (37 * hash) + ACCENT_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getAccentColor().hashCode();
          }
          if (hasExaggerationTransition()) {
            hash = (37 * hash) + EXAGGERATION_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getExaggerationTransition().hashCode();
          }
          if (hasShadowColorTransition()) {
            hash = (37 * hash) + SHADOW_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getShadowColorTransition().hashCode();
          }
          if (hasHighlightColorTransition()) {
            hash = (37 * hash) + HIGHLIGHT_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getHighlightColorTransition().hashCode();
          }
          if (hasAccentColorTransition()) {
            hash = (37 * hash) + ACCENT_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getAccentColorTransition().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Hillshade}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update.Hillshade)
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HillshadeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.Builder.class);
          }

          // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (visibleBuilder_ == null) {
              visible_ = null;
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }
            if (illuminationDirectionBuilder_ == null) {
              illuminationDirection_ = null;
            } else {
              illuminationDirection_ = null;
              illuminationDirectionBuilder_ = null;
            }
            illuminationAnchor_ = 0;

            hasIlluminationAnchor_ = false;

            if (exaggerationBuilder_ == null) {
              exaggeration_ = null;
            } else {
              exaggeration_ = null;
              exaggerationBuilder_ = null;
            }
            if (shadowColorBuilder_ == null) {
              shadowColor_ = null;
            } else {
              shadowColor_ = null;
              shadowColorBuilder_ = null;
            }
            if (highlightColorBuilder_ == null) {
              highlightColor_ = null;
            } else {
              highlightColor_ = null;
              highlightColorBuilder_ = null;
            }
            if (accentColorBuilder_ == null) {
              accentColor_ = null;
            } else {
              accentColor_ = null;
              accentColorBuilder_ = null;
            }
            if (exaggerationTransitionBuilder_ == null) {
              exaggerationTransition_ = null;
            } else {
              exaggerationTransition_ = null;
              exaggerationTransitionBuilder_ = null;
            }
            if (shadowColorTransitionBuilder_ == null) {
              shadowColorTransition_ = null;
            } else {
              shadowColorTransition_ = null;
              shadowColorTransitionBuilder_ = null;
            }
            if (highlightColorTransitionBuilder_ == null) {
              highlightColorTransition_ = null;
            } else {
              highlightColorTransition_ = null;
              highlightColorTransitionBuilder_ = null;
            }
            if (accentColorTransitionBuilder_ == null) {
              accentColorTransition_ = null;
            } else {
              accentColorTransition_ = null;
              accentColorTransitionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_descriptor;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade getDefaultInstanceForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance();
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade build() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade buildPartial() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade(this);
            if (visibleBuilder_ == null) {
              result.visible_ = visible_;
            } else {
              result.visible_ = visibleBuilder_.build();
            }
            if (minZoomBuilder_ == null) {
              result.minZoom_ = minZoom_;
            } else {
              result.minZoom_ = minZoomBuilder_.build();
            }
            if (maxZoomBuilder_ == null) {
              result.maxZoom_ = maxZoom_;
            } else {
              result.maxZoom_ = maxZoomBuilder_.build();
            }
            if (illuminationDirectionBuilder_ == null) {
              result.illuminationDirection_ = illuminationDirection_;
            } else {
              result.illuminationDirection_ = illuminationDirectionBuilder_.build();
            }
            result.illuminationAnchor_ = illuminationAnchor_;
            result.hasIlluminationAnchor_ = hasIlluminationAnchor_;
            if (exaggerationBuilder_ == null) {
              result.exaggeration_ = exaggeration_;
            } else {
              result.exaggeration_ = exaggerationBuilder_.build();
            }
            if (shadowColorBuilder_ == null) {
              result.shadowColor_ = shadowColor_;
            } else {
              result.shadowColor_ = shadowColorBuilder_.build();
            }
            if (highlightColorBuilder_ == null) {
              result.highlightColor_ = highlightColor_;
            } else {
              result.highlightColor_ = highlightColorBuilder_.build();
            }
            if (accentColorBuilder_ == null) {
              result.accentColor_ = accentColor_;
            } else {
              result.accentColor_ = accentColorBuilder_.build();
            }
            if (exaggerationTransitionBuilder_ == null) {
              result.exaggerationTransition_ = exaggerationTransition_;
            } else {
              result.exaggerationTransition_ = exaggerationTransitionBuilder_.build();
            }
            if (shadowColorTransitionBuilder_ == null) {
              result.shadowColorTransition_ = shadowColorTransition_;
            } else {
              result.shadowColorTransition_ = shadowColorTransitionBuilder_.build();
            }
            if (highlightColorTransitionBuilder_ == null) {
              result.highlightColorTransition_ = highlightColorTransition_;
            } else {
              result.highlightColorTransition_ = highlightColorTransitionBuilder_.build();
            }
            if (accentColorTransitionBuilder_ == null) {
              result.accentColorTransition_ = accentColorTransition_;
            } else {
              result.accentColorTransition_ = accentColorTransitionBuilder_.build();
            }
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) {
              return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade other) {
            if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance()) return this;
            if (other.hasVisible()) {
              mergeVisible(other.getVisible());
            }
            if (other.hasMinZoom()) {
              mergeMinZoom(other.getMinZoom());
            }
            if (other.hasMaxZoom()) {
              mergeMaxZoom(other.getMaxZoom());
            }
            if (other.hasIlluminationDirection()) {
              mergeIlluminationDirection(other.getIlluminationDirection());
            }
            if (other.illuminationAnchor_ != 0) {
              setIlluminationAnchorValue(other.getIlluminationAnchorValue());
            }
            if (other.getHasIlluminationAnchor() != false) {
              setHasIlluminationAnchor(other.getHasIlluminationAnchor());
            }
            if (other.hasExaggeration()) {
              mergeExaggeration(other.getExaggeration());
            }
            if (other.hasShadowColor()) {
              mergeShadowColor(other.getShadowColor());
            }
            if (other.hasHighlightColor()) {
              mergeHighlightColor(other.getHighlightColor());
            }
            if (other.hasAccentColor()) {
              mergeAccentColor(other.getAccentColor());
            }
            if (other.hasExaggerationTransition()) {
              mergeExaggerationTransition(other.getExaggerationTransition());
            }
            if (other.hasShadowColorTransition()) {
              mergeShadowColorTransition(other.getShadowColorTransition());
            }
            if (other.hasHighlightColorTransition()) {
              mergeHighlightColorTransition(other.getHighlightColorTransition());
            }
            if (other.hasAccentColorTransition()) {
              mergeAccentColorTransition(other.getAccentColorTransition());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private com.google.protobuf.BoolValue visible_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> visibleBuilder_;
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public boolean hasVisible() {
            return visibleBuilder_ != null || visible_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue getVisible() {
            if (visibleBuilder_ == null) {
              return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            } else {
              return visibleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visible_ = value;
              onChanged();
            } else {
              visibleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (visibleBuilder_ == null) {
              visible_ = builderForValue.build();
              onChanged();
            } else {
              visibleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder mergeVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (visible_ != null) {
                visible_ =
                  com.google.protobuf.BoolValue.newBuilder(visible_).mergeFrom(value).buildPartial();
              } else {
                visible_ = value;
              }
              onChanged();
            } else {
              visibleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder clearVisible() {
            if (visibleBuilder_ == null) {
              visible_ = null;
              onChanged();
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVisibleBuilder() {
            
            onChanged();
            return getVisibleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
            if (visibleBuilder_ != null) {
              return visibleBuilder_.getMessageOrBuilder();
            } else {
              return visible_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVisibleFieldBuilder() {
            if (visibleBuilder_ == null) {
              visibleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVisible(),
                      getParentForChildren(),
                      isClean());
              visible_ = null;
            }
            return visibleBuilder_;
          }

          private com.google.protobuf.FloatValue minZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> minZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public boolean hasMinZoom() {
            return minZoomBuilder_ != null || minZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue getMinZoom() {
            if (minZoomBuilder_ == null) {
              return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            } else {
              return minZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              minZoom_ = value;
              onChanged();
            } else {
              minZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (minZoomBuilder_ == null) {
              minZoom_ = builderForValue.build();
              onChanged();
            } else {
              minZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder mergeMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (minZoom_ != null) {
                minZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(minZoom_).mergeFrom(value).buildPartial();
              } else {
                minZoom_ = value;
              }
              onChanged();
            } else {
              minZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder clearMinZoom() {
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
              onChanged();
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMinZoomBuilder() {
            
            onChanged();
            return getMinZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
            if (minZoomBuilder_ != null) {
              return minZoomBuilder_.getMessageOrBuilder();
            } else {
              return minZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMinZoomFieldBuilder() {
            if (minZoomBuilder_ == null) {
              minZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMinZoom(),
                      getParentForChildren(),
                      isClean());
              minZoom_ = null;
            }
            return minZoomBuilder_;
          }

          private com.google.protobuf.FloatValue maxZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> maxZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public boolean hasMaxZoom() {
            return maxZoomBuilder_ != null || maxZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue getMaxZoom() {
            if (maxZoomBuilder_ == null) {
              return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            } else {
              return maxZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              maxZoom_ = value;
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = builderForValue.build();
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder mergeMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (maxZoom_ != null) {
                maxZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(maxZoom_).mergeFrom(value).buildPartial();
              } else {
                maxZoom_ = value;
              }
              onChanged();
            } else {
              maxZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder clearMaxZoom() {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
              onChanged();
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMaxZoomBuilder() {
            
            onChanged();
            return getMaxZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
            if (maxZoomBuilder_ != null) {
              return maxZoomBuilder_.getMessageOrBuilder();
            } else {
              return maxZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMaxZoomFieldBuilder() {
            if (maxZoomBuilder_ == null) {
              maxZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMaxZoom(),
                      getParentForChildren(),
                      isClean());
              maxZoom_ = null;
            }
            return maxZoomBuilder_;
          }

          private com.google.protobuf.FloatValue illuminationDirection_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> illuminationDirectionBuilder_;
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          public boolean hasIlluminationDirection() {
            return illuminationDirectionBuilder_ != null || illuminationDirection_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          public com.google.protobuf.FloatValue getIlluminationDirection() {
            if (illuminationDirectionBuilder_ == null) {
              return illuminationDirection_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : illuminationDirection_;
            } else {
              return illuminationDirectionBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          public Builder setIlluminationDirection(com.google.protobuf.FloatValue value) {
            if (illuminationDirectionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              illuminationDirection_ = value;
              onChanged();
            } else {
              illuminationDirectionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          public Builder setIlluminationDirection(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (illuminationDirectionBuilder_ == null) {
              illuminationDirection_ = builderForValue.build();
              onChanged();
            } else {
              illuminationDirectionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          public Builder mergeIlluminationDirection(com.google.protobuf.FloatValue value) {
            if (illuminationDirectionBuilder_ == null) {
              if (illuminationDirection_ != null) {
                illuminationDirection_ =
                  com.google.protobuf.FloatValue.newBuilder(illuminationDirection_).mergeFrom(value).buildPartial();
              } else {
                illuminationDirection_ = value;
              }
              onChanged();
            } else {
              illuminationDirectionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          public Builder clearIlluminationDirection() {
            if (illuminationDirectionBuilder_ == null) {
              illuminationDirection_ = null;
              onChanged();
            } else {
              illuminationDirection_ = null;
              illuminationDirectionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          public com.google.protobuf.FloatValue.Builder getIlluminationDirectionBuilder() {
            
            onChanged();
            return getIlluminationDirectionFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getIlluminationDirectionOrBuilder() {
            if (illuminationDirectionBuilder_ != null) {
              return illuminationDirectionBuilder_.getMessageOrBuilder();
            } else {
              return illuminationDirection_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : illuminationDirection_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue illumination_direction = 4;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getIlluminationDirectionFieldBuilder() {
            if (illuminationDirectionBuilder_ == null) {
              illuminationDirectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getIlluminationDirection(),
                      getParentForChildren(),
                      isClean());
              illuminationDirection_ = null;
            }
            return illuminationDirectionBuilder_;
          }

          private int illuminationAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
           */
          public int getIlluminationAnchorValue() {
            return illuminationAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
           */
          public Builder setIlluminationAnchorValue(int value) {
            illuminationAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getIlluminationAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(illuminationAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
           */
          public Builder setIlluminationAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            illuminationAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor illumination_anchor = 5;</code>
           */
          public Builder clearIlluminationAnchor() {
            
            illuminationAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasIlluminationAnchor_ ;
          /**
           * <code>bool has_illumination_anchor = 6;</code>
           */
          public boolean getHasIlluminationAnchor() {
            return hasIlluminationAnchor_;
          }
          /**
           * <code>bool has_illumination_anchor = 6;</code>
           */
          public Builder setHasIlluminationAnchor(boolean value) {
            
            hasIlluminationAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_illumination_anchor = 6;</code>
           */
          public Builder clearHasIlluminationAnchor() {
            
            hasIlluminationAnchor_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue exaggeration_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> exaggerationBuilder_;
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          public boolean hasExaggeration() {
            return exaggerationBuilder_ != null || exaggeration_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          public com.google.protobuf.FloatValue getExaggeration() {
            if (exaggerationBuilder_ == null) {
              return exaggeration_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : exaggeration_;
            } else {
              return exaggerationBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          public Builder setExaggeration(com.google.protobuf.FloatValue value) {
            if (exaggerationBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              exaggeration_ = value;
              onChanged();
            } else {
              exaggerationBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          public Builder setExaggeration(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (exaggerationBuilder_ == null) {
              exaggeration_ = builderForValue.build();
              onChanged();
            } else {
              exaggerationBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          public Builder mergeExaggeration(com.google.protobuf.FloatValue value) {
            if (exaggerationBuilder_ == null) {
              if (exaggeration_ != null) {
                exaggeration_ =
                  com.google.protobuf.FloatValue.newBuilder(exaggeration_).mergeFrom(value).buildPartial();
              } else {
                exaggeration_ = value;
              }
              onChanged();
            } else {
              exaggerationBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          public Builder clearExaggeration() {
            if (exaggerationBuilder_ == null) {
              exaggeration_ = null;
              onChanged();
            } else {
              exaggeration_ = null;
              exaggerationBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          public com.google.protobuf.FloatValue.Builder getExaggerationBuilder() {
            
            onChanged();
            return getExaggerationFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getExaggerationOrBuilder() {
            if (exaggerationBuilder_ != null) {
              return exaggerationBuilder_.getMessageOrBuilder();
            } else {
              return exaggeration_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : exaggeration_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue exaggeration = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getExaggerationFieldBuilder() {
            if (exaggerationBuilder_ == null) {
              exaggerationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getExaggeration(),
                      getParentForChildren(),
                      isClean());
              exaggeration_ = null;
            }
            return exaggerationBuilder_;
          }

          private com.google.protobuf.Int32Value shadowColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> shadowColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          public boolean hasShadowColor() {
            return shadowColorBuilder_ != null || shadowColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          public com.google.protobuf.Int32Value getShadowColor() {
            if (shadowColorBuilder_ == null) {
              return shadowColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : shadowColor_;
            } else {
              return shadowColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          public Builder setShadowColor(com.google.protobuf.Int32Value value) {
            if (shadowColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              shadowColor_ = value;
              onChanged();
            } else {
              shadowColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          public Builder setShadowColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (shadowColorBuilder_ == null) {
              shadowColor_ = builderForValue.build();
              onChanged();
            } else {
              shadowColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          public Builder mergeShadowColor(com.google.protobuf.Int32Value value) {
            if (shadowColorBuilder_ == null) {
              if (shadowColor_ != null) {
                shadowColor_ =
                  com.google.protobuf.Int32Value.newBuilder(shadowColor_).mergeFrom(value).buildPartial();
              } else {
                shadowColor_ = value;
              }
              onChanged();
            } else {
              shadowColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          public Builder clearShadowColor() {
            if (shadowColorBuilder_ == null) {
              shadowColor_ = null;
              onChanged();
            } else {
              shadowColor_ = null;
              shadowColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          public com.google.protobuf.Int32Value.Builder getShadowColorBuilder() {
            
            onChanged();
            return getShadowColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getShadowColorOrBuilder() {
            if (shadowColorBuilder_ != null) {
              return shadowColorBuilder_.getMessageOrBuilder();
            } else {
              return shadowColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : shadowColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value shadow_color = 8;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getShadowColorFieldBuilder() {
            if (shadowColorBuilder_ == null) {
              shadowColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getShadowColor(),
                      getParentForChildren(),
                      isClean());
              shadowColor_ = null;
            }
            return shadowColorBuilder_;
          }

          private com.google.protobuf.Int32Value highlightColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> highlightColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          public boolean hasHighlightColor() {
            return highlightColorBuilder_ != null || highlightColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          public com.google.protobuf.Int32Value getHighlightColor() {
            if (highlightColorBuilder_ == null) {
              return highlightColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : highlightColor_;
            } else {
              return highlightColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          public Builder setHighlightColor(com.google.protobuf.Int32Value value) {
            if (highlightColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              highlightColor_ = value;
              onChanged();
            } else {
              highlightColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          public Builder setHighlightColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (highlightColorBuilder_ == null) {
              highlightColor_ = builderForValue.build();
              onChanged();
            } else {
              highlightColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          public Builder mergeHighlightColor(com.google.protobuf.Int32Value value) {
            if (highlightColorBuilder_ == null) {
              if (highlightColor_ != null) {
                highlightColor_ =
                  com.google.protobuf.Int32Value.newBuilder(highlightColor_).mergeFrom(value).buildPartial();
              } else {
                highlightColor_ = value;
              }
              onChanged();
            } else {
              highlightColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          public Builder clearHighlightColor() {
            if (highlightColorBuilder_ == null) {
              highlightColor_ = null;
              onChanged();
            } else {
              highlightColor_ = null;
              highlightColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          public com.google.protobuf.Int32Value.Builder getHighlightColorBuilder() {
            
            onChanged();
            return getHighlightColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getHighlightColorOrBuilder() {
            if (highlightColorBuilder_ != null) {
              return highlightColorBuilder_.getMessageOrBuilder();
            } else {
              return highlightColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : highlightColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value highlight_color = 9;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getHighlightColorFieldBuilder() {
            if (highlightColorBuilder_ == null) {
              highlightColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getHighlightColor(),
                      getParentForChildren(),
                      isClean());
              highlightColor_ = null;
            }
            return highlightColorBuilder_;
          }

          private com.google.protobuf.Int32Value accentColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> accentColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          public boolean hasAccentColor() {
            return accentColorBuilder_ != null || accentColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          public com.google.protobuf.Int32Value getAccentColor() {
            if (accentColorBuilder_ == null) {
              return accentColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : accentColor_;
            } else {
              return accentColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          public Builder setAccentColor(com.google.protobuf.Int32Value value) {
            if (accentColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              accentColor_ = value;
              onChanged();
            } else {
              accentColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          public Builder setAccentColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (accentColorBuilder_ == null) {
              accentColor_ = builderForValue.build();
              onChanged();
            } else {
              accentColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          public Builder mergeAccentColor(com.google.protobuf.Int32Value value) {
            if (accentColorBuilder_ == null) {
              if (accentColor_ != null) {
                accentColor_ =
                  com.google.protobuf.Int32Value.newBuilder(accentColor_).mergeFrom(value).buildPartial();
              } else {
                accentColor_ = value;
              }
              onChanged();
            } else {
              accentColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          public Builder clearAccentColor() {
            if (accentColorBuilder_ == null) {
              accentColor_ = null;
              onChanged();
            } else {
              accentColor_ = null;
              accentColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          public com.google.protobuf.Int32Value.Builder getAccentColorBuilder() {
            
            onChanged();
            return getAccentColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getAccentColorOrBuilder() {
            if (accentColorBuilder_ != null) {
              return accentColorBuilder_.getMessageOrBuilder();
            } else {
              return accentColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : accentColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value accent_color = 10;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getAccentColorFieldBuilder() {
            if (accentColorBuilder_ == null) {
              accentColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getAccentColor(),
                      getParentForChildren(),
                      isClean());
              accentColor_ = null;
            }
            return accentColorBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions exaggerationTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> exaggerationTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          public boolean hasExaggerationTransition() {
            return exaggerationTransitionBuilder_ != null || exaggerationTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getExaggerationTransition() {
            if (exaggerationTransitionBuilder_ == null) {
              return exaggerationTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : exaggerationTransition_;
            } else {
              return exaggerationTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          public Builder setExaggerationTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (exaggerationTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              exaggerationTransition_ = value;
              onChanged();
            } else {
              exaggerationTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          public Builder setExaggerationTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (exaggerationTransitionBuilder_ == null) {
              exaggerationTransition_ = builderForValue.build();
              onChanged();
            } else {
              exaggerationTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          public Builder mergeExaggerationTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (exaggerationTransitionBuilder_ == null) {
              if (exaggerationTransition_ != null) {
                exaggerationTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(exaggerationTransition_).mergeFrom(value).buildPartial();
              } else {
                exaggerationTransition_ = value;
              }
              onChanged();
            } else {
              exaggerationTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          public Builder clearExaggerationTransition() {
            if (exaggerationTransitionBuilder_ == null) {
              exaggerationTransition_ = null;
              onChanged();
            } else {
              exaggerationTransition_ = null;
              exaggerationTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getExaggerationTransitionBuilder() {
            
            onChanged();
            return getExaggerationTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getExaggerationTransitionOrBuilder() {
            if (exaggerationTransitionBuilder_ != null) {
              return exaggerationTransitionBuilder_.getMessageOrBuilder();
            } else {
              return exaggerationTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : exaggerationTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions exaggeration_transition = 11;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getExaggerationTransitionFieldBuilder() {
            if (exaggerationTransitionBuilder_ == null) {
              exaggerationTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getExaggerationTransition(),
                      getParentForChildren(),
                      isClean());
              exaggerationTransition_ = null;
            }
            return exaggerationTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions shadowColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> shadowColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          public boolean hasShadowColorTransition() {
            return shadowColorTransitionBuilder_ != null || shadowColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getShadowColorTransition() {
            if (shadowColorTransitionBuilder_ == null) {
              return shadowColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : shadowColorTransition_;
            } else {
              return shadowColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          public Builder setShadowColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (shadowColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              shadowColorTransition_ = value;
              onChanged();
            } else {
              shadowColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          public Builder setShadowColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (shadowColorTransitionBuilder_ == null) {
              shadowColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              shadowColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          public Builder mergeShadowColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (shadowColorTransitionBuilder_ == null) {
              if (shadowColorTransition_ != null) {
                shadowColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(shadowColorTransition_).mergeFrom(value).buildPartial();
              } else {
                shadowColorTransition_ = value;
              }
              onChanged();
            } else {
              shadowColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          public Builder clearShadowColorTransition() {
            if (shadowColorTransitionBuilder_ == null) {
              shadowColorTransition_ = null;
              onChanged();
            } else {
              shadowColorTransition_ = null;
              shadowColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getShadowColorTransitionBuilder() {
            
            onChanged();
            return getShadowColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getShadowColorTransitionOrBuilder() {
            if (shadowColorTransitionBuilder_ != null) {
              return shadowColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return shadowColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : shadowColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions shadow_color_transition = 12;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getShadowColorTransitionFieldBuilder() {
            if (shadowColorTransitionBuilder_ == null) {
              shadowColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getShadowColorTransition(),
                      getParentForChildren(),
                      isClean());
              shadowColorTransition_ = null;
            }
            return shadowColorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions highlightColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> highlightColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          public boolean hasHighlightColorTransition() {
            return highlightColorTransitionBuilder_ != null || highlightColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getHighlightColorTransition() {
            if (highlightColorTransitionBuilder_ == null) {
              return highlightColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : highlightColorTransition_;
            } else {
              return highlightColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          public Builder setHighlightColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (highlightColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              highlightColorTransition_ = value;
              onChanged();
            } else {
              highlightColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          public Builder setHighlightColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (highlightColorTransitionBuilder_ == null) {
              highlightColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              highlightColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          public Builder mergeHighlightColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (highlightColorTransitionBuilder_ == null) {
              if (highlightColorTransition_ != null) {
                highlightColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(highlightColorTransition_).mergeFrom(value).buildPartial();
              } else {
                highlightColorTransition_ = value;
              }
              onChanged();
            } else {
              highlightColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          public Builder clearHighlightColorTransition() {
            if (highlightColorTransitionBuilder_ == null) {
              highlightColorTransition_ = null;
              onChanged();
            } else {
              highlightColorTransition_ = null;
              highlightColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getHighlightColorTransitionBuilder() {
            
            onChanged();
            return getHighlightColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getHighlightColorTransitionOrBuilder() {
            if (highlightColorTransitionBuilder_ != null) {
              return highlightColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return highlightColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : highlightColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions highlight_color_transition = 13;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getHighlightColorTransitionFieldBuilder() {
            if (highlightColorTransitionBuilder_ == null) {
              highlightColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getHighlightColorTransition(),
                      getParentForChildren(),
                      isClean());
              highlightColorTransition_ = null;
            }
            return highlightColorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions accentColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> accentColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          public boolean hasAccentColorTransition() {
            return accentColorTransitionBuilder_ != null || accentColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getAccentColorTransition() {
            if (accentColorTransitionBuilder_ == null) {
              return accentColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : accentColorTransition_;
            } else {
              return accentColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          public Builder setAccentColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (accentColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              accentColorTransition_ = value;
              onChanged();
            } else {
              accentColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          public Builder setAccentColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (accentColorTransitionBuilder_ == null) {
              accentColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              accentColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          public Builder mergeAccentColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (accentColorTransitionBuilder_ == null) {
              if (accentColorTransition_ != null) {
                accentColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(accentColorTransition_).mergeFrom(value).buildPartial();
              } else {
                accentColorTransition_ = value;
              }
              onChanged();
            } else {
              accentColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          public Builder clearAccentColorTransition() {
            if (accentColorTransitionBuilder_ == null) {
              accentColorTransition_ = null;
              onChanged();
            } else {
              accentColorTransition_ = null;
              accentColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getAccentColorTransitionBuilder() {
            
            onChanged();
            return getAccentColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getAccentColorTransitionOrBuilder() {
            if (accentColorTransitionBuilder_ != null) {
              return accentColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return accentColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : accentColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions accent_color_transition = 14;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getAccentColorTransitionFieldBuilder() {
            if (accentColorTransitionBuilder_ == null) {
              accentColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getAccentColorTransition(),
                      getParentForChildren(),
                      isClean());
              accentColorTransition_ = null;
            }
            return accentColorTransitionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update.Hillshade)
        }

        // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update.Hillshade)
        private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade();
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Hillshade>
            PARSER = new com.google.protobuf.AbstractParser<Hillshade>() {
          @java.lang.Override
          public Hillshade parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Hillshade(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Hillshade> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Hillshade> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface LineOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update.Line)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        boolean hasVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValue getVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        boolean hasMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValue getMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        boolean hasMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValue getMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
         */
        int getCapValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap getCap();

        /**
         * <code>bool has_cap = 5;</code>
         */
        boolean getHasCap();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
         */
        int getJoinValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join getJoin();

        /**
         * <code>bool has_join = 7;</code>
         */
        boolean getHasJoin();

        /**
         * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
         */
        boolean hasMiterLimit();
        /**
         * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
         */
        com.google.protobuf.FloatValue getMiterLimit();
        /**
         * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMiterLimitOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue round_limit = 9;</code>
         */
        boolean hasRoundLimit();
        /**
         * <code>.google.protobuf.FloatValue round_limit = 9;</code>
         */
        com.google.protobuf.FloatValue getRoundLimit();
        /**
         * <code>.google.protobuf.FloatValue round_limit = 9;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getRoundLimitOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue opacity = 10;</code>
         */
        boolean hasOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 10;</code>
         */
        com.google.protobuf.FloatValue getOpacity();
        /**
         * <code>.google.protobuf.FloatValue opacity = 10;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value color = 11;</code>
         */
        boolean hasColor();
        /**
         * <code>.google.protobuf.Int32Value color = 11;</code>
         */
        com.google.protobuf.Int32Value getColor();
        /**
         * <code>.google.protobuf.Int32Value color = 11;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder();

        /**
         * <code>repeated float translate = 12;</code>
         */
        java.util.List<java.lang.Float> getTranslateList();
        /**
         * <code>repeated float translate = 12;</code>
         */
        int getTranslateCount();
        /**
         * <code>repeated float translate = 12;</code>
         */
        float getTranslate(int index);

        /**
         * <code>bool has_translate = 13;</code>
         */
        boolean getHasTranslate();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
         */
        int getTranslateAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor();

        /**
         * <code>bool has_translate_anchor = 15;</code>
         */
        boolean getHasTranslateAnchor();

        /**
         * <code>.google.protobuf.FloatValue width = 16;</code>
         */
        boolean hasWidth();
        /**
         * <code>.google.protobuf.FloatValue width = 16;</code>
         */
        com.google.protobuf.FloatValue getWidth();
        /**
         * <code>.google.protobuf.FloatValue width = 16;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getWidthOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue gap_width = 17;</code>
         */
        boolean hasGapWidth();
        /**
         * <code>.google.protobuf.FloatValue gap_width = 17;</code>
         */
        com.google.protobuf.FloatValue getGapWidth();
        /**
         * <code>.google.protobuf.FloatValue gap_width = 17;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getGapWidthOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue offset = 18;</code>
         */
        boolean hasOffset();
        /**
         * <code>.google.protobuf.FloatValue offset = 18;</code>
         */
        com.google.protobuf.FloatValue getOffset();
        /**
         * <code>.google.protobuf.FloatValue offset = 18;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getOffsetOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue blur = 19;</code>
         */
        boolean hasBlur();
        /**
         * <code>.google.protobuf.FloatValue blur = 19;</code>
         */
        com.google.protobuf.FloatValue getBlur();
        /**
         * <code>.google.protobuf.FloatValue blur = 19;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getBlurOrBuilder();

        /**
         * <code>repeated float dasharray = 20;</code>
         */
        java.util.List<java.lang.Float> getDasharrayList();
        /**
         * <code>repeated float dasharray = 20;</code>
         */
        int getDasharrayCount();
        /**
         * <code>repeated float dasharray = 20;</code>
         */
        float getDasharray(int index);

        /**
         * <code>bool has_dasharray = 21;</code>
         */
        boolean getHasDasharray();

        /**
         * <code>.google.protobuf.StringValue pattern = 22;</code>
         */
        boolean hasPattern();
        /**
         * <code>.google.protobuf.StringValue pattern = 22;</code>
         */
        com.google.protobuf.StringValue getPattern();
        /**
         * <code>.google.protobuf.StringValue pattern = 22;</code>
         */
        com.google.protobuf.StringValueOrBuilder getPatternOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value gradient = 23;</code>
         */
        boolean hasGradient();
        /**
         * <code>.google.protobuf.Int32Value gradient = 23;</code>
         */
        com.google.protobuf.Int32Value getGradient();
        /**
         * <code>.google.protobuf.Int32Value gradient = 23;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getGradientOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
         */
        boolean hasOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
         */
        boolean hasColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
         */
        boolean hasTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
         */
        boolean hasWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getWidthTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
         */
        boolean hasGapWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getGapWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getGapWidthTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
         */
        boolean hasOffsetTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOffsetTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOffsetTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
         */
        boolean hasBlurTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBlurTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBlurTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
         */
        boolean hasDasharrayTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getDasharrayTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getDasharrayTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
         */
        boolean hasPatternTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder();
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Line}
       */
      public  static final class Line extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update.Line)
          LineOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Line.newBuilder() to construct.
        private Line(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Line() {
          cap_ = 0;
          join_ = 0;
          translate_ = emptyFloatList();
          translateAnchor_ = 0;
          dasharray_ = emptyFloatList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Line(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (visible_ != null) {
                    subBuilder = visible_.toBuilder();
                  }
                  visible_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visible_);
                    visible_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (minZoom_ != null) {
                    subBuilder = minZoom_.toBuilder();
                  }
                  minZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minZoom_);
                    minZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (maxZoom_ != null) {
                    subBuilder = maxZoom_.toBuilder();
                  }
                  maxZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxZoom_);
                    maxZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  cap_ = rawValue;
                  break;
                }
                case 40: {

                  hasCap_ = input.readBool();
                  break;
                }
                case 48: {
                  int rawValue = input.readEnum();

                  join_ = rawValue;
                  break;
                }
                case 56: {

                  hasJoin_ = input.readBool();
                  break;
                }
                case 66: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (miterLimit_ != null) {
                    subBuilder = miterLimit_.toBuilder();
                  }
                  miterLimit_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(miterLimit_);
                    miterLimit_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 74: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (roundLimit_ != null) {
                    subBuilder = roundLimit_.toBuilder();
                  }
                  roundLimit_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(roundLimit_);
                    roundLimit_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 82: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (opacity_ != null) {
                    subBuilder = opacity_.toBuilder();
                  }
                  opacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacity_);
                    opacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (color_ != null) {
                    subBuilder = color_.toBuilder();
                  }
                  color_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(color_);
                    color_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 101: {
                  if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                    translate_ = newFloatList();
                    mutable_bitField0_ |= 0x00000800;
                  }
                  translate_.addFloat(input.readFloat());
                  break;
                }
                case 98: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00000800) != 0) && input.getBytesUntilLimit() > 0) {
                    translate_ = newFloatList();
                    mutable_bitField0_ |= 0x00000800;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    translate_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 104: {

                  hasTranslate_ = input.readBool();
                  break;
                }
                case 112: {
                  int rawValue = input.readEnum();

                  translateAnchor_ = rawValue;
                  break;
                }
                case 120: {

                  hasTranslateAnchor_ = input.readBool();
                  break;
                }
                case 130: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (width_ != null) {
                    subBuilder = width_.toBuilder();
                  }
                  width_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(width_);
                    width_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 138: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (gapWidth_ != null) {
                    subBuilder = gapWidth_.toBuilder();
                  }
                  gapWidth_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gapWidth_);
                    gapWidth_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 146: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (offset_ != null) {
                    subBuilder = offset_.toBuilder();
                  }
                  offset_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(offset_);
                    offset_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 154: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (blur_ != null) {
                    subBuilder = blur_.toBuilder();
                  }
                  blur_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(blur_);
                    blur_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 165: {
                  if (!((mutable_bitField0_ & 0x00080000) != 0)) {
                    dasharray_ = newFloatList();
                    mutable_bitField0_ |= 0x00080000;
                  }
                  dasharray_.addFloat(input.readFloat());
                  break;
                }
                case 162: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00080000) != 0) && input.getBytesUntilLimit() > 0) {
                    dasharray_ = newFloatList();
                    mutable_bitField0_ |= 0x00080000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    dasharray_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 168: {

                  hasDasharray_ = input.readBool();
                  break;
                }
                case 178: {
                  com.google.protobuf.StringValue.Builder subBuilder = null;
                  if (pattern_ != null) {
                    subBuilder = pattern_.toBuilder();
                  }
                  pattern_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(pattern_);
                    pattern_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 186: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (gradient_ != null) {
                    subBuilder = gradient_.toBuilder();
                  }
                  gradient_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gradient_);
                    gradient_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 194: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (opacityTransition_ != null) {
                    subBuilder = opacityTransition_.toBuilder();
                  }
                  opacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(opacityTransition_);
                    opacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 202: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (colorTransition_ != null) {
                    subBuilder = colorTransition_.toBuilder();
                  }
                  colorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(colorTransition_);
                    colorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 210: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (translateTransition_ != null) {
                    subBuilder = translateTransition_.toBuilder();
                  }
                  translateTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(translateTransition_);
                    translateTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 218: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (widthTransition_ != null) {
                    subBuilder = widthTransition_.toBuilder();
                  }
                  widthTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(widthTransition_);
                    widthTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 226: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (gapWidthTransition_ != null) {
                    subBuilder = gapWidthTransition_.toBuilder();
                  }
                  gapWidthTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(gapWidthTransition_);
                    gapWidthTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 234: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (offsetTransition_ != null) {
                    subBuilder = offsetTransition_.toBuilder();
                  }
                  offsetTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(offsetTransition_);
                    offsetTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 242: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (blurTransition_ != null) {
                    subBuilder = blurTransition_.toBuilder();
                  }
                  blurTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(blurTransition_);
                    blurTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 250: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (dasharrayTransition_ != null) {
                    subBuilder = dasharrayTransition_.toBuilder();
                  }
                  dasharrayTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(dasharrayTransition_);
                    dasharrayTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 258: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (patternTransition_ != null) {
                    subBuilder = patternTransition_.toBuilder();
                  }
                  patternTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(patternTransition_);
                    patternTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000800) != 0)) {
              translate_.makeImmutable(); // C
            }
            if (((mutable_bitField0_ & 0x00080000) != 0)) {
              dasharray_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.Builder.class);
        }

        private int bitField0_;
        public static final int VISIBLE_FIELD_NUMBER = 1;
        private com.google.protobuf.BoolValue visible_;
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public boolean hasVisible() {
          return visible_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValue getVisible() {
          return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
          return getVisible();
        }

        public static final int MIN_ZOOM_FIELD_NUMBER = 2;
        private com.google.protobuf.FloatValue minZoom_;
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public boolean hasMinZoom() {
          return minZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValue getMinZoom() {
          return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
          return getMinZoom();
        }

        public static final int MAX_ZOOM_FIELD_NUMBER = 3;
        private com.google.protobuf.FloatValue maxZoom_;
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public boolean hasMaxZoom() {
          return maxZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValue getMaxZoom() {
          return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
          return getMaxZoom();
        }

        public static final int CAP_FIELD_NUMBER = 4;
        private int cap_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
         */
        public int getCapValue() {
          return cap_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap getCap() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap result = com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap.valueOf(cap_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap.UNRECOGNIZED : result;
        }

        public static final int HAS_CAP_FIELD_NUMBER = 5;
        private boolean hasCap_;
        /**
         * <code>bool has_cap = 5;</code>
         */
        public boolean getHasCap() {
          return hasCap_;
        }

        public static final int JOIN_FIELD_NUMBER = 6;
        private int join_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
         */
        public int getJoinValue() {
          return join_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join getJoin() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join result = com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join.valueOf(join_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join.UNRECOGNIZED : result;
        }

        public static final int HAS_JOIN_FIELD_NUMBER = 7;
        private boolean hasJoin_;
        /**
         * <code>bool has_join = 7;</code>
         */
        public boolean getHasJoin() {
          return hasJoin_;
        }

        public static final int MITER_LIMIT_FIELD_NUMBER = 8;
        private com.google.protobuf.FloatValue miterLimit_;
        /**
         * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
         */
        public boolean hasMiterLimit() {
          return miterLimit_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
         */
        public com.google.protobuf.FloatValue getMiterLimit() {
          return miterLimit_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : miterLimit_;
        }
        /**
         * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMiterLimitOrBuilder() {
          return getMiterLimit();
        }

        public static final int ROUND_LIMIT_FIELD_NUMBER = 9;
        private com.google.protobuf.FloatValue roundLimit_;
        /**
         * <code>.google.protobuf.FloatValue round_limit = 9;</code>
         */
        public boolean hasRoundLimit() {
          return roundLimit_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue round_limit = 9;</code>
         */
        public com.google.protobuf.FloatValue getRoundLimit() {
          return roundLimit_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : roundLimit_;
        }
        /**
         * <code>.google.protobuf.FloatValue round_limit = 9;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getRoundLimitOrBuilder() {
          return getRoundLimit();
        }

        public static final int OPACITY_FIELD_NUMBER = 10;
        private com.google.protobuf.FloatValue opacity_;
        /**
         * <code>.google.protobuf.FloatValue opacity = 10;</code>
         */
        public boolean hasOpacity() {
          return opacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 10;</code>
         */
        public com.google.protobuf.FloatValue getOpacity() {
          return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue opacity = 10;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
          return getOpacity();
        }

        public static final int COLOR_FIELD_NUMBER = 11;
        private com.google.protobuf.Int32Value color_;
        /**
         * <code>.google.protobuf.Int32Value color = 11;</code>
         */
        public boolean hasColor() {
          return color_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 11;</code>
         */
        public com.google.protobuf.Int32Value getColor() {
          return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
        }
        /**
         * <code>.google.protobuf.Int32Value color = 11;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
          return getColor();
        }

        public static final int TRANSLATE_FIELD_NUMBER = 12;
        private com.google.protobuf.Internal.FloatList translate_;
        /**
         * <code>repeated float translate = 12;</code>
         */
        public java.util.List<java.lang.Float>
            getTranslateList() {
          return translate_;
        }
        /**
         * <code>repeated float translate = 12;</code>
         */
        public int getTranslateCount() {
          return translate_.size();
        }
        /**
         * <code>repeated float translate = 12;</code>
         */
        public float getTranslate(int index) {
          return translate_.getFloat(index);
        }
        private int translateMemoizedSerializedSize = -1;

        public static final int HAS_TRANSLATE_FIELD_NUMBER = 13;
        private boolean hasTranslate_;
        /**
         * <code>bool has_translate = 13;</code>
         */
        public boolean getHasTranslate() {
          return hasTranslate_;
        }

        public static final int TRANSLATE_ANCHOR_FIELD_NUMBER = 14;
        private int translateAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
         */
        public int getTranslateAnchorValue() {
          return translateAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(translateAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_TRANSLATE_ANCHOR_FIELD_NUMBER = 15;
        private boolean hasTranslateAnchor_;
        /**
         * <code>bool has_translate_anchor = 15;</code>
         */
        public boolean getHasTranslateAnchor() {
          return hasTranslateAnchor_;
        }

        public static final int WIDTH_FIELD_NUMBER = 16;
        private com.google.protobuf.FloatValue width_;
        /**
         * <code>.google.protobuf.FloatValue width = 16;</code>
         */
        public boolean hasWidth() {
          return width_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue width = 16;</code>
         */
        public com.google.protobuf.FloatValue getWidth() {
          return width_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : width_;
        }
        /**
         * <code>.google.protobuf.FloatValue width = 16;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getWidthOrBuilder() {
          return getWidth();
        }

        public static final int GAP_WIDTH_FIELD_NUMBER = 17;
        private com.google.protobuf.FloatValue gapWidth_;
        /**
         * <code>.google.protobuf.FloatValue gap_width = 17;</code>
         */
        public boolean hasGapWidth() {
          return gapWidth_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue gap_width = 17;</code>
         */
        public com.google.protobuf.FloatValue getGapWidth() {
          return gapWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : gapWidth_;
        }
        /**
         * <code>.google.protobuf.FloatValue gap_width = 17;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getGapWidthOrBuilder() {
          return getGapWidth();
        }

        public static final int OFFSET_FIELD_NUMBER = 18;
        private com.google.protobuf.FloatValue offset_;
        /**
         * <code>.google.protobuf.FloatValue offset = 18;</code>
         */
        public boolean hasOffset() {
          return offset_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue offset = 18;</code>
         */
        public com.google.protobuf.FloatValue getOffset() {
          return offset_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : offset_;
        }
        /**
         * <code>.google.protobuf.FloatValue offset = 18;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getOffsetOrBuilder() {
          return getOffset();
        }

        public static final int BLUR_FIELD_NUMBER = 19;
        private com.google.protobuf.FloatValue blur_;
        /**
         * <code>.google.protobuf.FloatValue blur = 19;</code>
         */
        public boolean hasBlur() {
          return blur_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue blur = 19;</code>
         */
        public com.google.protobuf.FloatValue getBlur() {
          return blur_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : blur_;
        }
        /**
         * <code>.google.protobuf.FloatValue blur = 19;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getBlurOrBuilder() {
          return getBlur();
        }

        public static final int DASHARRAY_FIELD_NUMBER = 20;
        private com.google.protobuf.Internal.FloatList dasharray_;
        /**
         * <code>repeated float dasharray = 20;</code>
         */
        public java.util.List<java.lang.Float>
            getDasharrayList() {
          return dasharray_;
        }
        /**
         * <code>repeated float dasharray = 20;</code>
         */
        public int getDasharrayCount() {
          return dasharray_.size();
        }
        /**
         * <code>repeated float dasharray = 20;</code>
         */
        public float getDasharray(int index) {
          return dasharray_.getFloat(index);
        }
        private int dasharrayMemoizedSerializedSize = -1;

        public static final int HAS_DASHARRAY_FIELD_NUMBER = 21;
        private boolean hasDasharray_;
        /**
         * <code>bool has_dasharray = 21;</code>
         */
        public boolean getHasDasharray() {
          return hasDasharray_;
        }

        public static final int PATTERN_FIELD_NUMBER = 22;
        private com.google.protobuf.StringValue pattern_;
        /**
         * <code>.google.protobuf.StringValue pattern = 22;</code>
         */
        public boolean hasPattern() {
          return pattern_ != null;
        }
        /**
         * <code>.google.protobuf.StringValue pattern = 22;</code>
         */
        public com.google.protobuf.StringValue getPattern() {
          return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
        }
        /**
         * <code>.google.protobuf.StringValue pattern = 22;</code>
         */
        public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
          return getPattern();
        }

        public static final int GRADIENT_FIELD_NUMBER = 23;
        private com.google.protobuf.Int32Value gradient_;
        /**
         * <code>.google.protobuf.Int32Value gradient = 23;</code>
         */
        public boolean hasGradient() {
          return gradient_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value gradient = 23;</code>
         */
        public com.google.protobuf.Int32Value getGradient() {
          return gradient_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : gradient_;
        }
        /**
         * <code>.google.protobuf.Int32Value gradient = 23;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getGradientOrBuilder() {
          return getGradient();
        }

        public static final int OPACITY_TRANSITION_FIELD_NUMBER = 24;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
         */
        public boolean hasOpacityTransition() {
          return opacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
          return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
          return getOpacityTransition();
        }

        public static final int COLOR_TRANSITION_FIELD_NUMBER = 25;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
         */
        public boolean hasColorTransition() {
          return colorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
          return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
          return getColorTransition();
        }

        public static final int TRANSLATE_TRANSITION_FIELD_NUMBER = 26;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions translateTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
         */
        public boolean hasTranslateTransition() {
          return translateTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition() {
          return translateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder() {
          return getTranslateTransition();
        }

        public static final int WIDTH_TRANSITION_FIELD_NUMBER = 27;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions widthTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
         */
        public boolean hasWidthTransition() {
          return widthTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getWidthTransition() {
          return widthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : widthTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getWidthTransitionOrBuilder() {
          return getWidthTransition();
        }

        public static final int GAP_WIDTH_TRANSITION_FIELD_NUMBER = 28;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions gapWidthTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
         */
        public boolean hasGapWidthTransition() {
          return gapWidthTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getGapWidthTransition() {
          return gapWidthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : gapWidthTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getGapWidthTransitionOrBuilder() {
          return getGapWidthTransition();
        }

        public static final int OFFSET_TRANSITION_FIELD_NUMBER = 29;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions offsetTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
         */
        public boolean hasOffsetTransition() {
          return offsetTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOffsetTransition() {
          return offsetTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : offsetTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOffsetTransitionOrBuilder() {
          return getOffsetTransition();
        }

        public static final int BLUR_TRANSITION_FIELD_NUMBER = 30;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions blurTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
         */
        public boolean hasBlurTransition() {
          return blurTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBlurTransition() {
          return blurTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : blurTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBlurTransitionOrBuilder() {
          return getBlurTransition();
        }

        public static final int DASHARRAY_TRANSITION_FIELD_NUMBER = 31;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions dasharrayTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
         */
        public boolean hasDasharrayTransition() {
          return dasharrayTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getDasharrayTransition() {
          return dasharrayTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : dasharrayTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getDasharrayTransitionOrBuilder() {
          return getDasharrayTransition();
        }

        public static final int PATTERN_TRANSITION_FIELD_NUMBER = 32;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions patternTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
         */
        public boolean hasPatternTransition() {
          return patternTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition() {
          return patternTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder() {
          return getPatternTransition();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (visible_ != null) {
            output.writeMessage(1, getVisible());
          }
          if (minZoom_ != null) {
            output.writeMessage(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            output.writeMessage(3, getMaxZoom());
          }
          if (cap_ != com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap.CAP_BUTT.getNumber()) {
            output.writeEnum(4, cap_);
          }
          if (hasCap_ != false) {
            output.writeBool(5, hasCap_);
          }
          if (join_ != com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join.JOIN_MITER.getNumber()) {
            output.writeEnum(6, join_);
          }
          if (hasJoin_ != false) {
            output.writeBool(7, hasJoin_);
          }
          if (miterLimit_ != null) {
            output.writeMessage(8, getMiterLimit());
          }
          if (roundLimit_ != null) {
            output.writeMessage(9, getRoundLimit());
          }
          if (opacity_ != null) {
            output.writeMessage(10, getOpacity());
          }
          if (color_ != null) {
            output.writeMessage(11, getColor());
          }
          if (getTranslateList().size() > 0) {
            output.writeUInt32NoTag(98);
            output.writeUInt32NoTag(translateMemoizedSerializedSize);
          }
          for (int i = 0; i < translate_.size(); i++) {
            output.writeFloatNoTag(translate_.getFloat(i));
          }
          if (hasTranslate_ != false) {
            output.writeBool(13, hasTranslate_);
          }
          if (translateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(14, translateAnchor_);
          }
          if (hasTranslateAnchor_ != false) {
            output.writeBool(15, hasTranslateAnchor_);
          }
          if (width_ != null) {
            output.writeMessage(16, getWidth());
          }
          if (gapWidth_ != null) {
            output.writeMessage(17, getGapWidth());
          }
          if (offset_ != null) {
            output.writeMessage(18, getOffset());
          }
          if (blur_ != null) {
            output.writeMessage(19, getBlur());
          }
          if (getDasharrayList().size() > 0) {
            output.writeUInt32NoTag(162);
            output.writeUInt32NoTag(dasharrayMemoizedSerializedSize);
          }
          for (int i = 0; i < dasharray_.size(); i++) {
            output.writeFloatNoTag(dasharray_.getFloat(i));
          }
          if (hasDasharray_ != false) {
            output.writeBool(21, hasDasharray_);
          }
          if (pattern_ != null) {
            output.writeMessage(22, getPattern());
          }
          if (gradient_ != null) {
            output.writeMessage(23, getGradient());
          }
          if (opacityTransition_ != null) {
            output.writeMessage(24, getOpacityTransition());
          }
          if (colorTransition_ != null) {
            output.writeMessage(25, getColorTransition());
          }
          if (translateTransition_ != null) {
            output.writeMessage(26, getTranslateTransition());
          }
          if (widthTransition_ != null) {
            output.writeMessage(27, getWidthTransition());
          }
          if (gapWidthTransition_ != null) {
            output.writeMessage(28, getGapWidthTransition());
          }
          if (offsetTransition_ != null) {
            output.writeMessage(29, getOffsetTransition());
          }
          if (blurTransition_ != null) {
            output.writeMessage(30, getBlurTransition());
          }
          if (dasharrayTransition_ != null) {
            output.writeMessage(31, getDasharrayTransition());
          }
          if (patternTransition_ != null) {
            output.writeMessage(32, getPatternTransition());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (visible_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getVisible());
          }
          if (minZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getMaxZoom());
          }
          if (cap_ != com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap.CAP_BUTT.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(4, cap_);
          }
          if (hasCap_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(5, hasCap_);
          }
          if (join_ != com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join.JOIN_MITER.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(6, join_);
          }
          if (hasJoin_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(7, hasJoin_);
          }
          if (miterLimit_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(8, getMiterLimit());
          }
          if (roundLimit_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, getRoundLimit());
          }
          if (opacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, getOpacity());
          }
          if (color_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(11, getColor());
          }
          {
            int dataSize = 0;
            dataSize = 4 * getTranslateList().size();
            size += dataSize;
            if (!getTranslateList().isEmpty()) {
              size += 1;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            translateMemoizedSerializedSize = dataSize;
          }
          if (hasTranslate_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(13, hasTranslate_);
          }
          if (translateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(14, translateAnchor_);
          }
          if (hasTranslateAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(15, hasTranslateAnchor_);
          }
          if (width_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(16, getWidth());
          }
          if (gapWidth_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(17, getGapWidth());
          }
          if (offset_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(18, getOffset());
          }
          if (blur_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(19, getBlur());
          }
          {
            int dataSize = 0;
            dataSize = 4 * getDasharrayList().size();
            size += dataSize;
            if (!getDasharrayList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            dasharrayMemoizedSerializedSize = dataSize;
          }
          if (hasDasharray_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(21, hasDasharray_);
          }
          if (pattern_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(22, getPattern());
          }
          if (gradient_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(23, getGradient());
          }
          if (opacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(24, getOpacityTransition());
          }
          if (colorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(25, getColorTransition());
          }
          if (translateTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(26, getTranslateTransition());
          }
          if (widthTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(27, getWidthTransition());
          }
          if (gapWidthTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(28, getGapWidthTransition());
          }
          if (offsetTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(29, getOffsetTransition());
          }
          if (blurTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(30, getBlurTransition());
          }
          if (dasharrayTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(31, getDasharrayTransition());
          }
          if (patternTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(32, getPatternTransition());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line)) {
            return super.equals(obj);
          }
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) obj;

          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (!getVisible()
                .equals(other.getVisible())) return false;
          }
          if (hasMinZoom() != other.hasMinZoom()) return false;
          if (hasMinZoom()) {
            if (!getMinZoom()
                .equals(other.getMinZoom())) return false;
          }
          if (hasMaxZoom() != other.hasMaxZoom()) return false;
          if (hasMaxZoom()) {
            if (!getMaxZoom()
                .equals(other.getMaxZoom())) return false;
          }
          if (cap_ != other.cap_) return false;
          if (getHasCap()
              != other.getHasCap()) return false;
          if (join_ != other.join_) return false;
          if (getHasJoin()
              != other.getHasJoin()) return false;
          if (hasMiterLimit() != other.hasMiterLimit()) return false;
          if (hasMiterLimit()) {
            if (!getMiterLimit()
                .equals(other.getMiterLimit())) return false;
          }
          if (hasRoundLimit() != other.hasRoundLimit()) return false;
          if (hasRoundLimit()) {
            if (!getRoundLimit()
                .equals(other.getRoundLimit())) return false;
          }
          if (hasOpacity() != other.hasOpacity()) return false;
          if (hasOpacity()) {
            if (!getOpacity()
                .equals(other.getOpacity())) return false;
          }
          if (hasColor() != other.hasColor()) return false;
          if (hasColor()) {
            if (!getColor()
                .equals(other.getColor())) return false;
          }
          if (!getTranslateList()
              .equals(other.getTranslateList())) return false;
          if (getHasTranslate()
              != other.getHasTranslate()) return false;
          if (translateAnchor_ != other.translateAnchor_) return false;
          if (getHasTranslateAnchor()
              != other.getHasTranslateAnchor()) return false;
          if (hasWidth() != other.hasWidth()) return false;
          if (hasWidth()) {
            if (!getWidth()
                .equals(other.getWidth())) return false;
          }
          if (hasGapWidth() != other.hasGapWidth()) return false;
          if (hasGapWidth()) {
            if (!getGapWidth()
                .equals(other.getGapWidth())) return false;
          }
          if (hasOffset() != other.hasOffset()) return false;
          if (hasOffset()) {
            if (!getOffset()
                .equals(other.getOffset())) return false;
          }
          if (hasBlur() != other.hasBlur()) return false;
          if (hasBlur()) {
            if (!getBlur()
                .equals(other.getBlur())) return false;
          }
          if (!getDasharrayList()
              .equals(other.getDasharrayList())) return false;
          if (getHasDasharray()
              != other.getHasDasharray()) return false;
          if (hasPattern() != other.hasPattern()) return false;
          if (hasPattern()) {
            if (!getPattern()
                .equals(other.getPattern())) return false;
          }
          if (hasGradient() != other.hasGradient()) return false;
          if (hasGradient()) {
            if (!getGradient()
                .equals(other.getGradient())) return false;
          }
          if (hasOpacityTransition() != other.hasOpacityTransition()) return false;
          if (hasOpacityTransition()) {
            if (!getOpacityTransition()
                .equals(other.getOpacityTransition())) return false;
          }
          if (hasColorTransition() != other.hasColorTransition()) return false;
          if (hasColorTransition()) {
            if (!getColorTransition()
                .equals(other.getColorTransition())) return false;
          }
          if (hasTranslateTransition() != other.hasTranslateTransition()) return false;
          if (hasTranslateTransition()) {
            if (!getTranslateTransition()
                .equals(other.getTranslateTransition())) return false;
          }
          if (hasWidthTransition() != other.hasWidthTransition()) return false;
          if (hasWidthTransition()) {
            if (!getWidthTransition()
                .equals(other.getWidthTransition())) return false;
          }
          if (hasGapWidthTransition() != other.hasGapWidthTransition()) return false;
          if (hasGapWidthTransition()) {
            if (!getGapWidthTransition()
                .equals(other.getGapWidthTransition())) return false;
          }
          if (hasOffsetTransition() != other.hasOffsetTransition()) return false;
          if (hasOffsetTransition()) {
            if (!getOffsetTransition()
                .equals(other.getOffsetTransition())) return false;
          }
          if (hasBlurTransition() != other.hasBlurTransition()) return false;
          if (hasBlurTransition()) {
            if (!getBlurTransition()
                .equals(other.getBlurTransition())) return false;
          }
          if (hasDasharrayTransition() != other.hasDasharrayTransition()) return false;
          if (hasDasharrayTransition()) {
            if (!getDasharrayTransition()
                .equals(other.getDasharrayTransition())) return false;
          }
          if (hasPatternTransition() != other.hasPatternTransition()) return false;
          if (hasPatternTransition()) {
            if (!getPatternTransition()
                .equals(other.getPatternTransition())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + getVisible().hashCode();
          }
          if (hasMinZoom()) {
            hash = (37 * hash) + MIN_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMinZoom().hashCode();
          }
          if (hasMaxZoom()) {
            hash = (37 * hash) + MAX_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMaxZoom().hashCode();
          }
          hash = (37 * hash) + CAP_FIELD_NUMBER;
          hash = (53 * hash) + cap_;
          hash = (37 * hash) + HAS_CAP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasCap());
          hash = (37 * hash) + JOIN_FIELD_NUMBER;
          hash = (53 * hash) + join_;
          hash = (37 * hash) + HAS_JOIN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasJoin());
          if (hasMiterLimit()) {
            hash = (37 * hash) + MITER_LIMIT_FIELD_NUMBER;
            hash = (53 * hash) + getMiterLimit().hashCode();
          }
          if (hasRoundLimit()) {
            hash = (37 * hash) + ROUND_LIMIT_FIELD_NUMBER;
            hash = (53 * hash) + getRoundLimit().hashCode();
          }
          if (hasOpacity()) {
            hash = (37 * hash) + OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getOpacity().hashCode();
          }
          if (hasColor()) {
            hash = (37 * hash) + COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getColor().hashCode();
          }
          if (getTranslateCount() > 0) {
            hash = (37 * hash) + TRANSLATE_FIELD_NUMBER;
            hash = (53 * hash) + getTranslateList().hashCode();
          }
          hash = (37 * hash) + HAS_TRANSLATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTranslate());
          hash = (37 * hash) + TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + translateAnchor_;
          hash = (37 * hash) + HAS_TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTranslateAnchor());
          if (hasWidth()) {
            hash = (37 * hash) + WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getWidth().hashCode();
          }
          if (hasGapWidth()) {
            hash = (37 * hash) + GAP_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getGapWidth().hashCode();
          }
          if (hasOffset()) {
            hash = (37 * hash) + OFFSET_FIELD_NUMBER;
            hash = (53 * hash) + getOffset().hashCode();
          }
          if (hasBlur()) {
            hash = (37 * hash) + BLUR_FIELD_NUMBER;
            hash = (53 * hash) + getBlur().hashCode();
          }
          if (getDasharrayCount() > 0) {
            hash = (37 * hash) + DASHARRAY_FIELD_NUMBER;
            hash = (53 * hash) + getDasharrayList().hashCode();
          }
          hash = (37 * hash) + HAS_DASHARRAY_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasDasharray());
          if (hasPattern()) {
            hash = (37 * hash) + PATTERN_FIELD_NUMBER;
            hash = (53 * hash) + getPattern().hashCode();
          }
          if (hasGradient()) {
            hash = (37 * hash) + GRADIENT_FIELD_NUMBER;
            hash = (53 * hash) + getGradient().hashCode();
          }
          if (hasOpacityTransition()) {
            hash = (37 * hash) + OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getOpacityTransition().hashCode();
          }
          if (hasColorTransition()) {
            hash = (37 * hash) + COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getColorTransition().hashCode();
          }
          if (hasTranslateTransition()) {
            hash = (37 * hash) + TRANSLATE_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTranslateTransition().hashCode();
          }
          if (hasWidthTransition()) {
            hash = (37 * hash) + WIDTH_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getWidthTransition().hashCode();
          }
          if (hasGapWidthTransition()) {
            hash = (37 * hash) + GAP_WIDTH_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getGapWidthTransition().hashCode();
          }
          if (hasOffsetTransition()) {
            hash = (37 * hash) + OFFSET_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getOffsetTransition().hashCode();
          }
          if (hasBlurTransition()) {
            hash = (37 * hash) + BLUR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getBlurTransition().hashCode();
          }
          if (hasDasharrayTransition()) {
            hash = (37 * hash) + DASHARRAY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getDasharrayTransition().hashCode();
          }
          if (hasPatternTransition()) {
            hash = (37 * hash) + PATTERN_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getPatternTransition().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Line}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update.Line)
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.LineOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.Builder.class);
          }

          // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (visibleBuilder_ == null) {
              visible_ = null;
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }
            cap_ = 0;

            hasCap_ = false;

            join_ = 0;

            hasJoin_ = false;

            if (miterLimitBuilder_ == null) {
              miterLimit_ = null;
            } else {
              miterLimit_ = null;
              miterLimitBuilder_ = null;
            }
            if (roundLimitBuilder_ == null) {
              roundLimit_ = null;
            } else {
              roundLimit_ = null;
              roundLimitBuilder_ = null;
            }
            if (opacityBuilder_ == null) {
              opacity_ = null;
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }
            if (colorBuilder_ == null) {
              color_ = null;
            } else {
              color_ = null;
              colorBuilder_ = null;
            }
            translate_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000800);
            hasTranslate_ = false;

            translateAnchor_ = 0;

            hasTranslateAnchor_ = false;

            if (widthBuilder_ == null) {
              width_ = null;
            } else {
              width_ = null;
              widthBuilder_ = null;
            }
            if (gapWidthBuilder_ == null) {
              gapWidth_ = null;
            } else {
              gapWidth_ = null;
              gapWidthBuilder_ = null;
            }
            if (offsetBuilder_ == null) {
              offset_ = null;
            } else {
              offset_ = null;
              offsetBuilder_ = null;
            }
            if (blurBuilder_ == null) {
              blur_ = null;
            } else {
              blur_ = null;
              blurBuilder_ = null;
            }
            dasharray_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00080000);
            hasDasharray_ = false;

            if (patternBuilder_ == null) {
              pattern_ = null;
            } else {
              pattern_ = null;
              patternBuilder_ = null;
            }
            if (gradientBuilder_ == null) {
              gradient_ = null;
            } else {
              gradient_ = null;
              gradientBuilder_ = null;
            }
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = null;
            } else {
              translateTransition_ = null;
              translateTransitionBuilder_ = null;
            }
            if (widthTransitionBuilder_ == null) {
              widthTransition_ = null;
            } else {
              widthTransition_ = null;
              widthTransitionBuilder_ = null;
            }
            if (gapWidthTransitionBuilder_ == null) {
              gapWidthTransition_ = null;
            } else {
              gapWidthTransition_ = null;
              gapWidthTransitionBuilder_ = null;
            }
            if (offsetTransitionBuilder_ == null) {
              offsetTransition_ = null;
            } else {
              offsetTransition_ = null;
              offsetTransitionBuilder_ = null;
            }
            if (blurTransitionBuilder_ == null) {
              blurTransition_ = null;
            } else {
              blurTransition_ = null;
              blurTransitionBuilder_ = null;
            }
            if (dasharrayTransitionBuilder_ == null) {
              dasharrayTransition_ = null;
            } else {
              dasharrayTransition_ = null;
              dasharrayTransitionBuilder_ = null;
            }
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = null;
            } else {
              patternTransition_ = null;
              patternTransitionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_descriptor;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line getDefaultInstanceForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance();
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line build() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line buildPartial() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (visibleBuilder_ == null) {
              result.visible_ = visible_;
            } else {
              result.visible_ = visibleBuilder_.build();
            }
            if (minZoomBuilder_ == null) {
              result.minZoom_ = minZoom_;
            } else {
              result.minZoom_ = minZoomBuilder_.build();
            }
            if (maxZoomBuilder_ == null) {
              result.maxZoom_ = maxZoom_;
            } else {
              result.maxZoom_ = maxZoomBuilder_.build();
            }
            result.cap_ = cap_;
            result.hasCap_ = hasCap_;
            result.join_ = join_;
            result.hasJoin_ = hasJoin_;
            if (miterLimitBuilder_ == null) {
              result.miterLimit_ = miterLimit_;
            } else {
              result.miterLimit_ = miterLimitBuilder_.build();
            }
            if (roundLimitBuilder_ == null) {
              result.roundLimit_ = roundLimit_;
            } else {
              result.roundLimit_ = roundLimitBuilder_.build();
            }
            if (opacityBuilder_ == null) {
              result.opacity_ = opacity_;
            } else {
              result.opacity_ = opacityBuilder_.build();
            }
            if (colorBuilder_ == null) {
              result.color_ = color_;
            } else {
              result.color_ = colorBuilder_.build();
            }
            if (((bitField0_ & 0x00000800) != 0)) {
              translate_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00000800);
            }
            result.translate_ = translate_;
            result.hasTranslate_ = hasTranslate_;
            result.translateAnchor_ = translateAnchor_;
            result.hasTranslateAnchor_ = hasTranslateAnchor_;
            if (widthBuilder_ == null) {
              result.width_ = width_;
            } else {
              result.width_ = widthBuilder_.build();
            }
            if (gapWidthBuilder_ == null) {
              result.gapWidth_ = gapWidth_;
            } else {
              result.gapWidth_ = gapWidthBuilder_.build();
            }
            if (offsetBuilder_ == null) {
              result.offset_ = offset_;
            } else {
              result.offset_ = offsetBuilder_.build();
            }
            if (blurBuilder_ == null) {
              result.blur_ = blur_;
            } else {
              result.blur_ = blurBuilder_.build();
            }
            if (((bitField0_ & 0x00080000) != 0)) {
              dasharray_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00080000);
            }
            result.dasharray_ = dasharray_;
            result.hasDasharray_ = hasDasharray_;
            if (patternBuilder_ == null) {
              result.pattern_ = pattern_;
            } else {
              result.pattern_ = patternBuilder_.build();
            }
            if (gradientBuilder_ == null) {
              result.gradient_ = gradient_;
            } else {
              result.gradient_ = gradientBuilder_.build();
            }
            if (opacityTransitionBuilder_ == null) {
              result.opacityTransition_ = opacityTransition_;
            } else {
              result.opacityTransition_ = opacityTransitionBuilder_.build();
            }
            if (colorTransitionBuilder_ == null) {
              result.colorTransition_ = colorTransition_;
            } else {
              result.colorTransition_ = colorTransitionBuilder_.build();
            }
            if (translateTransitionBuilder_ == null) {
              result.translateTransition_ = translateTransition_;
            } else {
              result.translateTransition_ = translateTransitionBuilder_.build();
            }
            if (widthTransitionBuilder_ == null) {
              result.widthTransition_ = widthTransition_;
            } else {
              result.widthTransition_ = widthTransitionBuilder_.build();
            }
            if (gapWidthTransitionBuilder_ == null) {
              result.gapWidthTransition_ = gapWidthTransition_;
            } else {
              result.gapWidthTransition_ = gapWidthTransitionBuilder_.build();
            }
            if (offsetTransitionBuilder_ == null) {
              result.offsetTransition_ = offsetTransition_;
            } else {
              result.offsetTransition_ = offsetTransitionBuilder_.build();
            }
            if (blurTransitionBuilder_ == null) {
              result.blurTransition_ = blurTransition_;
            } else {
              result.blurTransition_ = blurTransitionBuilder_.build();
            }
            if (dasharrayTransitionBuilder_ == null) {
              result.dasharrayTransition_ = dasharrayTransition_;
            } else {
              result.dasharrayTransition_ = dasharrayTransitionBuilder_.build();
            }
            if (patternTransitionBuilder_ == null) {
              result.patternTransition_ = patternTransition_;
            } else {
              result.patternTransition_ = patternTransitionBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) {
              return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line other) {
            if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance()) return this;
            if (other.hasVisible()) {
              mergeVisible(other.getVisible());
            }
            if (other.hasMinZoom()) {
              mergeMinZoom(other.getMinZoom());
            }
            if (other.hasMaxZoom()) {
              mergeMaxZoom(other.getMaxZoom());
            }
            if (other.cap_ != 0) {
              setCapValue(other.getCapValue());
            }
            if (other.getHasCap() != false) {
              setHasCap(other.getHasCap());
            }
            if (other.join_ != 0) {
              setJoinValue(other.getJoinValue());
            }
            if (other.getHasJoin() != false) {
              setHasJoin(other.getHasJoin());
            }
            if (other.hasMiterLimit()) {
              mergeMiterLimit(other.getMiterLimit());
            }
            if (other.hasRoundLimit()) {
              mergeRoundLimit(other.getRoundLimit());
            }
            if (other.hasOpacity()) {
              mergeOpacity(other.getOpacity());
            }
            if (other.hasColor()) {
              mergeColor(other.getColor());
            }
            if (!other.translate_.isEmpty()) {
              if (translate_.isEmpty()) {
                translate_ = other.translate_;
                bitField0_ = (bitField0_ & ~0x00000800);
              } else {
                ensureTranslateIsMutable();
                translate_.addAll(other.translate_);
              }
              onChanged();
            }
            if (other.getHasTranslate() != false) {
              setHasTranslate(other.getHasTranslate());
            }
            if (other.translateAnchor_ != 0) {
              setTranslateAnchorValue(other.getTranslateAnchorValue());
            }
            if (other.getHasTranslateAnchor() != false) {
              setHasTranslateAnchor(other.getHasTranslateAnchor());
            }
            if (other.hasWidth()) {
              mergeWidth(other.getWidth());
            }
            if (other.hasGapWidth()) {
              mergeGapWidth(other.getGapWidth());
            }
            if (other.hasOffset()) {
              mergeOffset(other.getOffset());
            }
            if (other.hasBlur()) {
              mergeBlur(other.getBlur());
            }
            if (!other.dasharray_.isEmpty()) {
              if (dasharray_.isEmpty()) {
                dasharray_ = other.dasharray_;
                bitField0_ = (bitField0_ & ~0x00080000);
              } else {
                ensureDasharrayIsMutable();
                dasharray_.addAll(other.dasharray_);
              }
              onChanged();
            }
            if (other.getHasDasharray() != false) {
              setHasDasharray(other.getHasDasharray());
            }
            if (other.hasPattern()) {
              mergePattern(other.getPattern());
            }
            if (other.hasGradient()) {
              mergeGradient(other.getGradient());
            }
            if (other.hasOpacityTransition()) {
              mergeOpacityTransition(other.getOpacityTransition());
            }
            if (other.hasColorTransition()) {
              mergeColorTransition(other.getColorTransition());
            }
            if (other.hasTranslateTransition()) {
              mergeTranslateTransition(other.getTranslateTransition());
            }
            if (other.hasWidthTransition()) {
              mergeWidthTransition(other.getWidthTransition());
            }
            if (other.hasGapWidthTransition()) {
              mergeGapWidthTransition(other.getGapWidthTransition());
            }
            if (other.hasOffsetTransition()) {
              mergeOffsetTransition(other.getOffsetTransition());
            }
            if (other.hasBlurTransition()) {
              mergeBlurTransition(other.getBlurTransition());
            }
            if (other.hasDasharrayTransition()) {
              mergeDasharrayTransition(other.getDasharrayTransition());
            }
            if (other.hasPatternTransition()) {
              mergePatternTransition(other.getPatternTransition());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private com.google.protobuf.BoolValue visible_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> visibleBuilder_;
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public boolean hasVisible() {
            return visibleBuilder_ != null || visible_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue getVisible() {
            if (visibleBuilder_ == null) {
              return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            } else {
              return visibleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visible_ = value;
              onChanged();
            } else {
              visibleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (visibleBuilder_ == null) {
              visible_ = builderForValue.build();
              onChanged();
            } else {
              visibleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder mergeVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (visible_ != null) {
                visible_ =
                  com.google.protobuf.BoolValue.newBuilder(visible_).mergeFrom(value).buildPartial();
              } else {
                visible_ = value;
              }
              onChanged();
            } else {
              visibleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder clearVisible() {
            if (visibleBuilder_ == null) {
              visible_ = null;
              onChanged();
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVisibleBuilder() {
            
            onChanged();
            return getVisibleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
            if (visibleBuilder_ != null) {
              return visibleBuilder_.getMessageOrBuilder();
            } else {
              return visible_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVisibleFieldBuilder() {
            if (visibleBuilder_ == null) {
              visibleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVisible(),
                      getParentForChildren(),
                      isClean());
              visible_ = null;
            }
            return visibleBuilder_;
          }

          private com.google.protobuf.FloatValue minZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> minZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public boolean hasMinZoom() {
            return minZoomBuilder_ != null || minZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue getMinZoom() {
            if (minZoomBuilder_ == null) {
              return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            } else {
              return minZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              minZoom_ = value;
              onChanged();
            } else {
              minZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (minZoomBuilder_ == null) {
              minZoom_ = builderForValue.build();
              onChanged();
            } else {
              minZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder mergeMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (minZoom_ != null) {
                minZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(minZoom_).mergeFrom(value).buildPartial();
              } else {
                minZoom_ = value;
              }
              onChanged();
            } else {
              minZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder clearMinZoom() {
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
              onChanged();
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMinZoomBuilder() {
            
            onChanged();
            return getMinZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
            if (minZoomBuilder_ != null) {
              return minZoomBuilder_.getMessageOrBuilder();
            } else {
              return minZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMinZoomFieldBuilder() {
            if (minZoomBuilder_ == null) {
              minZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMinZoom(),
                      getParentForChildren(),
                      isClean());
              minZoom_ = null;
            }
            return minZoomBuilder_;
          }

          private com.google.protobuf.FloatValue maxZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> maxZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public boolean hasMaxZoom() {
            return maxZoomBuilder_ != null || maxZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue getMaxZoom() {
            if (maxZoomBuilder_ == null) {
              return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            } else {
              return maxZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              maxZoom_ = value;
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = builderForValue.build();
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder mergeMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (maxZoom_ != null) {
                maxZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(maxZoom_).mergeFrom(value).buildPartial();
              } else {
                maxZoom_ = value;
              }
              onChanged();
            } else {
              maxZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder clearMaxZoom() {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
              onChanged();
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMaxZoomBuilder() {
            
            onChanged();
            return getMaxZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
            if (maxZoomBuilder_ != null) {
              return maxZoomBuilder_.getMessageOrBuilder();
            } else {
              return maxZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMaxZoomFieldBuilder() {
            if (maxZoomBuilder_ == null) {
              maxZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMaxZoom(),
                      getParentForChildren(),
                      isClean());
              maxZoom_ = null;
            }
            return maxZoomBuilder_;
          }

          private int cap_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
           */
          public int getCapValue() {
            return cap_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
           */
          public Builder setCapValue(int value) {
            cap_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap getCap() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap result = com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap.valueOf(cap_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
           */
          public Builder setCap(com.tophap.mapbox_gl.proto.Layers.Layer.Line.Cap value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            cap_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Cap cap = 4;</code>
           */
          public Builder clearCap() {
            
            cap_ = 0;
            onChanged();
            return this;
          }

          private boolean hasCap_ ;
          /**
           * <code>bool has_cap = 5;</code>
           */
          public boolean getHasCap() {
            return hasCap_;
          }
          /**
           * <code>bool has_cap = 5;</code>
           */
          public Builder setHasCap(boolean value) {
            
            hasCap_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_cap = 5;</code>
           */
          public Builder clearHasCap() {
            
            hasCap_ = false;
            onChanged();
            return this;
          }

          private int join_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
           */
          public int getJoinValue() {
            return join_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
           */
          public Builder setJoinValue(int value) {
            join_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join getJoin() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join result = com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join.valueOf(join_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
           */
          public Builder setJoin(com.tophap.mapbox_gl.proto.Layers.Layer.Line.Join value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            join_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Line.Join join = 6;</code>
           */
          public Builder clearJoin() {
            
            join_ = 0;
            onChanged();
            return this;
          }

          private boolean hasJoin_ ;
          /**
           * <code>bool has_join = 7;</code>
           */
          public boolean getHasJoin() {
            return hasJoin_;
          }
          /**
           * <code>bool has_join = 7;</code>
           */
          public Builder setHasJoin(boolean value) {
            
            hasJoin_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_join = 7;</code>
           */
          public Builder clearHasJoin() {
            
            hasJoin_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue miterLimit_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> miterLimitBuilder_;
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          public boolean hasMiterLimit() {
            return miterLimitBuilder_ != null || miterLimit_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          public com.google.protobuf.FloatValue getMiterLimit() {
            if (miterLimitBuilder_ == null) {
              return miterLimit_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : miterLimit_;
            } else {
              return miterLimitBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          public Builder setMiterLimit(com.google.protobuf.FloatValue value) {
            if (miterLimitBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              miterLimit_ = value;
              onChanged();
            } else {
              miterLimitBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          public Builder setMiterLimit(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (miterLimitBuilder_ == null) {
              miterLimit_ = builderForValue.build();
              onChanged();
            } else {
              miterLimitBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          public Builder mergeMiterLimit(com.google.protobuf.FloatValue value) {
            if (miterLimitBuilder_ == null) {
              if (miterLimit_ != null) {
                miterLimit_ =
                  com.google.protobuf.FloatValue.newBuilder(miterLimit_).mergeFrom(value).buildPartial();
              } else {
                miterLimit_ = value;
              }
              onChanged();
            } else {
              miterLimitBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          public Builder clearMiterLimit() {
            if (miterLimitBuilder_ == null) {
              miterLimit_ = null;
              onChanged();
            } else {
              miterLimit_ = null;
              miterLimitBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMiterLimitBuilder() {
            
            onChanged();
            return getMiterLimitFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMiterLimitOrBuilder() {
            if (miterLimitBuilder_ != null) {
              return miterLimitBuilder_.getMessageOrBuilder();
            } else {
              return miterLimit_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : miterLimit_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue miter_limit = 8;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMiterLimitFieldBuilder() {
            if (miterLimitBuilder_ == null) {
              miterLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMiterLimit(),
                      getParentForChildren(),
                      isClean());
              miterLimit_ = null;
            }
            return miterLimitBuilder_;
          }

          private com.google.protobuf.FloatValue roundLimit_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> roundLimitBuilder_;
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          public boolean hasRoundLimit() {
            return roundLimitBuilder_ != null || roundLimit_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          public com.google.protobuf.FloatValue getRoundLimit() {
            if (roundLimitBuilder_ == null) {
              return roundLimit_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : roundLimit_;
            } else {
              return roundLimitBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          public Builder setRoundLimit(com.google.protobuf.FloatValue value) {
            if (roundLimitBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              roundLimit_ = value;
              onChanged();
            } else {
              roundLimitBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          public Builder setRoundLimit(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (roundLimitBuilder_ == null) {
              roundLimit_ = builderForValue.build();
              onChanged();
            } else {
              roundLimitBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          public Builder mergeRoundLimit(com.google.protobuf.FloatValue value) {
            if (roundLimitBuilder_ == null) {
              if (roundLimit_ != null) {
                roundLimit_ =
                  com.google.protobuf.FloatValue.newBuilder(roundLimit_).mergeFrom(value).buildPartial();
              } else {
                roundLimit_ = value;
              }
              onChanged();
            } else {
              roundLimitBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          public Builder clearRoundLimit() {
            if (roundLimitBuilder_ == null) {
              roundLimit_ = null;
              onChanged();
            } else {
              roundLimit_ = null;
              roundLimitBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          public com.google.protobuf.FloatValue.Builder getRoundLimitBuilder() {
            
            onChanged();
            return getRoundLimitFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getRoundLimitOrBuilder() {
            if (roundLimitBuilder_ != null) {
              return roundLimitBuilder_.getMessageOrBuilder();
            } else {
              return roundLimit_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : roundLimit_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue round_limit = 9;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getRoundLimitFieldBuilder() {
            if (roundLimitBuilder_ == null) {
              roundLimitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getRoundLimit(),
                      getParentForChildren(),
                      isClean());
              roundLimit_ = null;
            }
            return roundLimitBuilder_;
          }

          private com.google.protobuf.FloatValue opacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> opacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          public boolean hasOpacity() {
            return opacityBuilder_ != null || opacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          public com.google.protobuf.FloatValue getOpacity() {
            if (opacityBuilder_ == null) {
              return opacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            } else {
              return opacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          public Builder setOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacity_ = value;
              onChanged();
            } else {
              opacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          public Builder setOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (opacityBuilder_ == null) {
              opacity_ = builderForValue.build();
              onChanged();
            } else {
              opacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          public Builder mergeOpacity(com.google.protobuf.FloatValue value) {
            if (opacityBuilder_ == null) {
              if (opacity_ != null) {
                opacity_ =
                  com.google.protobuf.FloatValue.newBuilder(opacity_).mergeFrom(value).buildPartial();
              } else {
                opacity_ = value;
              }
              onChanged();
            } else {
              opacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          public Builder clearOpacity() {
            if (opacityBuilder_ == null) {
              opacity_ = null;
              onChanged();
            } else {
              opacity_ = null;
              opacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          public com.google.protobuf.FloatValue.Builder getOpacityBuilder() {
            
            onChanged();
            return getOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getOpacityOrBuilder() {
            if (opacityBuilder_ != null) {
              return opacityBuilder_.getMessageOrBuilder();
            } else {
              return opacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : opacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue opacity = 10;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getOpacityFieldBuilder() {
            if (opacityBuilder_ == null) {
              opacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getOpacity(),
                      getParentForChildren(),
                      isClean());
              opacity_ = null;
            }
            return opacityBuilder_;
          }

          private com.google.protobuf.Int32Value color_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> colorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          public boolean hasColor() {
            return colorBuilder_ != null || color_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          public com.google.protobuf.Int32Value getColor() {
            if (colorBuilder_ == null) {
              return color_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            } else {
              return colorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          public Builder setColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              color_ = value;
              onChanged();
            } else {
              colorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          public Builder setColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (colorBuilder_ == null) {
              color_ = builderForValue.build();
              onChanged();
            } else {
              colorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          public Builder mergeColor(com.google.protobuf.Int32Value value) {
            if (colorBuilder_ == null) {
              if (color_ != null) {
                color_ =
                  com.google.protobuf.Int32Value.newBuilder(color_).mergeFrom(value).buildPartial();
              } else {
                color_ = value;
              }
              onChanged();
            } else {
              colorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          public Builder clearColor() {
            if (colorBuilder_ == null) {
              color_ = null;
              onChanged();
            } else {
              color_ = null;
              colorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          public com.google.protobuf.Int32Value.Builder getColorBuilder() {
            
            onChanged();
            return getColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getColorOrBuilder() {
            if (colorBuilder_ != null) {
              return colorBuilder_.getMessageOrBuilder();
            } else {
              return color_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : color_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value color = 11;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getColorFieldBuilder() {
            if (colorBuilder_ == null) {
              colorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getColor(),
                      getParentForChildren(),
                      isClean());
              color_ = null;
            }
            return colorBuilder_;
          }

          private com.google.protobuf.Internal.FloatList translate_ = emptyFloatList();
          private void ensureTranslateIsMutable() {
            if (!((bitField0_ & 0x00000800) != 0)) {
              translate_ = mutableCopy(translate_);
              bitField0_ |= 0x00000800;
             }
          }
          /**
           * <code>repeated float translate = 12;</code>
           */
          public java.util.List<java.lang.Float>
              getTranslateList() {
            return ((bitField0_ & 0x00000800) != 0) ?
                     java.util.Collections.unmodifiableList(translate_) : translate_;
          }
          /**
           * <code>repeated float translate = 12;</code>
           */
          public int getTranslateCount() {
            return translate_.size();
          }
          /**
           * <code>repeated float translate = 12;</code>
           */
          public float getTranslate(int index) {
            return translate_.getFloat(index);
          }
          /**
           * <code>repeated float translate = 12;</code>
           */
          public Builder setTranslate(
              int index, float value) {
            ensureTranslateIsMutable();
            translate_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 12;</code>
           */
          public Builder addTranslate(float value) {
            ensureTranslateIsMutable();
            translate_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 12;</code>
           */
          public Builder addAllTranslate(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureTranslateIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, translate_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float translate = 12;</code>
           */
          public Builder clearTranslate() {
            translate_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00000800);
            onChanged();
            return this;
          }

          private boolean hasTranslate_ ;
          /**
           * <code>bool has_translate = 13;</code>
           */
          public boolean getHasTranslate() {
            return hasTranslate_;
          }
          /**
           * <code>bool has_translate = 13;</code>
           */
          public Builder setHasTranslate(boolean value) {
            
            hasTranslate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_translate = 13;</code>
           */
          public Builder clearHasTranslate() {
            
            hasTranslate_ = false;
            onChanged();
            return this;
          }

          private int translateAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
           */
          public int getTranslateAnchorValue() {
            return translateAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
           */
          public Builder setTranslateAnchorValue(int value) {
            translateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTranslateAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(translateAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
           */
          public Builder setTranslateAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            translateAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor translate_anchor = 14;</code>
           */
          public Builder clearTranslateAnchor() {
            
            translateAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTranslateAnchor_ ;
          /**
           * <code>bool has_translate_anchor = 15;</code>
           */
          public boolean getHasTranslateAnchor() {
            return hasTranslateAnchor_;
          }
          /**
           * <code>bool has_translate_anchor = 15;</code>
           */
          public Builder setHasTranslateAnchor(boolean value) {
            
            hasTranslateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_translate_anchor = 15;</code>
           */
          public Builder clearHasTranslateAnchor() {
            
            hasTranslateAnchor_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue width_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> widthBuilder_;
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          public boolean hasWidth() {
            return widthBuilder_ != null || width_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          public com.google.protobuf.FloatValue getWidth() {
            if (widthBuilder_ == null) {
              return width_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : width_;
            } else {
              return widthBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          public Builder setWidth(com.google.protobuf.FloatValue value) {
            if (widthBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              width_ = value;
              onChanged();
            } else {
              widthBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          public Builder setWidth(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (widthBuilder_ == null) {
              width_ = builderForValue.build();
              onChanged();
            } else {
              widthBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          public Builder mergeWidth(com.google.protobuf.FloatValue value) {
            if (widthBuilder_ == null) {
              if (width_ != null) {
                width_ =
                  com.google.protobuf.FloatValue.newBuilder(width_).mergeFrom(value).buildPartial();
              } else {
                width_ = value;
              }
              onChanged();
            } else {
              widthBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          public Builder clearWidth() {
            if (widthBuilder_ == null) {
              width_ = null;
              onChanged();
            } else {
              width_ = null;
              widthBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          public com.google.protobuf.FloatValue.Builder getWidthBuilder() {
            
            onChanged();
            return getWidthFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getWidthOrBuilder() {
            if (widthBuilder_ != null) {
              return widthBuilder_.getMessageOrBuilder();
            } else {
              return width_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : width_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue width = 16;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getWidthFieldBuilder() {
            if (widthBuilder_ == null) {
              widthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getWidth(),
                      getParentForChildren(),
                      isClean());
              width_ = null;
            }
            return widthBuilder_;
          }

          private com.google.protobuf.FloatValue gapWidth_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> gapWidthBuilder_;
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          public boolean hasGapWidth() {
            return gapWidthBuilder_ != null || gapWidth_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          public com.google.protobuf.FloatValue getGapWidth() {
            if (gapWidthBuilder_ == null) {
              return gapWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : gapWidth_;
            } else {
              return gapWidthBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          public Builder setGapWidth(com.google.protobuf.FloatValue value) {
            if (gapWidthBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              gapWidth_ = value;
              onChanged();
            } else {
              gapWidthBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          public Builder setGapWidth(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (gapWidthBuilder_ == null) {
              gapWidth_ = builderForValue.build();
              onChanged();
            } else {
              gapWidthBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          public Builder mergeGapWidth(com.google.protobuf.FloatValue value) {
            if (gapWidthBuilder_ == null) {
              if (gapWidth_ != null) {
                gapWidth_ =
                  com.google.protobuf.FloatValue.newBuilder(gapWidth_).mergeFrom(value).buildPartial();
              } else {
                gapWidth_ = value;
              }
              onChanged();
            } else {
              gapWidthBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          public Builder clearGapWidth() {
            if (gapWidthBuilder_ == null) {
              gapWidth_ = null;
              onChanged();
            } else {
              gapWidth_ = null;
              gapWidthBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          public com.google.protobuf.FloatValue.Builder getGapWidthBuilder() {
            
            onChanged();
            return getGapWidthFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getGapWidthOrBuilder() {
            if (gapWidthBuilder_ != null) {
              return gapWidthBuilder_.getMessageOrBuilder();
            } else {
              return gapWidth_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : gapWidth_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue gap_width = 17;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getGapWidthFieldBuilder() {
            if (gapWidthBuilder_ == null) {
              gapWidthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getGapWidth(),
                      getParentForChildren(),
                      isClean());
              gapWidth_ = null;
            }
            return gapWidthBuilder_;
          }

          private com.google.protobuf.FloatValue offset_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> offsetBuilder_;
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          public boolean hasOffset() {
            return offsetBuilder_ != null || offset_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          public com.google.protobuf.FloatValue getOffset() {
            if (offsetBuilder_ == null) {
              return offset_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : offset_;
            } else {
              return offsetBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          public Builder setOffset(com.google.protobuf.FloatValue value) {
            if (offsetBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              offset_ = value;
              onChanged();
            } else {
              offsetBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          public Builder setOffset(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (offsetBuilder_ == null) {
              offset_ = builderForValue.build();
              onChanged();
            } else {
              offsetBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          public Builder mergeOffset(com.google.protobuf.FloatValue value) {
            if (offsetBuilder_ == null) {
              if (offset_ != null) {
                offset_ =
                  com.google.protobuf.FloatValue.newBuilder(offset_).mergeFrom(value).buildPartial();
              } else {
                offset_ = value;
              }
              onChanged();
            } else {
              offsetBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          public Builder clearOffset() {
            if (offsetBuilder_ == null) {
              offset_ = null;
              onChanged();
            } else {
              offset_ = null;
              offsetBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          public com.google.protobuf.FloatValue.Builder getOffsetBuilder() {
            
            onChanged();
            return getOffsetFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getOffsetOrBuilder() {
            if (offsetBuilder_ != null) {
              return offsetBuilder_.getMessageOrBuilder();
            } else {
              return offset_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : offset_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue offset = 18;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getOffsetFieldBuilder() {
            if (offsetBuilder_ == null) {
              offsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getOffset(),
                      getParentForChildren(),
                      isClean());
              offset_ = null;
            }
            return offsetBuilder_;
          }

          private com.google.protobuf.FloatValue blur_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> blurBuilder_;
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          public boolean hasBlur() {
            return blurBuilder_ != null || blur_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          public com.google.protobuf.FloatValue getBlur() {
            if (blurBuilder_ == null) {
              return blur_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : blur_;
            } else {
              return blurBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          public Builder setBlur(com.google.protobuf.FloatValue value) {
            if (blurBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              blur_ = value;
              onChanged();
            } else {
              blurBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          public Builder setBlur(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (blurBuilder_ == null) {
              blur_ = builderForValue.build();
              onChanged();
            } else {
              blurBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          public Builder mergeBlur(com.google.protobuf.FloatValue value) {
            if (blurBuilder_ == null) {
              if (blur_ != null) {
                blur_ =
                  com.google.protobuf.FloatValue.newBuilder(blur_).mergeFrom(value).buildPartial();
              } else {
                blur_ = value;
              }
              onChanged();
            } else {
              blurBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          public Builder clearBlur() {
            if (blurBuilder_ == null) {
              blur_ = null;
              onChanged();
            } else {
              blur_ = null;
              blurBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          public com.google.protobuf.FloatValue.Builder getBlurBuilder() {
            
            onChanged();
            return getBlurFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getBlurOrBuilder() {
            if (blurBuilder_ != null) {
              return blurBuilder_.getMessageOrBuilder();
            } else {
              return blur_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : blur_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue blur = 19;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getBlurFieldBuilder() {
            if (blurBuilder_ == null) {
              blurBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getBlur(),
                      getParentForChildren(),
                      isClean());
              blur_ = null;
            }
            return blurBuilder_;
          }

          private com.google.protobuf.Internal.FloatList dasharray_ = emptyFloatList();
          private void ensureDasharrayIsMutable() {
            if (!((bitField0_ & 0x00080000) != 0)) {
              dasharray_ = mutableCopy(dasharray_);
              bitField0_ |= 0x00080000;
             }
          }
          /**
           * <code>repeated float dasharray = 20;</code>
           */
          public java.util.List<java.lang.Float>
              getDasharrayList() {
            return ((bitField0_ & 0x00080000) != 0) ?
                     java.util.Collections.unmodifiableList(dasharray_) : dasharray_;
          }
          /**
           * <code>repeated float dasharray = 20;</code>
           */
          public int getDasharrayCount() {
            return dasharray_.size();
          }
          /**
           * <code>repeated float dasharray = 20;</code>
           */
          public float getDasharray(int index) {
            return dasharray_.getFloat(index);
          }
          /**
           * <code>repeated float dasharray = 20;</code>
           */
          public Builder setDasharray(
              int index, float value) {
            ensureDasharrayIsMutable();
            dasharray_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float dasharray = 20;</code>
           */
          public Builder addDasharray(float value) {
            ensureDasharrayIsMutable();
            dasharray_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float dasharray = 20;</code>
           */
          public Builder addAllDasharray(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureDasharrayIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, dasharray_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float dasharray = 20;</code>
           */
          public Builder clearDasharray() {
            dasharray_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00080000);
            onChanged();
            return this;
          }

          private boolean hasDasharray_ ;
          /**
           * <code>bool has_dasharray = 21;</code>
           */
          public boolean getHasDasharray() {
            return hasDasharray_;
          }
          /**
           * <code>bool has_dasharray = 21;</code>
           */
          public Builder setHasDasharray(boolean value) {
            
            hasDasharray_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_dasharray = 21;</code>
           */
          public Builder clearHasDasharray() {
            
            hasDasharray_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.StringValue pattern_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> patternBuilder_;
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          public boolean hasPattern() {
            return patternBuilder_ != null || pattern_ != null;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          public com.google.protobuf.StringValue getPattern() {
            if (patternBuilder_ == null) {
              return pattern_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
            } else {
              return patternBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          public Builder setPattern(com.google.protobuf.StringValue value) {
            if (patternBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              pattern_ = value;
              onChanged();
            } else {
              patternBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          public Builder setPattern(
              com.google.protobuf.StringValue.Builder builderForValue) {
            if (patternBuilder_ == null) {
              pattern_ = builderForValue.build();
              onChanged();
            } else {
              patternBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          public Builder mergePattern(com.google.protobuf.StringValue value) {
            if (patternBuilder_ == null) {
              if (pattern_ != null) {
                pattern_ =
                  com.google.protobuf.StringValue.newBuilder(pattern_).mergeFrom(value).buildPartial();
              } else {
                pattern_ = value;
              }
              onChanged();
            } else {
              patternBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          public Builder clearPattern() {
            if (patternBuilder_ == null) {
              pattern_ = null;
              onChanged();
            } else {
              pattern_ = null;
              patternBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          public com.google.protobuf.StringValue.Builder getPatternBuilder() {
            
            onChanged();
            return getPatternFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          public com.google.protobuf.StringValueOrBuilder getPatternOrBuilder() {
            if (patternBuilder_ != null) {
              return patternBuilder_.getMessageOrBuilder();
            } else {
              return pattern_ == null ?
                  com.google.protobuf.StringValue.getDefaultInstance() : pattern_;
            }
          }
          /**
           * <code>.google.protobuf.StringValue pattern = 22;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
              getPatternFieldBuilder() {
            if (patternBuilder_ == null) {
              patternBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                      getPattern(),
                      getParentForChildren(),
                      isClean());
              pattern_ = null;
            }
            return patternBuilder_;
          }

          private com.google.protobuf.Int32Value gradient_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> gradientBuilder_;
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          public boolean hasGradient() {
            return gradientBuilder_ != null || gradient_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          public com.google.protobuf.Int32Value getGradient() {
            if (gradientBuilder_ == null) {
              return gradient_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : gradient_;
            } else {
              return gradientBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          public Builder setGradient(com.google.protobuf.Int32Value value) {
            if (gradientBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              gradient_ = value;
              onChanged();
            } else {
              gradientBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          public Builder setGradient(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (gradientBuilder_ == null) {
              gradient_ = builderForValue.build();
              onChanged();
            } else {
              gradientBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          public Builder mergeGradient(com.google.protobuf.Int32Value value) {
            if (gradientBuilder_ == null) {
              if (gradient_ != null) {
                gradient_ =
                  com.google.protobuf.Int32Value.newBuilder(gradient_).mergeFrom(value).buildPartial();
              } else {
                gradient_ = value;
              }
              onChanged();
            } else {
              gradientBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          public Builder clearGradient() {
            if (gradientBuilder_ == null) {
              gradient_ = null;
              onChanged();
            } else {
              gradient_ = null;
              gradientBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          public com.google.protobuf.Int32Value.Builder getGradientBuilder() {
            
            onChanged();
            return getGradientFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getGradientOrBuilder() {
            if (gradientBuilder_ != null) {
              return gradientBuilder_.getMessageOrBuilder();
            } else {
              return gradient_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : gradient_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value gradient = 23;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getGradientFieldBuilder() {
            if (gradientBuilder_ == null) {
              gradientBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getGradient(),
                      getParentForChildren(),
                      isClean());
              gradient_ = null;
            }
            return gradientBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions opacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> opacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          public boolean hasOpacityTransition() {
            return opacityTransitionBuilder_ != null || opacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              return opacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            } else {
              return opacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          public Builder setOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              opacityTransition_ = value;
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          public Builder setOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              opacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          public Builder mergeOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (opacityTransitionBuilder_ == null) {
              if (opacityTransition_ != null) {
                opacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(opacityTransition_).mergeFrom(value).buildPartial();
              } else {
                opacityTransition_ = value;
              }
              onChanged();
            } else {
              opacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          public Builder clearOpacityTransition() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransition_ = null;
              onChanged();
            } else {
              opacityTransition_ = null;
              opacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getOpacityTransitionBuilder() {
            
            onChanged();
            return getOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOpacityTransitionOrBuilder() {
            if (opacityTransitionBuilder_ != null) {
              return opacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return opacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : opacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions opacity_transition = 24;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getOpacityTransitionFieldBuilder() {
            if (opacityTransitionBuilder_ == null) {
              opacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              opacityTransition_ = null;
            }
            return opacityTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions colorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> colorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          public boolean hasColorTransition() {
            return colorTransitionBuilder_ != null || colorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getColorTransition() {
            if (colorTransitionBuilder_ == null) {
              return colorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            } else {
              return colorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          public Builder setColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              colorTransition_ = value;
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          public Builder setColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = builderForValue.build();
              onChanged();
            } else {
              colorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          public Builder mergeColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (colorTransitionBuilder_ == null) {
              if (colorTransition_ != null) {
                colorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(colorTransition_).mergeFrom(value).buildPartial();
              } else {
                colorTransition_ = value;
              }
              onChanged();
            } else {
              colorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          public Builder clearColorTransition() {
            if (colorTransitionBuilder_ == null) {
              colorTransition_ = null;
              onChanged();
            } else {
              colorTransition_ = null;
              colorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getColorTransitionBuilder() {
            
            onChanged();
            return getColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getColorTransitionOrBuilder() {
            if (colorTransitionBuilder_ != null) {
              return colorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return colorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : colorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions color_transition = 25;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getColorTransitionFieldBuilder() {
            if (colorTransitionBuilder_ == null) {
              colorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getColorTransition(),
                      getParentForChildren(),
                      isClean());
              colorTransition_ = null;
            }
            return colorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions translateTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> translateTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          public boolean hasTranslateTransition() {
            return translateTransitionBuilder_ != null || translateTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTranslateTransition() {
            if (translateTransitionBuilder_ == null) {
              return translateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
            } else {
              return translateTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          public Builder setTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (translateTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              translateTransition_ = value;
              onChanged();
            } else {
              translateTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          public Builder setTranslateTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = builderForValue.build();
              onChanged();
            } else {
              translateTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          public Builder mergeTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (translateTransitionBuilder_ == null) {
              if (translateTransition_ != null) {
                translateTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(translateTransition_).mergeFrom(value).buildPartial();
              } else {
                translateTransition_ = value;
              }
              onChanged();
            } else {
              translateTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          public Builder clearTranslateTransition() {
            if (translateTransitionBuilder_ == null) {
              translateTransition_ = null;
              onChanged();
            } else {
              translateTransition_ = null;
              translateTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTranslateTransitionBuilder() {
            
            onChanged();
            return getTranslateTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTranslateTransitionOrBuilder() {
            if (translateTransitionBuilder_ != null) {
              return translateTransitionBuilder_.getMessageOrBuilder();
            } else {
              return translateTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : translateTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions translate_transition = 26;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTranslateTransitionFieldBuilder() {
            if (translateTransitionBuilder_ == null) {
              translateTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTranslateTransition(),
                      getParentForChildren(),
                      isClean());
              translateTransition_ = null;
            }
            return translateTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions widthTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> widthTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          public boolean hasWidthTransition() {
            return widthTransitionBuilder_ != null || widthTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getWidthTransition() {
            if (widthTransitionBuilder_ == null) {
              return widthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : widthTransition_;
            } else {
              return widthTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          public Builder setWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (widthTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              widthTransition_ = value;
              onChanged();
            } else {
              widthTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          public Builder setWidthTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (widthTransitionBuilder_ == null) {
              widthTransition_ = builderForValue.build();
              onChanged();
            } else {
              widthTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          public Builder mergeWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (widthTransitionBuilder_ == null) {
              if (widthTransition_ != null) {
                widthTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(widthTransition_).mergeFrom(value).buildPartial();
              } else {
                widthTransition_ = value;
              }
              onChanged();
            } else {
              widthTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          public Builder clearWidthTransition() {
            if (widthTransitionBuilder_ == null) {
              widthTransition_ = null;
              onChanged();
            } else {
              widthTransition_ = null;
              widthTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getWidthTransitionBuilder() {
            
            onChanged();
            return getWidthTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getWidthTransitionOrBuilder() {
            if (widthTransitionBuilder_ != null) {
              return widthTransitionBuilder_.getMessageOrBuilder();
            } else {
              return widthTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : widthTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions width_transition = 27;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getWidthTransitionFieldBuilder() {
            if (widthTransitionBuilder_ == null) {
              widthTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getWidthTransition(),
                      getParentForChildren(),
                      isClean());
              widthTransition_ = null;
            }
            return widthTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions gapWidthTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> gapWidthTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          public boolean hasGapWidthTransition() {
            return gapWidthTransitionBuilder_ != null || gapWidthTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getGapWidthTransition() {
            if (gapWidthTransitionBuilder_ == null) {
              return gapWidthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : gapWidthTransition_;
            } else {
              return gapWidthTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          public Builder setGapWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (gapWidthTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              gapWidthTransition_ = value;
              onChanged();
            } else {
              gapWidthTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          public Builder setGapWidthTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (gapWidthTransitionBuilder_ == null) {
              gapWidthTransition_ = builderForValue.build();
              onChanged();
            } else {
              gapWidthTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          public Builder mergeGapWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (gapWidthTransitionBuilder_ == null) {
              if (gapWidthTransition_ != null) {
                gapWidthTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(gapWidthTransition_).mergeFrom(value).buildPartial();
              } else {
                gapWidthTransition_ = value;
              }
              onChanged();
            } else {
              gapWidthTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          public Builder clearGapWidthTransition() {
            if (gapWidthTransitionBuilder_ == null) {
              gapWidthTransition_ = null;
              onChanged();
            } else {
              gapWidthTransition_ = null;
              gapWidthTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getGapWidthTransitionBuilder() {
            
            onChanged();
            return getGapWidthTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getGapWidthTransitionOrBuilder() {
            if (gapWidthTransitionBuilder_ != null) {
              return gapWidthTransitionBuilder_.getMessageOrBuilder();
            } else {
              return gapWidthTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : gapWidthTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions gap_width_transition = 28;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getGapWidthTransitionFieldBuilder() {
            if (gapWidthTransitionBuilder_ == null) {
              gapWidthTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getGapWidthTransition(),
                      getParentForChildren(),
                      isClean());
              gapWidthTransition_ = null;
            }
            return gapWidthTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions offsetTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> offsetTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          public boolean hasOffsetTransition() {
            return offsetTransitionBuilder_ != null || offsetTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getOffsetTransition() {
            if (offsetTransitionBuilder_ == null) {
              return offsetTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : offsetTransition_;
            } else {
              return offsetTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          public Builder setOffsetTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (offsetTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              offsetTransition_ = value;
              onChanged();
            } else {
              offsetTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          public Builder setOffsetTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (offsetTransitionBuilder_ == null) {
              offsetTransition_ = builderForValue.build();
              onChanged();
            } else {
              offsetTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          public Builder mergeOffsetTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (offsetTransitionBuilder_ == null) {
              if (offsetTransition_ != null) {
                offsetTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(offsetTransition_).mergeFrom(value).buildPartial();
              } else {
                offsetTransition_ = value;
              }
              onChanged();
            } else {
              offsetTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          public Builder clearOffsetTransition() {
            if (offsetTransitionBuilder_ == null) {
              offsetTransition_ = null;
              onChanged();
            } else {
              offsetTransition_ = null;
              offsetTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getOffsetTransitionBuilder() {
            
            onChanged();
            return getOffsetTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getOffsetTransitionOrBuilder() {
            if (offsetTransitionBuilder_ != null) {
              return offsetTransitionBuilder_.getMessageOrBuilder();
            } else {
              return offsetTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : offsetTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions offset_transition = 29;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getOffsetTransitionFieldBuilder() {
            if (offsetTransitionBuilder_ == null) {
              offsetTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getOffsetTransition(),
                      getParentForChildren(),
                      isClean());
              offsetTransition_ = null;
            }
            return offsetTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions blurTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> blurTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          public boolean hasBlurTransition() {
            return blurTransitionBuilder_ != null || blurTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getBlurTransition() {
            if (blurTransitionBuilder_ == null) {
              return blurTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : blurTransition_;
            } else {
              return blurTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          public Builder setBlurTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (blurTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              blurTransition_ = value;
              onChanged();
            } else {
              blurTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          public Builder setBlurTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (blurTransitionBuilder_ == null) {
              blurTransition_ = builderForValue.build();
              onChanged();
            } else {
              blurTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          public Builder mergeBlurTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (blurTransitionBuilder_ == null) {
              if (blurTransition_ != null) {
                blurTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(blurTransition_).mergeFrom(value).buildPartial();
              } else {
                blurTransition_ = value;
              }
              onChanged();
            } else {
              blurTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          public Builder clearBlurTransition() {
            if (blurTransitionBuilder_ == null) {
              blurTransition_ = null;
              onChanged();
            } else {
              blurTransition_ = null;
              blurTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getBlurTransitionBuilder() {
            
            onChanged();
            return getBlurTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getBlurTransitionOrBuilder() {
            if (blurTransitionBuilder_ != null) {
              return blurTransitionBuilder_.getMessageOrBuilder();
            } else {
              return blurTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : blurTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions blur_transition = 30;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getBlurTransitionFieldBuilder() {
            if (blurTransitionBuilder_ == null) {
              blurTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getBlurTransition(),
                      getParentForChildren(),
                      isClean());
              blurTransition_ = null;
            }
            return blurTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions dasharrayTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> dasharrayTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          public boolean hasDasharrayTransition() {
            return dasharrayTransitionBuilder_ != null || dasharrayTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getDasharrayTransition() {
            if (dasharrayTransitionBuilder_ == null) {
              return dasharrayTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : dasharrayTransition_;
            } else {
              return dasharrayTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          public Builder setDasharrayTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (dasharrayTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              dasharrayTransition_ = value;
              onChanged();
            } else {
              dasharrayTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          public Builder setDasharrayTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (dasharrayTransitionBuilder_ == null) {
              dasharrayTransition_ = builderForValue.build();
              onChanged();
            } else {
              dasharrayTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          public Builder mergeDasharrayTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (dasharrayTransitionBuilder_ == null) {
              if (dasharrayTransition_ != null) {
                dasharrayTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(dasharrayTransition_).mergeFrom(value).buildPartial();
              } else {
                dasharrayTransition_ = value;
              }
              onChanged();
            } else {
              dasharrayTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          public Builder clearDasharrayTransition() {
            if (dasharrayTransitionBuilder_ == null) {
              dasharrayTransition_ = null;
              onChanged();
            } else {
              dasharrayTransition_ = null;
              dasharrayTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getDasharrayTransitionBuilder() {
            
            onChanged();
            return getDasharrayTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getDasharrayTransitionOrBuilder() {
            if (dasharrayTransitionBuilder_ != null) {
              return dasharrayTransitionBuilder_.getMessageOrBuilder();
            } else {
              return dasharrayTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : dasharrayTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions dasharray_transition = 31;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getDasharrayTransitionFieldBuilder() {
            if (dasharrayTransitionBuilder_ == null) {
              dasharrayTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getDasharrayTransition(),
                      getParentForChildren(),
                      isClean());
              dasharrayTransition_ = null;
            }
            return dasharrayTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions patternTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> patternTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          public boolean hasPatternTransition() {
            return patternTransitionBuilder_ != null || patternTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getPatternTransition() {
            if (patternTransitionBuilder_ == null) {
              return patternTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
            } else {
              return patternTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          public Builder setPatternTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (patternTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              patternTransition_ = value;
              onChanged();
            } else {
              patternTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          public Builder setPatternTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = builderForValue.build();
              onChanged();
            } else {
              patternTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          public Builder mergePatternTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (patternTransitionBuilder_ == null) {
              if (patternTransition_ != null) {
                patternTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(patternTransition_).mergeFrom(value).buildPartial();
              } else {
                patternTransition_ = value;
              }
              onChanged();
            } else {
              patternTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          public Builder clearPatternTransition() {
            if (patternTransitionBuilder_ == null) {
              patternTransition_ = null;
              onChanged();
            } else {
              patternTransition_ = null;
              patternTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getPatternTransitionBuilder() {
            
            onChanged();
            return getPatternTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getPatternTransitionOrBuilder() {
            if (patternTransitionBuilder_ != null) {
              return patternTransitionBuilder_.getMessageOrBuilder();
            } else {
              return patternTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : patternTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions pattern_transition = 32;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getPatternTransitionFieldBuilder() {
            if (patternTransitionBuilder_ == null) {
              patternTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getPatternTransition(),
                      getParentForChildren(),
                      isClean());
              patternTransition_ = null;
            }
            return patternTransitionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update.Line)
        }

        // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update.Line)
        private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line();
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Line>
            PARSER = new com.google.protobuf.AbstractParser<Line>() {
          @java.lang.Override
          public Line parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Line(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Line> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Line> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface SymbolOrBuilder extends
          // @@protoc_insertion_point(interface_extends:com.tophap.mapbox_gl.proto.Operations.Update.Symbol)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        boolean hasVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValue getVisible();
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        boolean hasMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValue getMinZoom();
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        boolean hasMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValue getMaxZoom();
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
         */
        int getSymbolPlacementValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement getSymbolPlacement();

        /**
         * <code>bool has_symbol_placement = 5;</code>
         */
        boolean getHasSymbolPlacement();

        /**
         * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
         */
        boolean hasSymbolSpacing();
        /**
         * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
         */
        com.google.protobuf.FloatValue getSymbolSpacing();
        /**
         * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getSymbolSpacingOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
         */
        boolean hasSymbolAvoidEdges();
        /**
         * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
         */
        com.google.protobuf.BoolValue getSymbolAvoidEdges();
        /**
         * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getSymbolAvoidEdgesOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
         */
        int getSymbolZOrderValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder getSymbolZOrder();

        /**
         * <code>bool has_symbol_z_order = 9;</code>
         */
        boolean getHasSymbolZOrder();

        /**
         * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
         */
        boolean hasIconAllowOverlap();
        /**
         * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
         */
        com.google.protobuf.BoolValue getIconAllowOverlap();
        /**
         * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getIconAllowOverlapOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
         */
        boolean hasIconIgnorePlacement();
        /**
         * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
         */
        com.google.protobuf.BoolValue getIconIgnorePlacement();
        /**
         * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getIconIgnorePlacementOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
         */
        boolean hasIconOptional();
        /**
         * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
         */
        com.google.protobuf.BoolValue getIconOptional();
        /**
         * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getIconOptionalOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
         */
        int getIconRotationAlignmentValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getIconRotationAlignment();

        /**
         * <code>bool has_icon_rotation_alignment = 14;</code>
         */
        boolean getHasIconRotationAlignment();

        /**
         * <code>.google.protobuf.FloatValue icon_size = 15;</code>
         */
        boolean hasIconSize();
        /**
         * <code>.google.protobuf.FloatValue icon_size = 15;</code>
         */
        com.google.protobuf.FloatValue getIconSize();
        /**
         * <code>.google.protobuf.FloatValue icon_size = 15;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getIconSizeOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
         */
        int getIconTextFitValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit getIconTextFit();

        /**
         * <code>bool has_icon_text_fit = 17;</code>
         */
        boolean getHasIconTextFit();

        /**
         * <code>repeated float icon_text_fit_padding = 18;</code>
         */
        java.util.List<java.lang.Float> getIconTextFitPaddingList();
        /**
         * <code>repeated float icon_text_fit_padding = 18;</code>
         */
        int getIconTextFitPaddingCount();
        /**
         * <code>repeated float icon_text_fit_padding = 18;</code>
         */
        float getIconTextFitPadding(int index);

        /**
         * <code>bool has_icon_text_fit_padding = 19;</code>
         */
        boolean getHasIconTextFitPadding();

        /**
         * <code>.google.protobuf.StringValue icon_image = 20;</code>
         */
        boolean hasIconImage();
        /**
         * <code>.google.protobuf.StringValue icon_image = 20;</code>
         */
        com.google.protobuf.StringValue getIconImage();
        /**
         * <code>.google.protobuf.StringValue icon_image = 20;</code>
         */
        com.google.protobuf.StringValueOrBuilder getIconImageOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
         */
        boolean hasIconRotate();
        /**
         * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
         */
        com.google.protobuf.FloatValue getIconRotate();
        /**
         * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getIconRotateOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
         */
        boolean hasIconPadding();
        /**
         * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
         */
        com.google.protobuf.FloatValue getIconPadding();
        /**
         * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getIconPaddingOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
         */
        boolean hasIconKeepUpright();
        /**
         * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
         */
        com.google.protobuf.BoolValue getIconKeepUpright();
        /**
         * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getIconKeepUprightOrBuilder();

        /**
         * <code>repeated float icon_offset = 24;</code>
         */
        java.util.List<java.lang.Float> getIconOffsetList();
        /**
         * <code>repeated float icon_offset = 24;</code>
         */
        int getIconOffsetCount();
        /**
         * <code>repeated float icon_offset = 24;</code>
         */
        float getIconOffset(int index);

        /**
         * <code>bool has_icon_offset = 25;</code>
         */
        boolean getHasIconOffset();

        /**
         * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
         */
        int getIconAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getIconAnchor();

        /**
         * <code>bool has_icon_anchor = 27;</code>
         */
        boolean getHasIconAnchor();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
         */
        int getIconPitchAlignmentValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getIconPitchAlignment();

        /**
         * <code>bool has_icon_pitch_alignment = 29;</code>
         */
        boolean getHasIconPitchAlignment();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
         */
        int getTextPitchAlignmentValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getTextPitchAlignment();

        /**
         * <code>bool has_text_pitch_alignment = 31;</code>
         */
        boolean getHasTextPitchAlignment();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
         */
        int getTextRotationAlignmentValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getTextRotationAlignment();

        /**
         * <code>bool has_text_rotation_alignment = 33;</code>
         */
        boolean getHasTextRotationAlignment();

        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection> 
            getTextFieldList();
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection getTextField(int index);
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        int getTextFieldCount();
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        java.util.List<? extends com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder> 
            getTextFieldOrBuilderList();
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder getTextFieldOrBuilder(
            int index);

        /**
         * <code>bool has_text_field = 35;</code>
         */
        boolean getHasTextField();

        /**
         * <code>repeated string text_font = 36;</code>
         */
        java.util.List<java.lang.String>
            getTextFontList();
        /**
         * <code>repeated string text_font = 36;</code>
         */
        int getTextFontCount();
        /**
         * <code>repeated string text_font = 36;</code>
         */
        java.lang.String getTextFont(int index);
        /**
         * <code>repeated string text_font = 36;</code>
         */
        com.google.protobuf.ByteString
            getTextFontBytes(int index);

        /**
         * <code>bool has_text_font = 37;</code>
         */
        boolean getHasTextFont();

        /**
         * <code>.google.protobuf.FloatValue text_size = 38;</code>
         */
        boolean hasTextSize();
        /**
         * <code>.google.protobuf.FloatValue text_size = 38;</code>
         */
        com.google.protobuf.FloatValue getTextSize();
        /**
         * <code>.google.protobuf.FloatValue text_size = 38;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextSizeOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
         */
        boolean hasTextMaxWidth();
        /**
         * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
         */
        com.google.protobuf.FloatValue getTextMaxWidth();
        /**
         * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextMaxWidthOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
         */
        boolean hasTextLineHeight();
        /**
         * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
         */
        com.google.protobuf.FloatValue getTextLineHeight();
        /**
         * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextLineHeightOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
         */
        boolean hasTextLetterSpacing();
        /**
         * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
         */
        com.google.protobuf.FloatValue getTextLetterSpacing();
        /**
         * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextLetterSpacingOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
         */
        int getTextJustifyValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify getTextJustify();

        /**
         * <code>bool has_text_justify = 43;</code>
         */
        boolean getHasTextJustify();

        /**
         * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
         */
        boolean hasTextRadialOffset();
        /**
         * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
         */
        com.google.protobuf.FloatValue getTextRadialOffset();
        /**
         * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextRadialOffsetOrBuilder();

        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor> getTextVariableAnchorList();
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        int getTextVariableAnchorCount();
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getTextVariableAnchor(int index);
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        java.util.List<java.lang.Integer>
        getTextVariableAnchorValueList();
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        int getTextVariableAnchorValue(int index);

        /**
         * <code>bool has_text_variable_anchor = 46;</code>
         */
        boolean getHasTextVariableAnchor();

        /**
         * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
         */
        int getTextAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getTextAnchor();

        /**
         * <code>bool has_text_anchor = 48;</code>
         */
        boolean getHasTextAnchor();

        /**
         * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
         */
        boolean hasTextMaxAngle();
        /**
         * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
         */
        com.google.protobuf.FloatValue getTextMaxAngle();
        /**
         * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextMaxAngleOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
         */
        boolean hasTextRotate();
        /**
         * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
         */
        com.google.protobuf.FloatValue getTextRotate();
        /**
         * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextRotateOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue text_padding = 51;</code>
         */
        boolean hasTextPadding();
        /**
         * <code>.google.protobuf.FloatValue text_padding = 51;</code>
         */
        com.google.protobuf.FloatValue getTextPadding();
        /**
         * <code>.google.protobuf.FloatValue text_padding = 51;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextPaddingOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
         */
        boolean hasTextKeepUpright();
        /**
         * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
         */
        com.google.protobuf.BoolValue getTextKeepUpright();
        /**
         * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getTextKeepUprightOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
         */
        int getTextTransformValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
         */
        com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform getTextTransform();

        /**
         * <code>bool has_text_transform = 54;</code>
         */
        boolean getHasTextTransform();

        /**
         * <code>repeated float text_offset = 55;</code>
         */
        java.util.List<java.lang.Float> getTextOffsetList();
        /**
         * <code>repeated float text_offset = 55;</code>
         */
        int getTextOffsetCount();
        /**
         * <code>repeated float text_offset = 55;</code>
         */
        float getTextOffset(int index);

        /**
         * <code>bool has_text_offset = 56;</code>
         */
        boolean getHasTextOffset();

        /**
         * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
         */
        boolean hasTextAllowOverlap();
        /**
         * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
         */
        com.google.protobuf.BoolValue getTextAllowOverlap();
        /**
         * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getTextAllowOverlapOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
         */
        boolean hasTextIgnorePlacement();
        /**
         * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
         */
        com.google.protobuf.BoolValue getTextIgnorePlacement();
        /**
         * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getTextIgnorePlacementOrBuilder();

        /**
         * <code>.google.protobuf.BoolValue text_optional = 59;</code>
         */
        boolean hasTextOptional();
        /**
         * <code>.google.protobuf.BoolValue text_optional = 59;</code>
         */
        com.google.protobuf.BoolValue getTextOptional();
        /**
         * <code>.google.protobuf.BoolValue text_optional = 59;</code>
         */
        com.google.protobuf.BoolValueOrBuilder getTextOptionalOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
         */
        boolean hasIconOpacity();
        /**
         * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
         */
        com.google.protobuf.FloatValue getIconOpacity();
        /**
         * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getIconOpacityOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value icon_color = 61;</code>
         */
        boolean hasIconColor();
        /**
         * <code>.google.protobuf.Int32Value icon_color = 61;</code>
         */
        com.google.protobuf.Int32Value getIconColor();
        /**
         * <code>.google.protobuf.Int32Value icon_color = 61;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getIconColorOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
         */
        boolean hasIconHaloColor();
        /**
         * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
         */
        com.google.protobuf.Int32Value getIconHaloColor();
        /**
         * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getIconHaloColorOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
         */
        boolean hasIconHaloWidth();
        /**
         * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
         */
        com.google.protobuf.FloatValue getIconHaloWidth();
        /**
         * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getIconHaloWidthOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
         */
        boolean hasIconHaloBlur();
        /**
         * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
         */
        com.google.protobuf.FloatValue getIconHaloBlur();
        /**
         * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getIconHaloBlurOrBuilder();

        /**
         * <code>repeated float icon_translate = 65;</code>
         */
        java.util.List<java.lang.Float> getIconTranslateList();
        /**
         * <code>repeated float icon_translate = 65;</code>
         */
        int getIconTranslateCount();
        /**
         * <code>repeated float icon_translate = 65;</code>
         */
        float getIconTranslate(int index);

        /**
         * <code>bool has_icon_translate = 66;</code>
         */
        boolean getHasIconTranslate();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
         */
        int getIconTranslateAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getIconTranslateAnchor();

        /**
         * <code>bool has_icon_translate_anchor = 68;</code>
         */
        boolean getHasIconTranslateAnchor();

        /**
         * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
         */
        boolean hasTextOpacity();
        /**
         * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
         */
        com.google.protobuf.FloatValue getTextOpacity();
        /**
         * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextOpacityOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value text_color = 70;</code>
         */
        boolean hasTextColor();
        /**
         * <code>.google.protobuf.Int32Value text_color = 70;</code>
         */
        com.google.protobuf.Int32Value getTextColor();
        /**
         * <code>.google.protobuf.Int32Value text_color = 70;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getTextColorOrBuilder();

        /**
         * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
         */
        boolean hasTextHaloColor();
        /**
         * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
         */
        com.google.protobuf.Int32Value getTextHaloColor();
        /**
         * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
         */
        com.google.protobuf.Int32ValueOrBuilder getTextHaloColorOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
         */
        boolean hasTextHaloWidth();
        /**
         * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
         */
        com.google.protobuf.FloatValue getTextHaloWidth();
        /**
         * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextHaloWidthOrBuilder();

        /**
         * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
         */
        boolean hasTextHaloBlur();
        /**
         * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
         */
        com.google.protobuf.FloatValue getTextHaloBlur();
        /**
         * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
         */
        com.google.protobuf.FloatValueOrBuilder getTextHaloBlurOrBuilder();

        /**
         * <code>repeated float text_translate = 74;</code>
         */
        java.util.List<java.lang.Float> getTextTranslateList();
        /**
         * <code>repeated float text_translate = 74;</code>
         */
        int getTextTranslateCount();
        /**
         * <code>repeated float text_translate = 74;</code>
         */
        float getTextTranslate(int index);

        /**
         * <code>bool has_text_translate = 75;</code>
         */
        boolean getHasTextTranslate();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
         */
        int getTextTranslateAnchorValue();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTextTranslateAnchor();

        /**
         * <code>bool has_text_translate_anchor = 77;</code>
         */
        boolean getHasTextTranslateAnchor();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
         */
        boolean hasIconOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconOpacityTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
         */
        boolean hasIconColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
         */
        boolean hasIconHaloColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
         */
        boolean hasIconHaloWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloWidthTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
         */
        boolean hasIconHaloBlurTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloBlurTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloBlurTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
         */
        boolean hasIconTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconTranslateTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
         */
        boolean hasTextOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextOpacityTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextOpacityTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
         */
        boolean hasTextColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
         */
        boolean hasTextHaloColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloColorTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloColorTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
         */
        boolean hasTextHaloWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloWidthTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloWidthTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
         */
        boolean hasTextHaloBlurTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloBlurTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloBlurTransitionOrBuilder();

        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
         */
        boolean hasTextTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextTranslateTransition();
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
         */
        com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextTranslateTransitionOrBuilder();
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Symbol}
       */
      public  static final class Symbol extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:com.tophap.mapbox_gl.proto.Operations.Update.Symbol)
          SymbolOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Symbol.newBuilder() to construct.
        private Symbol(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Symbol() {
          symbolPlacement_ = 0;
          symbolZOrder_ = 0;
          iconRotationAlignment_ = 0;
          iconTextFit_ = 0;
          iconTextFitPadding_ = emptyFloatList();
          iconOffset_ = emptyFloatList();
          iconAnchor_ = 0;
          iconPitchAlignment_ = 0;
          textPitchAlignment_ = 0;
          textRotationAlignment_ = 0;
          textField_ = java.util.Collections.emptyList();
          textFont_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          textJustify_ = 0;
          textVariableAnchor_ = java.util.Collections.emptyList();
          textAnchor_ = 0;
          textTransform_ = 0;
          textOffset_ = emptyFloatList();
          iconTranslate_ = emptyFloatList();
          iconTranslateAnchor_ = 0;
          textTranslate_ = emptyFloatList();
          textTranslateAnchor_ = 0;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Symbol(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          int mutable_bitField1_ = 0;
          int mutable_bitField2_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (visible_ != null) {
                    subBuilder = visible_.toBuilder();
                  }
                  visible_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(visible_);
                    visible_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (minZoom_ != null) {
                    subBuilder = minZoom_.toBuilder();
                  }
                  minZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(minZoom_);
                    minZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 26: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (maxZoom_ != null) {
                    subBuilder = maxZoom_.toBuilder();
                  }
                  maxZoom_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(maxZoom_);
                    maxZoom_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 32: {
                  int rawValue = input.readEnum();

                  symbolPlacement_ = rawValue;
                  break;
                }
                case 40: {

                  hasSymbolPlacement_ = input.readBool();
                  break;
                }
                case 50: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (symbolSpacing_ != null) {
                    subBuilder = symbolSpacing_.toBuilder();
                  }
                  symbolSpacing_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(symbolSpacing_);
                    symbolSpacing_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 58: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (symbolAvoidEdges_ != null) {
                    subBuilder = symbolAvoidEdges_.toBuilder();
                  }
                  symbolAvoidEdges_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(symbolAvoidEdges_);
                    symbolAvoidEdges_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 64: {
                  int rawValue = input.readEnum();

                  symbolZOrder_ = rawValue;
                  break;
                }
                case 72: {

                  hasSymbolZOrder_ = input.readBool();
                  break;
                }
                case 82: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (iconAllowOverlap_ != null) {
                    subBuilder = iconAllowOverlap_.toBuilder();
                  }
                  iconAllowOverlap_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconAllowOverlap_);
                    iconAllowOverlap_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 90: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (iconIgnorePlacement_ != null) {
                    subBuilder = iconIgnorePlacement_.toBuilder();
                  }
                  iconIgnorePlacement_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconIgnorePlacement_);
                    iconIgnorePlacement_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 98: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (iconOptional_ != null) {
                    subBuilder = iconOptional_.toBuilder();
                  }
                  iconOptional_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconOptional_);
                    iconOptional_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 104: {
                  int rawValue = input.readEnum();

                  iconRotationAlignment_ = rawValue;
                  break;
                }
                case 112: {

                  hasIconRotationAlignment_ = input.readBool();
                  break;
                }
                case 122: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (iconSize_ != null) {
                    subBuilder = iconSize_.toBuilder();
                  }
                  iconSize_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconSize_);
                    iconSize_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 128: {
                  int rawValue = input.readEnum();

                  iconTextFit_ = rawValue;
                  break;
                }
                case 136: {

                  hasIconTextFit_ = input.readBool();
                  break;
                }
                case 149: {
                  if (!((mutable_bitField0_ & 0x00020000) != 0)) {
                    iconTextFitPadding_ = newFloatList();
                    mutable_bitField0_ |= 0x00020000;
                  }
                  iconTextFitPadding_.addFloat(input.readFloat());
                  break;
                }
                case 146: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00020000) != 0) && input.getBytesUntilLimit() > 0) {
                    iconTextFitPadding_ = newFloatList();
                    mutable_bitField0_ |= 0x00020000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    iconTextFitPadding_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 152: {

                  hasIconTextFitPadding_ = input.readBool();
                  break;
                }
                case 162: {
                  com.google.protobuf.StringValue.Builder subBuilder = null;
                  if (iconImage_ != null) {
                    subBuilder = iconImage_.toBuilder();
                  }
                  iconImage_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconImage_);
                    iconImage_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 170: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (iconRotate_ != null) {
                    subBuilder = iconRotate_.toBuilder();
                  }
                  iconRotate_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconRotate_);
                    iconRotate_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 178: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (iconPadding_ != null) {
                    subBuilder = iconPadding_.toBuilder();
                  }
                  iconPadding_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconPadding_);
                    iconPadding_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 186: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (iconKeepUpright_ != null) {
                    subBuilder = iconKeepUpright_.toBuilder();
                  }
                  iconKeepUpright_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconKeepUpright_);
                    iconKeepUpright_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 197: {
                  if (!((mutable_bitField0_ & 0x00800000) != 0)) {
                    iconOffset_ = newFloatList();
                    mutable_bitField0_ |= 0x00800000;
                  }
                  iconOffset_.addFloat(input.readFloat());
                  break;
                }
                case 194: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField0_ & 0x00800000) != 0) && input.getBytesUntilLimit() > 0) {
                    iconOffset_ = newFloatList();
                    mutable_bitField0_ |= 0x00800000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    iconOffset_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 200: {

                  hasIconOffset_ = input.readBool();
                  break;
                }
                case 208: {
                  int rawValue = input.readEnum();

                  iconAnchor_ = rawValue;
                  break;
                }
                case 216: {

                  hasIconAnchor_ = input.readBool();
                  break;
                }
                case 224: {
                  int rawValue = input.readEnum();

                  iconPitchAlignment_ = rawValue;
                  break;
                }
                case 232: {

                  hasIconPitchAlignment_ = input.readBool();
                  break;
                }
                case 240: {
                  int rawValue = input.readEnum();

                  textPitchAlignment_ = rawValue;
                  break;
                }
                case 248: {

                  hasTextPitchAlignment_ = input.readBool();
                  break;
                }
                case 256: {
                  int rawValue = input.readEnum();

                  textRotationAlignment_ = rawValue;
                  break;
                }
                case 264: {

                  hasTextRotationAlignment_ = input.readBool();
                  break;
                }
                case 274: {
                  if (!((mutable_bitField1_ & 0x00000002) != 0)) {
                    textField_ = new java.util.ArrayList<com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection>();
                    mutable_bitField1_ |= 0x00000002;
                  }
                  textField_.add(
                      input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.parser(), extensionRegistry));
                  break;
                }
                case 280: {

                  hasTextField_ = input.readBool();
                  break;
                }
                case 290: {
                  java.lang.String s = input.readStringRequireUtf8();
                  if (!((mutable_bitField1_ & 0x00000008) != 0)) {
                    textFont_ = new com.google.protobuf.LazyStringArrayList();
                    mutable_bitField1_ |= 0x00000008;
                  }
                  textFont_.add(s);
                  break;
                }
                case 296: {

                  hasTextFont_ = input.readBool();
                  break;
                }
                case 306: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textSize_ != null) {
                    subBuilder = textSize_.toBuilder();
                  }
                  textSize_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textSize_);
                    textSize_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 314: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textMaxWidth_ != null) {
                    subBuilder = textMaxWidth_.toBuilder();
                  }
                  textMaxWidth_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textMaxWidth_);
                    textMaxWidth_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 322: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textLineHeight_ != null) {
                    subBuilder = textLineHeight_.toBuilder();
                  }
                  textLineHeight_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textLineHeight_);
                    textLineHeight_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 330: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textLetterSpacing_ != null) {
                    subBuilder = textLetterSpacing_.toBuilder();
                  }
                  textLetterSpacing_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textLetterSpacing_);
                    textLetterSpacing_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 336: {
                  int rawValue = input.readEnum();

                  textJustify_ = rawValue;
                  break;
                }
                case 344: {

                  hasTextJustify_ = input.readBool();
                  break;
                }
                case 354: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textRadialOffset_ != null) {
                    subBuilder = textRadialOffset_.toBuilder();
                  }
                  textRadialOffset_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textRadialOffset_);
                    textRadialOffset_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 360: {
                  int rawValue = input.readEnum();
                  if (!((mutable_bitField1_ & 0x00001000) != 0)) {
                    textVariableAnchor_ = new java.util.ArrayList<java.lang.Integer>();
                    mutable_bitField1_ |= 0x00001000;
                  }
                  textVariableAnchor_.add(rawValue);
                  break;
                }
                case 362: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int rawValue = input.readEnum();
                    if (!((mutable_bitField1_ & 0x00001000) != 0)) {
                      textVariableAnchor_ = new java.util.ArrayList<java.lang.Integer>();
                      mutable_bitField1_ |= 0x00001000;
                    }
                    textVariableAnchor_.add(rawValue);
                  }
                  input.popLimit(oldLimit);
                  break;
                }
                case 368: {

                  hasTextVariableAnchor_ = input.readBool();
                  break;
                }
                case 376: {
                  int rawValue = input.readEnum();

                  textAnchor_ = rawValue;
                  break;
                }
                case 384: {

                  hasTextAnchor_ = input.readBool();
                  break;
                }
                case 394: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textMaxAngle_ != null) {
                    subBuilder = textMaxAngle_.toBuilder();
                  }
                  textMaxAngle_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textMaxAngle_);
                    textMaxAngle_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 402: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textRotate_ != null) {
                    subBuilder = textRotate_.toBuilder();
                  }
                  textRotate_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textRotate_);
                    textRotate_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 410: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textPadding_ != null) {
                    subBuilder = textPadding_.toBuilder();
                  }
                  textPadding_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textPadding_);
                    textPadding_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 418: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (textKeepUpright_ != null) {
                    subBuilder = textKeepUpright_.toBuilder();
                  }
                  textKeepUpright_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textKeepUpright_);
                    textKeepUpright_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 424: {
                  int rawValue = input.readEnum();

                  textTransform_ = rawValue;
                  break;
                }
                case 432: {

                  hasTextTransform_ = input.readBool();
                  break;
                }
                case 445: {
                  if (!((mutable_bitField1_ & 0x00400000) != 0)) {
                    textOffset_ = newFloatList();
                    mutable_bitField1_ |= 0x00400000;
                  }
                  textOffset_.addFloat(input.readFloat());
                  break;
                }
                case 442: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField1_ & 0x00400000) != 0) && input.getBytesUntilLimit() > 0) {
                    textOffset_ = newFloatList();
                    mutable_bitField1_ |= 0x00400000;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    textOffset_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 448: {

                  hasTextOffset_ = input.readBool();
                  break;
                }
                case 458: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (textAllowOverlap_ != null) {
                    subBuilder = textAllowOverlap_.toBuilder();
                  }
                  textAllowOverlap_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textAllowOverlap_);
                    textAllowOverlap_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 466: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (textIgnorePlacement_ != null) {
                    subBuilder = textIgnorePlacement_.toBuilder();
                  }
                  textIgnorePlacement_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textIgnorePlacement_);
                    textIgnorePlacement_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 474: {
                  com.google.protobuf.BoolValue.Builder subBuilder = null;
                  if (textOptional_ != null) {
                    subBuilder = textOptional_.toBuilder();
                  }
                  textOptional_ = input.readMessage(com.google.protobuf.BoolValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textOptional_);
                    textOptional_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 482: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (iconOpacity_ != null) {
                    subBuilder = iconOpacity_.toBuilder();
                  }
                  iconOpacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconOpacity_);
                    iconOpacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 490: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (iconColor_ != null) {
                    subBuilder = iconColor_.toBuilder();
                  }
                  iconColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconColor_);
                    iconColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 498: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (iconHaloColor_ != null) {
                    subBuilder = iconHaloColor_.toBuilder();
                  }
                  iconHaloColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconHaloColor_);
                    iconHaloColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 506: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (iconHaloWidth_ != null) {
                    subBuilder = iconHaloWidth_.toBuilder();
                  }
                  iconHaloWidth_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconHaloWidth_);
                    iconHaloWidth_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 514: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (iconHaloBlur_ != null) {
                    subBuilder = iconHaloBlur_.toBuilder();
                  }
                  iconHaloBlur_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconHaloBlur_);
                    iconHaloBlur_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 525: {
                  if (!((mutable_bitField2_ & 0x00000001) != 0)) {
                    iconTranslate_ = newFloatList();
                    mutable_bitField2_ |= 0x00000001;
                  }
                  iconTranslate_.addFloat(input.readFloat());
                  break;
                }
                case 522: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField2_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                    iconTranslate_ = newFloatList();
                    mutable_bitField2_ |= 0x00000001;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    iconTranslate_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 528: {

                  hasIconTranslate_ = input.readBool();
                  break;
                }
                case 536: {
                  int rawValue = input.readEnum();

                  iconTranslateAnchor_ = rawValue;
                  break;
                }
                case 544: {

                  hasIconTranslateAnchor_ = input.readBool();
                  break;
                }
                case 554: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textOpacity_ != null) {
                    subBuilder = textOpacity_.toBuilder();
                  }
                  textOpacity_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textOpacity_);
                    textOpacity_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 562: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (textColor_ != null) {
                    subBuilder = textColor_.toBuilder();
                  }
                  textColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textColor_);
                    textColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 570: {
                  com.google.protobuf.Int32Value.Builder subBuilder = null;
                  if (textHaloColor_ != null) {
                    subBuilder = textHaloColor_.toBuilder();
                  }
                  textHaloColor_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textHaloColor_);
                    textHaloColor_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 578: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textHaloWidth_ != null) {
                    subBuilder = textHaloWidth_.toBuilder();
                  }
                  textHaloWidth_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textHaloWidth_);
                    textHaloWidth_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 586: {
                  com.google.protobuf.FloatValue.Builder subBuilder = null;
                  if (textHaloBlur_ != null) {
                    subBuilder = textHaloBlur_.toBuilder();
                  }
                  textHaloBlur_ = input.readMessage(com.google.protobuf.FloatValue.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textHaloBlur_);
                    textHaloBlur_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 597: {
                  if (!((mutable_bitField2_ & 0x00000200) != 0)) {
                    textTranslate_ = newFloatList();
                    mutable_bitField2_ |= 0x00000200;
                  }
                  textTranslate_.addFloat(input.readFloat());
                  break;
                }
                case 594: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  if (!((mutable_bitField2_ & 0x00000200) != 0) && input.getBytesUntilLimit() > 0) {
                    textTranslate_ = newFloatList();
                    mutable_bitField2_ |= 0x00000200;
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    textTranslate_.addFloat(input.readFloat());
                  }
                  input.popLimit(limit);
                  break;
                }
                case 600: {

                  hasTextTranslate_ = input.readBool();
                  break;
                }
                case 608: {
                  int rawValue = input.readEnum();

                  textTranslateAnchor_ = rawValue;
                  break;
                }
                case 616: {

                  hasTextTranslateAnchor_ = input.readBool();
                  break;
                }
                case 626: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (iconOpacityTransition_ != null) {
                    subBuilder = iconOpacityTransition_.toBuilder();
                  }
                  iconOpacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconOpacityTransition_);
                    iconOpacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 634: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (iconColorTransition_ != null) {
                    subBuilder = iconColorTransition_.toBuilder();
                  }
                  iconColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconColorTransition_);
                    iconColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 642: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (iconHaloColorTransition_ != null) {
                    subBuilder = iconHaloColorTransition_.toBuilder();
                  }
                  iconHaloColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconHaloColorTransition_);
                    iconHaloColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 650: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (iconHaloWidthTransition_ != null) {
                    subBuilder = iconHaloWidthTransition_.toBuilder();
                  }
                  iconHaloWidthTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconHaloWidthTransition_);
                    iconHaloWidthTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 658: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (iconHaloBlurTransition_ != null) {
                    subBuilder = iconHaloBlurTransition_.toBuilder();
                  }
                  iconHaloBlurTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconHaloBlurTransition_);
                    iconHaloBlurTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 666: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (iconTranslateTransition_ != null) {
                    subBuilder = iconTranslateTransition_.toBuilder();
                  }
                  iconTranslateTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(iconTranslateTransition_);
                    iconTranslateTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 674: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (textOpacityTransition_ != null) {
                    subBuilder = textOpacityTransition_.toBuilder();
                  }
                  textOpacityTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textOpacityTransition_);
                    textOpacityTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 682: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (textColorTransition_ != null) {
                    subBuilder = textColorTransition_.toBuilder();
                  }
                  textColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textColorTransition_);
                    textColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 690: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (textHaloColorTransition_ != null) {
                    subBuilder = textHaloColorTransition_.toBuilder();
                  }
                  textHaloColorTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textHaloColorTransition_);
                    textHaloColorTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 698: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (textHaloWidthTransition_ != null) {
                    subBuilder = textHaloWidthTransition_.toBuilder();
                  }
                  textHaloWidthTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textHaloWidthTransition_);
                    textHaloWidthTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 706: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (textHaloBlurTransition_ != null) {
                    subBuilder = textHaloBlurTransition_.toBuilder();
                  }
                  textHaloBlurTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textHaloBlurTransition_);
                    textHaloBlurTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 714: {
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder subBuilder = null;
                  if (textTranslateTransition_ != null) {
                    subBuilder = textTranslateTransition_.toBuilder();
                  }
                  textTranslateTransition_ = input.readMessage(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(textTranslateTransition_);
                    textTranslateTransition_ = subBuilder.buildPartial();
                  }

                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00020000) != 0)) {
              iconTextFitPadding_.makeImmutable(); // C
            }
            if (((mutable_bitField0_ & 0x00800000) != 0)) {
              iconOffset_.makeImmutable(); // C
            }
            if (((mutable_bitField1_ & 0x00000002) != 0)) {
              textField_ = java.util.Collections.unmodifiableList(textField_);
            }
            if (((mutable_bitField1_ & 0x00000008) != 0)) {
              textFont_ = textFont_.getUnmodifiableView();
            }
            if (((mutable_bitField1_ & 0x00001000) != 0)) {
              textVariableAnchor_ = java.util.Collections.unmodifiableList(textVariableAnchor_);
            }
            if (((mutable_bitField1_ & 0x00400000) != 0)) {
              textOffset_.makeImmutable(); // C
            }
            if (((mutable_bitField2_ & 0x00000001) != 0)) {
              iconTranslate_.makeImmutable(); // C
            }
            if (((mutable_bitField2_ & 0x00000200) != 0)) {
              textTranslate_.makeImmutable(); // C
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.Builder.class);
        }

        private int bitField0_;
        private int bitField1_;
        private int bitField2_;
        public static final int VISIBLE_FIELD_NUMBER = 1;
        private com.google.protobuf.BoolValue visible_;
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public boolean hasVisible() {
          return visible_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValue getVisible() {
          return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
        }
        /**
         * <code>.google.protobuf.BoolValue visible = 1;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
          return getVisible();
        }

        public static final int MIN_ZOOM_FIELD_NUMBER = 2;
        private com.google.protobuf.FloatValue minZoom_;
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public boolean hasMinZoom() {
          return minZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValue getMinZoom() {
          return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
          return getMinZoom();
        }

        public static final int MAX_ZOOM_FIELD_NUMBER = 3;
        private com.google.protobuf.FloatValue maxZoom_;
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public boolean hasMaxZoom() {
          return maxZoom_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValue getMaxZoom() {
          return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
        }
        /**
         * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
          return getMaxZoom();
        }

        public static final int SYMBOL_PLACEMENT_FIELD_NUMBER = 4;
        private int symbolPlacement_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
         */
        public int getSymbolPlacementValue() {
          return symbolPlacement_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement getSymbolPlacement() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement.valueOf(symbolPlacement_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement.UNRECOGNIZED : result;
        }

        public static final int HAS_SYMBOL_PLACEMENT_FIELD_NUMBER = 5;
        private boolean hasSymbolPlacement_;
        /**
         * <code>bool has_symbol_placement = 5;</code>
         */
        public boolean getHasSymbolPlacement() {
          return hasSymbolPlacement_;
        }

        public static final int SYMBOL_SPACING_FIELD_NUMBER = 6;
        private com.google.protobuf.FloatValue symbolSpacing_;
        /**
         * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
         */
        public boolean hasSymbolSpacing() {
          return symbolSpacing_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
         */
        public com.google.protobuf.FloatValue getSymbolSpacing() {
          return symbolSpacing_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : symbolSpacing_;
        }
        /**
         * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getSymbolSpacingOrBuilder() {
          return getSymbolSpacing();
        }

        public static final int SYMBOL_AVOID_EDGES_FIELD_NUMBER = 7;
        private com.google.protobuf.BoolValue symbolAvoidEdges_;
        /**
         * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
         */
        public boolean hasSymbolAvoidEdges() {
          return symbolAvoidEdges_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
         */
        public com.google.protobuf.BoolValue getSymbolAvoidEdges() {
          return symbolAvoidEdges_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : symbolAvoidEdges_;
        }
        /**
         * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getSymbolAvoidEdgesOrBuilder() {
          return getSymbolAvoidEdges();
        }

        public static final int SYMBOL_Z_ORDER_FIELD_NUMBER = 8;
        private int symbolZOrder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
         */
        public int getSymbolZOrderValue() {
          return symbolZOrder_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder getSymbolZOrder() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder.valueOf(symbolZOrder_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder.UNRECOGNIZED : result;
        }

        public static final int HAS_SYMBOL_Z_ORDER_FIELD_NUMBER = 9;
        private boolean hasSymbolZOrder_;
        /**
         * <code>bool has_symbol_z_order = 9;</code>
         */
        public boolean getHasSymbolZOrder() {
          return hasSymbolZOrder_;
        }

        public static final int ICON_ALLOW_OVERLAP_FIELD_NUMBER = 10;
        private com.google.protobuf.BoolValue iconAllowOverlap_;
        /**
         * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
         */
        public boolean hasIconAllowOverlap() {
          return iconAllowOverlap_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
         */
        public com.google.protobuf.BoolValue getIconAllowOverlap() {
          return iconAllowOverlap_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : iconAllowOverlap_;
        }
        /**
         * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getIconAllowOverlapOrBuilder() {
          return getIconAllowOverlap();
        }

        public static final int ICON_IGNORE_PLACEMENT_FIELD_NUMBER = 11;
        private com.google.protobuf.BoolValue iconIgnorePlacement_;
        /**
         * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
         */
        public boolean hasIconIgnorePlacement() {
          return iconIgnorePlacement_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
         */
        public com.google.protobuf.BoolValue getIconIgnorePlacement() {
          return iconIgnorePlacement_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : iconIgnorePlacement_;
        }
        /**
         * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getIconIgnorePlacementOrBuilder() {
          return getIconIgnorePlacement();
        }

        public static final int ICON_OPTIONAL_FIELD_NUMBER = 12;
        private com.google.protobuf.BoolValue iconOptional_;
        /**
         * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
         */
        public boolean hasIconOptional() {
          return iconOptional_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
         */
        public com.google.protobuf.BoolValue getIconOptional() {
          return iconOptional_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : iconOptional_;
        }
        /**
         * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getIconOptionalOrBuilder() {
          return getIconOptional();
        }

        public static final int ICON_ROTATION_ALIGNMENT_FIELD_NUMBER = 13;
        private int iconRotationAlignment_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
         */
        public int getIconRotationAlignmentValue() {
          return iconRotationAlignment_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getIconRotationAlignment() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.valueOf(iconRotationAlignment_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.UNRECOGNIZED : result;
        }

        public static final int HAS_ICON_ROTATION_ALIGNMENT_FIELD_NUMBER = 14;
        private boolean hasIconRotationAlignment_;
        /**
         * <code>bool has_icon_rotation_alignment = 14;</code>
         */
        public boolean getHasIconRotationAlignment() {
          return hasIconRotationAlignment_;
        }

        public static final int ICON_SIZE_FIELD_NUMBER = 15;
        private com.google.protobuf.FloatValue iconSize_;
        /**
         * <code>.google.protobuf.FloatValue icon_size = 15;</code>
         */
        public boolean hasIconSize() {
          return iconSize_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_size = 15;</code>
         */
        public com.google.protobuf.FloatValue getIconSize() {
          return iconSize_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconSize_;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_size = 15;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getIconSizeOrBuilder() {
          return getIconSize();
        }

        public static final int ICON_TEXT_FIT_FIELD_NUMBER = 16;
        private int iconTextFit_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
         */
        public int getIconTextFitValue() {
          return iconTextFit_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit getIconTextFit() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit.valueOf(iconTextFit_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit.UNRECOGNIZED : result;
        }

        public static final int HAS_ICON_TEXT_FIT_FIELD_NUMBER = 17;
        private boolean hasIconTextFit_;
        /**
         * <code>bool has_icon_text_fit = 17;</code>
         */
        public boolean getHasIconTextFit() {
          return hasIconTextFit_;
        }

        public static final int ICON_TEXT_FIT_PADDING_FIELD_NUMBER = 18;
        private com.google.protobuf.Internal.FloatList iconTextFitPadding_;
        /**
         * <code>repeated float icon_text_fit_padding = 18;</code>
         */
        public java.util.List<java.lang.Float>
            getIconTextFitPaddingList() {
          return iconTextFitPadding_;
        }
        /**
         * <code>repeated float icon_text_fit_padding = 18;</code>
         */
        public int getIconTextFitPaddingCount() {
          return iconTextFitPadding_.size();
        }
        /**
         * <code>repeated float icon_text_fit_padding = 18;</code>
         */
        public float getIconTextFitPadding(int index) {
          return iconTextFitPadding_.getFloat(index);
        }
        private int iconTextFitPaddingMemoizedSerializedSize = -1;

        public static final int HAS_ICON_TEXT_FIT_PADDING_FIELD_NUMBER = 19;
        private boolean hasIconTextFitPadding_;
        /**
         * <code>bool has_icon_text_fit_padding = 19;</code>
         */
        public boolean getHasIconTextFitPadding() {
          return hasIconTextFitPadding_;
        }

        public static final int ICON_IMAGE_FIELD_NUMBER = 20;
        private com.google.protobuf.StringValue iconImage_;
        /**
         * <code>.google.protobuf.StringValue icon_image = 20;</code>
         */
        public boolean hasIconImage() {
          return iconImage_ != null;
        }
        /**
         * <code>.google.protobuf.StringValue icon_image = 20;</code>
         */
        public com.google.protobuf.StringValue getIconImage() {
          return iconImage_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : iconImage_;
        }
        /**
         * <code>.google.protobuf.StringValue icon_image = 20;</code>
         */
        public com.google.protobuf.StringValueOrBuilder getIconImageOrBuilder() {
          return getIconImage();
        }

        public static final int ICON_ROTATE_FIELD_NUMBER = 21;
        private com.google.protobuf.FloatValue iconRotate_;
        /**
         * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
         */
        public boolean hasIconRotate() {
          return iconRotate_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
         */
        public com.google.protobuf.FloatValue getIconRotate() {
          return iconRotate_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconRotate_;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getIconRotateOrBuilder() {
          return getIconRotate();
        }

        public static final int ICON_PADDING_FIELD_NUMBER = 22;
        private com.google.protobuf.FloatValue iconPadding_;
        /**
         * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
         */
        public boolean hasIconPadding() {
          return iconPadding_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
         */
        public com.google.protobuf.FloatValue getIconPadding() {
          return iconPadding_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconPadding_;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getIconPaddingOrBuilder() {
          return getIconPadding();
        }

        public static final int ICON_KEEP_UPRIGHT_FIELD_NUMBER = 23;
        private com.google.protobuf.BoolValue iconKeepUpright_;
        /**
         * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
         */
        public boolean hasIconKeepUpright() {
          return iconKeepUpright_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
         */
        public com.google.protobuf.BoolValue getIconKeepUpright() {
          return iconKeepUpright_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : iconKeepUpright_;
        }
        /**
         * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getIconKeepUprightOrBuilder() {
          return getIconKeepUpright();
        }

        public static final int ICON_OFFSET_FIELD_NUMBER = 24;
        private com.google.protobuf.Internal.FloatList iconOffset_;
        /**
         * <code>repeated float icon_offset = 24;</code>
         */
        public java.util.List<java.lang.Float>
            getIconOffsetList() {
          return iconOffset_;
        }
        /**
         * <code>repeated float icon_offset = 24;</code>
         */
        public int getIconOffsetCount() {
          return iconOffset_.size();
        }
        /**
         * <code>repeated float icon_offset = 24;</code>
         */
        public float getIconOffset(int index) {
          return iconOffset_.getFloat(index);
        }
        private int iconOffsetMemoizedSerializedSize = -1;

        public static final int HAS_ICON_OFFSET_FIELD_NUMBER = 25;
        private boolean hasIconOffset_;
        /**
         * <code>bool has_icon_offset = 25;</code>
         */
        public boolean getHasIconOffset() {
          return hasIconOffset_;
        }

        public static final int ICON_ANCHOR_FIELD_NUMBER = 26;
        private int iconAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
         */
        public int getIconAnchorValue() {
          return iconAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getIconAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.valueOf(iconAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_ICON_ANCHOR_FIELD_NUMBER = 27;
        private boolean hasIconAnchor_;
        /**
         * <code>bool has_icon_anchor = 27;</code>
         */
        public boolean getHasIconAnchor() {
          return hasIconAnchor_;
        }

        public static final int ICON_PITCH_ALIGNMENT_FIELD_NUMBER = 28;
        private int iconPitchAlignment_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
         */
        public int getIconPitchAlignmentValue() {
          return iconPitchAlignment_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getIconPitchAlignment() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.valueOf(iconPitchAlignment_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.UNRECOGNIZED : result;
        }

        public static final int HAS_ICON_PITCH_ALIGNMENT_FIELD_NUMBER = 29;
        private boolean hasIconPitchAlignment_;
        /**
         * <code>bool has_icon_pitch_alignment = 29;</code>
         */
        public boolean getHasIconPitchAlignment() {
          return hasIconPitchAlignment_;
        }

        public static final int TEXT_PITCH_ALIGNMENT_FIELD_NUMBER = 30;
        private int textPitchAlignment_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
         */
        public int getTextPitchAlignmentValue() {
          return textPitchAlignment_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getTextPitchAlignment() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.valueOf(textPitchAlignment_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.UNRECOGNIZED : result;
        }

        public static final int HAS_TEXT_PITCH_ALIGNMENT_FIELD_NUMBER = 31;
        private boolean hasTextPitchAlignment_;
        /**
         * <code>bool has_text_pitch_alignment = 31;</code>
         */
        public boolean getHasTextPitchAlignment() {
          return hasTextPitchAlignment_;
        }

        public static final int TEXT_ROTATION_ALIGNMENT_FIELD_NUMBER = 32;
        private int textRotationAlignment_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
         */
        public int getTextRotationAlignmentValue() {
          return textRotationAlignment_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getTextRotationAlignment() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.valueOf(textRotationAlignment_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.UNRECOGNIZED : result;
        }

        public static final int HAS_TEXT_ROTATION_ALIGNMENT_FIELD_NUMBER = 33;
        private boolean hasTextRotationAlignment_;
        /**
         * <code>bool has_text_rotation_alignment = 33;</code>
         */
        public boolean getHasTextRotationAlignment() {
          return hasTextRotationAlignment_;
        }

        public static final int TEXT_FIELD_FIELD_NUMBER = 34;
        private java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection> textField_;
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        public java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection> getTextFieldList() {
          return textField_;
        }
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        public java.util.List<? extends com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder> 
            getTextFieldOrBuilderList() {
          return textField_;
        }
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        public int getTextFieldCount() {
          return textField_.size();
        }
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection getTextField(int index) {
          return textField_.get(index);
        }
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder getTextFieldOrBuilder(
            int index) {
          return textField_.get(index);
        }

        public static final int HAS_TEXT_FIELD_FIELD_NUMBER = 35;
        private boolean hasTextField_;
        /**
         * <code>bool has_text_field = 35;</code>
         */
        public boolean getHasTextField() {
          return hasTextField_;
        }

        public static final int TEXT_FONT_FIELD_NUMBER = 36;
        private com.google.protobuf.LazyStringList textFont_;
        /**
         * <code>repeated string text_font = 36;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getTextFontList() {
          return textFont_;
        }
        /**
         * <code>repeated string text_font = 36;</code>
         */
        public int getTextFontCount() {
          return textFont_.size();
        }
        /**
         * <code>repeated string text_font = 36;</code>
         */
        public java.lang.String getTextFont(int index) {
          return textFont_.get(index);
        }
        /**
         * <code>repeated string text_font = 36;</code>
         */
        public com.google.protobuf.ByteString
            getTextFontBytes(int index) {
          return textFont_.getByteString(index);
        }

        public static final int HAS_TEXT_FONT_FIELD_NUMBER = 37;
        private boolean hasTextFont_;
        /**
         * <code>bool has_text_font = 37;</code>
         */
        public boolean getHasTextFont() {
          return hasTextFont_;
        }

        public static final int TEXT_SIZE_FIELD_NUMBER = 38;
        private com.google.protobuf.FloatValue textSize_;
        /**
         * <code>.google.protobuf.FloatValue text_size = 38;</code>
         */
        public boolean hasTextSize() {
          return textSize_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_size = 38;</code>
         */
        public com.google.protobuf.FloatValue getTextSize() {
          return textSize_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textSize_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_size = 38;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextSizeOrBuilder() {
          return getTextSize();
        }

        public static final int TEXT_MAX_WIDTH_FIELD_NUMBER = 39;
        private com.google.protobuf.FloatValue textMaxWidth_;
        /**
         * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
         */
        public boolean hasTextMaxWidth() {
          return textMaxWidth_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
         */
        public com.google.protobuf.FloatValue getTextMaxWidth() {
          return textMaxWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textMaxWidth_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextMaxWidthOrBuilder() {
          return getTextMaxWidth();
        }

        public static final int TEXT_LINE_HEIGHT_FIELD_NUMBER = 40;
        private com.google.protobuf.FloatValue textLineHeight_;
        /**
         * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
         */
        public boolean hasTextLineHeight() {
          return textLineHeight_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
         */
        public com.google.protobuf.FloatValue getTextLineHeight() {
          return textLineHeight_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textLineHeight_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextLineHeightOrBuilder() {
          return getTextLineHeight();
        }

        public static final int TEXT_LETTER_SPACING_FIELD_NUMBER = 41;
        private com.google.protobuf.FloatValue textLetterSpacing_;
        /**
         * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
         */
        public boolean hasTextLetterSpacing() {
          return textLetterSpacing_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
         */
        public com.google.protobuf.FloatValue getTextLetterSpacing() {
          return textLetterSpacing_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textLetterSpacing_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextLetterSpacingOrBuilder() {
          return getTextLetterSpacing();
        }

        public static final int TEXT_JUSTIFY_FIELD_NUMBER = 42;
        private int textJustify_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
         */
        public int getTextJustifyValue() {
          return textJustify_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify getTextJustify() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify.valueOf(textJustify_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify.UNRECOGNIZED : result;
        }

        public static final int HAS_TEXT_JUSTIFY_FIELD_NUMBER = 43;
        private boolean hasTextJustify_;
        /**
         * <code>bool has_text_justify = 43;</code>
         */
        public boolean getHasTextJustify() {
          return hasTextJustify_;
        }

        public static final int TEXT_RADIAL_OFFSET_FIELD_NUMBER = 44;
        private com.google.protobuf.FloatValue textRadialOffset_;
        /**
         * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
         */
        public boolean hasTextRadialOffset() {
          return textRadialOffset_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
         */
        public com.google.protobuf.FloatValue getTextRadialOffset() {
          return textRadialOffset_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textRadialOffset_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextRadialOffsetOrBuilder() {
          return getTextRadialOffset();
        }

        public static final int TEXT_VARIABLE_ANCHOR_FIELD_NUMBER = 45;
        private java.util.List<java.lang.Integer> textVariableAnchor_;
        private static final com.google.protobuf.Internal.ListAdapter.Converter<
            java.lang.Integer, com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor> textVariableAnchor_converter_ =
                new com.google.protobuf.Internal.ListAdapter.Converter<
                    java.lang.Integer, com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor>() {
                  public com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor convert(java.lang.Integer from) {
                    @SuppressWarnings("deprecation")
                    com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.valueOf(from);
                    return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.UNRECOGNIZED : result;
                  }
                };
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        public java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor> getTextVariableAnchorList() {
          return new com.google.protobuf.Internal.ListAdapter<
              java.lang.Integer, com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor>(textVariableAnchor_, textVariableAnchor_converter_);
        }
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        public int getTextVariableAnchorCount() {
          return textVariableAnchor_.size();
        }
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getTextVariableAnchor(int index) {
          return textVariableAnchor_converter_.convert(textVariableAnchor_.get(index));
        }
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        public java.util.List<java.lang.Integer>
        getTextVariableAnchorValueList() {
          return textVariableAnchor_;
        }
        /**
         * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
         */
        public int getTextVariableAnchorValue(int index) {
          return textVariableAnchor_.get(index);
        }
        private int textVariableAnchorMemoizedSerializedSize;

        public static final int HAS_TEXT_VARIABLE_ANCHOR_FIELD_NUMBER = 46;
        private boolean hasTextVariableAnchor_;
        /**
         * <code>bool has_text_variable_anchor = 46;</code>
         */
        public boolean getHasTextVariableAnchor() {
          return hasTextVariableAnchor_;
        }

        public static final int TEXT_ANCHOR_FIELD_NUMBER = 47;
        private int textAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
         */
        public int getTextAnchorValue() {
          return textAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getTextAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.valueOf(textAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_TEXT_ANCHOR_FIELD_NUMBER = 48;
        private boolean hasTextAnchor_;
        /**
         * <code>bool has_text_anchor = 48;</code>
         */
        public boolean getHasTextAnchor() {
          return hasTextAnchor_;
        }

        public static final int TEXT_MAX_ANGLE_FIELD_NUMBER = 49;
        private com.google.protobuf.FloatValue textMaxAngle_;
        /**
         * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
         */
        public boolean hasTextMaxAngle() {
          return textMaxAngle_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
         */
        public com.google.protobuf.FloatValue getTextMaxAngle() {
          return textMaxAngle_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textMaxAngle_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextMaxAngleOrBuilder() {
          return getTextMaxAngle();
        }

        public static final int TEXT_ROTATE_FIELD_NUMBER = 50;
        private com.google.protobuf.FloatValue textRotate_;
        /**
         * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
         */
        public boolean hasTextRotate() {
          return textRotate_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
         */
        public com.google.protobuf.FloatValue getTextRotate() {
          return textRotate_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textRotate_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextRotateOrBuilder() {
          return getTextRotate();
        }

        public static final int TEXT_PADDING_FIELD_NUMBER = 51;
        private com.google.protobuf.FloatValue textPadding_;
        /**
         * <code>.google.protobuf.FloatValue text_padding = 51;</code>
         */
        public boolean hasTextPadding() {
          return textPadding_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_padding = 51;</code>
         */
        public com.google.protobuf.FloatValue getTextPadding() {
          return textPadding_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textPadding_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_padding = 51;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextPaddingOrBuilder() {
          return getTextPadding();
        }

        public static final int TEXT_KEEP_UPRIGHT_FIELD_NUMBER = 52;
        private com.google.protobuf.BoolValue textKeepUpright_;
        /**
         * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
         */
        public boolean hasTextKeepUpright() {
          return textKeepUpright_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
         */
        public com.google.protobuf.BoolValue getTextKeepUpright() {
          return textKeepUpright_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textKeepUpright_;
        }
        /**
         * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getTextKeepUprightOrBuilder() {
          return getTextKeepUpright();
        }

        public static final int TEXT_TRANSFORM_FIELD_NUMBER = 53;
        private int textTransform_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
         */
        public int getTextTransformValue() {
          return textTransform_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
         */
        public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform getTextTransform() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform.valueOf(textTransform_);
          return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform.UNRECOGNIZED : result;
        }

        public static final int HAS_TEXT_TRANSFORM_FIELD_NUMBER = 54;
        private boolean hasTextTransform_;
        /**
         * <code>bool has_text_transform = 54;</code>
         */
        public boolean getHasTextTransform() {
          return hasTextTransform_;
        }

        public static final int TEXT_OFFSET_FIELD_NUMBER = 55;
        private com.google.protobuf.Internal.FloatList textOffset_;
        /**
         * <code>repeated float text_offset = 55;</code>
         */
        public java.util.List<java.lang.Float>
            getTextOffsetList() {
          return textOffset_;
        }
        /**
         * <code>repeated float text_offset = 55;</code>
         */
        public int getTextOffsetCount() {
          return textOffset_.size();
        }
        /**
         * <code>repeated float text_offset = 55;</code>
         */
        public float getTextOffset(int index) {
          return textOffset_.getFloat(index);
        }
        private int textOffsetMemoizedSerializedSize = -1;

        public static final int HAS_TEXT_OFFSET_FIELD_NUMBER = 56;
        private boolean hasTextOffset_;
        /**
         * <code>bool has_text_offset = 56;</code>
         */
        public boolean getHasTextOffset() {
          return hasTextOffset_;
        }

        public static final int TEXT_ALLOW_OVERLAP_FIELD_NUMBER = 57;
        private com.google.protobuf.BoolValue textAllowOverlap_;
        /**
         * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
         */
        public boolean hasTextAllowOverlap() {
          return textAllowOverlap_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
         */
        public com.google.protobuf.BoolValue getTextAllowOverlap() {
          return textAllowOverlap_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textAllowOverlap_;
        }
        /**
         * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getTextAllowOverlapOrBuilder() {
          return getTextAllowOverlap();
        }

        public static final int TEXT_IGNORE_PLACEMENT_FIELD_NUMBER = 58;
        private com.google.protobuf.BoolValue textIgnorePlacement_;
        /**
         * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
         */
        public boolean hasTextIgnorePlacement() {
          return textIgnorePlacement_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
         */
        public com.google.protobuf.BoolValue getTextIgnorePlacement() {
          return textIgnorePlacement_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textIgnorePlacement_;
        }
        /**
         * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getTextIgnorePlacementOrBuilder() {
          return getTextIgnorePlacement();
        }

        public static final int TEXT_OPTIONAL_FIELD_NUMBER = 59;
        private com.google.protobuf.BoolValue textOptional_;
        /**
         * <code>.google.protobuf.BoolValue text_optional = 59;</code>
         */
        public boolean hasTextOptional() {
          return textOptional_ != null;
        }
        /**
         * <code>.google.protobuf.BoolValue text_optional = 59;</code>
         */
        public com.google.protobuf.BoolValue getTextOptional() {
          return textOptional_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textOptional_;
        }
        /**
         * <code>.google.protobuf.BoolValue text_optional = 59;</code>
         */
        public com.google.protobuf.BoolValueOrBuilder getTextOptionalOrBuilder() {
          return getTextOptional();
        }

        public static final int ICON_OPACITY_FIELD_NUMBER = 60;
        private com.google.protobuf.FloatValue iconOpacity_;
        /**
         * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
         */
        public boolean hasIconOpacity() {
          return iconOpacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
         */
        public com.google.protobuf.FloatValue getIconOpacity() {
          return iconOpacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconOpacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getIconOpacityOrBuilder() {
          return getIconOpacity();
        }

        public static final int ICON_COLOR_FIELD_NUMBER = 61;
        private com.google.protobuf.Int32Value iconColor_;
        /**
         * <code>.google.protobuf.Int32Value icon_color = 61;</code>
         */
        public boolean hasIconColor() {
          return iconColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value icon_color = 61;</code>
         */
        public com.google.protobuf.Int32Value getIconColor() {
          return iconColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : iconColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value icon_color = 61;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getIconColorOrBuilder() {
          return getIconColor();
        }

        public static final int ICON_HALO_COLOR_FIELD_NUMBER = 62;
        private com.google.protobuf.Int32Value iconHaloColor_;
        /**
         * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
         */
        public boolean hasIconHaloColor() {
          return iconHaloColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
         */
        public com.google.protobuf.Int32Value getIconHaloColor() {
          return iconHaloColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : iconHaloColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getIconHaloColorOrBuilder() {
          return getIconHaloColor();
        }

        public static final int ICON_HALO_WIDTH_FIELD_NUMBER = 63;
        private com.google.protobuf.FloatValue iconHaloWidth_;
        /**
         * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
         */
        public boolean hasIconHaloWidth() {
          return iconHaloWidth_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
         */
        public com.google.protobuf.FloatValue getIconHaloWidth() {
          return iconHaloWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconHaloWidth_;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getIconHaloWidthOrBuilder() {
          return getIconHaloWidth();
        }

        public static final int ICON_HALO_BLUR_FIELD_NUMBER = 64;
        private com.google.protobuf.FloatValue iconHaloBlur_;
        /**
         * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
         */
        public boolean hasIconHaloBlur() {
          return iconHaloBlur_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
         */
        public com.google.protobuf.FloatValue getIconHaloBlur() {
          return iconHaloBlur_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconHaloBlur_;
        }
        /**
         * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getIconHaloBlurOrBuilder() {
          return getIconHaloBlur();
        }

        public static final int ICON_TRANSLATE_FIELD_NUMBER = 65;
        private com.google.protobuf.Internal.FloatList iconTranslate_;
        /**
         * <code>repeated float icon_translate = 65;</code>
         */
        public java.util.List<java.lang.Float>
            getIconTranslateList() {
          return iconTranslate_;
        }
        /**
         * <code>repeated float icon_translate = 65;</code>
         */
        public int getIconTranslateCount() {
          return iconTranslate_.size();
        }
        /**
         * <code>repeated float icon_translate = 65;</code>
         */
        public float getIconTranslate(int index) {
          return iconTranslate_.getFloat(index);
        }
        private int iconTranslateMemoizedSerializedSize = -1;

        public static final int HAS_ICON_TRANSLATE_FIELD_NUMBER = 66;
        private boolean hasIconTranslate_;
        /**
         * <code>bool has_icon_translate = 66;</code>
         */
        public boolean getHasIconTranslate() {
          return hasIconTranslate_;
        }

        public static final int ICON_TRANSLATE_ANCHOR_FIELD_NUMBER = 67;
        private int iconTranslateAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
         */
        public int getIconTranslateAnchorValue() {
          return iconTranslateAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getIconTranslateAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(iconTranslateAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_ICON_TRANSLATE_ANCHOR_FIELD_NUMBER = 68;
        private boolean hasIconTranslateAnchor_;
        /**
         * <code>bool has_icon_translate_anchor = 68;</code>
         */
        public boolean getHasIconTranslateAnchor() {
          return hasIconTranslateAnchor_;
        }

        public static final int TEXT_OPACITY_FIELD_NUMBER = 69;
        private com.google.protobuf.FloatValue textOpacity_;
        /**
         * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
         */
        public boolean hasTextOpacity() {
          return textOpacity_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
         */
        public com.google.protobuf.FloatValue getTextOpacity() {
          return textOpacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textOpacity_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextOpacityOrBuilder() {
          return getTextOpacity();
        }

        public static final int TEXT_COLOR_FIELD_NUMBER = 70;
        private com.google.protobuf.Int32Value textColor_;
        /**
         * <code>.google.protobuf.Int32Value text_color = 70;</code>
         */
        public boolean hasTextColor() {
          return textColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value text_color = 70;</code>
         */
        public com.google.protobuf.Int32Value getTextColor() {
          return textColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : textColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value text_color = 70;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getTextColorOrBuilder() {
          return getTextColor();
        }

        public static final int TEXT_HALO_COLOR_FIELD_NUMBER = 71;
        private com.google.protobuf.Int32Value textHaloColor_;
        /**
         * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
         */
        public boolean hasTextHaloColor() {
          return textHaloColor_ != null;
        }
        /**
         * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
         */
        public com.google.protobuf.Int32Value getTextHaloColor() {
          return textHaloColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : textHaloColor_;
        }
        /**
         * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
         */
        public com.google.protobuf.Int32ValueOrBuilder getTextHaloColorOrBuilder() {
          return getTextHaloColor();
        }

        public static final int TEXT_HALO_WIDTH_FIELD_NUMBER = 72;
        private com.google.protobuf.FloatValue textHaloWidth_;
        /**
         * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
         */
        public boolean hasTextHaloWidth() {
          return textHaloWidth_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
         */
        public com.google.protobuf.FloatValue getTextHaloWidth() {
          return textHaloWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textHaloWidth_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextHaloWidthOrBuilder() {
          return getTextHaloWidth();
        }

        public static final int TEXT_HALO_BLUR_FIELD_NUMBER = 73;
        private com.google.protobuf.FloatValue textHaloBlur_;
        /**
         * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
         */
        public boolean hasTextHaloBlur() {
          return textHaloBlur_ != null;
        }
        /**
         * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
         */
        public com.google.protobuf.FloatValue getTextHaloBlur() {
          return textHaloBlur_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textHaloBlur_;
        }
        /**
         * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
         */
        public com.google.protobuf.FloatValueOrBuilder getTextHaloBlurOrBuilder() {
          return getTextHaloBlur();
        }

        public static final int TEXT_TRANSLATE_FIELD_NUMBER = 74;
        private com.google.protobuf.Internal.FloatList textTranslate_;
        /**
         * <code>repeated float text_translate = 74;</code>
         */
        public java.util.List<java.lang.Float>
            getTextTranslateList() {
          return textTranslate_;
        }
        /**
         * <code>repeated float text_translate = 74;</code>
         */
        public int getTextTranslateCount() {
          return textTranslate_.size();
        }
        /**
         * <code>repeated float text_translate = 74;</code>
         */
        public float getTextTranslate(int index) {
          return textTranslate_.getFloat(index);
        }
        private int textTranslateMemoizedSerializedSize = -1;

        public static final int HAS_TEXT_TRANSLATE_FIELD_NUMBER = 75;
        private boolean hasTextTranslate_;
        /**
         * <code>bool has_text_translate = 75;</code>
         */
        public boolean getHasTextTranslate() {
          return hasTextTranslate_;
        }

        public static final int TEXT_TRANSLATE_ANCHOR_FIELD_NUMBER = 76;
        private int textTranslateAnchor_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
         */
        public int getTextTranslateAnchorValue() {
          return textTranslateAnchor_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTextTranslateAnchor() {
          @SuppressWarnings("deprecation")
          com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(textTranslateAnchor_);
          return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
        }

        public static final int HAS_TEXT_TRANSLATE_ANCHOR_FIELD_NUMBER = 77;
        private boolean hasTextTranslateAnchor_;
        /**
         * <code>bool has_text_translate_anchor = 77;</code>
         */
        public boolean getHasTextTranslateAnchor() {
          return hasTextTranslateAnchor_;
        }

        public static final int ICON_OPACITY_TRANSITION_FIELD_NUMBER = 78;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconOpacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
         */
        public boolean hasIconOpacityTransition() {
          return iconOpacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconOpacityTransition() {
          return iconOpacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconOpacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconOpacityTransitionOrBuilder() {
          return getIconOpacityTransition();
        }

        public static final int ICON_COLOR_TRANSITION_FIELD_NUMBER = 79;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
         */
        public boolean hasIconColorTransition() {
          return iconColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconColorTransition() {
          return iconColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconColorTransitionOrBuilder() {
          return getIconColorTransition();
        }

        public static final int ICON_HALO_COLOR_TRANSITION_FIELD_NUMBER = 80;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconHaloColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
         */
        public boolean hasIconHaloColorTransition() {
          return iconHaloColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloColorTransition() {
          return iconHaloColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloColorTransitionOrBuilder() {
          return getIconHaloColorTransition();
        }

        public static final int ICON_HALO_WIDTH_TRANSITION_FIELD_NUMBER = 81;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconHaloWidthTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
         */
        public boolean hasIconHaloWidthTransition() {
          return iconHaloWidthTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloWidthTransition() {
          return iconHaloWidthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloWidthTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloWidthTransitionOrBuilder() {
          return getIconHaloWidthTransition();
        }

        public static final int ICON_HALO_BLUR_TRANSITION_FIELD_NUMBER = 82;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconHaloBlurTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
         */
        public boolean hasIconHaloBlurTransition() {
          return iconHaloBlurTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloBlurTransition() {
          return iconHaloBlurTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloBlurTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloBlurTransitionOrBuilder() {
          return getIconHaloBlurTransition();
        }

        public static final int ICON_TRANSLATE_TRANSITION_FIELD_NUMBER = 83;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconTranslateTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
         */
        public boolean hasIconTranslateTransition() {
          return iconTranslateTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconTranslateTransition() {
          return iconTranslateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconTranslateTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconTranslateTransitionOrBuilder() {
          return getIconTranslateTransition();
        }

        public static final int TEXT_OPACITY_TRANSITION_FIELD_NUMBER = 84;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textOpacityTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
         */
        public boolean hasTextOpacityTransition() {
          return textOpacityTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextOpacityTransition() {
          return textOpacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textOpacityTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextOpacityTransitionOrBuilder() {
          return getTextOpacityTransition();
        }

        public static final int TEXT_COLOR_TRANSITION_FIELD_NUMBER = 85;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
         */
        public boolean hasTextColorTransition() {
          return textColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextColorTransition() {
          return textColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextColorTransitionOrBuilder() {
          return getTextColorTransition();
        }

        public static final int TEXT_HALO_COLOR_TRANSITION_FIELD_NUMBER = 86;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textHaloColorTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
         */
        public boolean hasTextHaloColorTransition() {
          return textHaloColorTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloColorTransition() {
          return textHaloColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloColorTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloColorTransitionOrBuilder() {
          return getTextHaloColorTransition();
        }

        public static final int TEXT_HALO_WIDTH_TRANSITION_FIELD_NUMBER = 87;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textHaloWidthTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
         */
        public boolean hasTextHaloWidthTransition() {
          return textHaloWidthTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloWidthTransition() {
          return textHaloWidthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloWidthTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloWidthTransitionOrBuilder() {
          return getTextHaloWidthTransition();
        }

        public static final int TEXT_HALO_BLUR_TRANSITION_FIELD_NUMBER = 88;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textHaloBlurTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
         */
        public boolean hasTextHaloBlurTransition() {
          return textHaloBlurTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloBlurTransition() {
          return textHaloBlurTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloBlurTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloBlurTransitionOrBuilder() {
          return getTextHaloBlurTransition();
        }

        public static final int TEXT_TRANSLATE_TRANSITION_FIELD_NUMBER = 89;
        private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textTranslateTransition_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
         */
        public boolean hasTextTranslateTransition() {
          return textTranslateTransition_ != null;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextTranslateTransition() {
          return textTranslateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textTranslateTransition_;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
         */
        public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextTranslateTransitionOrBuilder() {
          return getTextTranslateTransition();
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (visible_ != null) {
            output.writeMessage(1, getVisible());
          }
          if (minZoom_ != null) {
            output.writeMessage(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            output.writeMessage(3, getMaxZoom());
          }
          if (symbolPlacement_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement.PLACEMENT_POINT.getNumber()) {
            output.writeEnum(4, symbolPlacement_);
          }
          if (hasSymbolPlacement_ != false) {
            output.writeBool(5, hasSymbolPlacement_);
          }
          if (symbolSpacing_ != null) {
            output.writeMessage(6, getSymbolSpacing());
          }
          if (symbolAvoidEdges_ != null) {
            output.writeMessage(7, getSymbolAvoidEdges());
          }
          if (symbolZOrder_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder.Z_ORDER_AUTO.getNumber()) {
            output.writeEnum(8, symbolZOrder_);
          }
          if (hasSymbolZOrder_ != false) {
            output.writeBool(9, hasSymbolZOrder_);
          }
          if (iconAllowOverlap_ != null) {
            output.writeMessage(10, getIconAllowOverlap());
          }
          if (iconIgnorePlacement_ != null) {
            output.writeMessage(11, getIconIgnorePlacement());
          }
          if (iconOptional_ != null) {
            output.writeMessage(12, getIconOptional());
          }
          if (iconRotationAlignment_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.ALIGNMENT_AUTO.getNumber()) {
            output.writeEnum(13, iconRotationAlignment_);
          }
          if (hasIconRotationAlignment_ != false) {
            output.writeBool(14, hasIconRotationAlignment_);
          }
          if (iconSize_ != null) {
            output.writeMessage(15, getIconSize());
          }
          if (iconTextFit_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit.TEXT_FIT_NONE.getNumber()) {
            output.writeEnum(16, iconTextFit_);
          }
          if (hasIconTextFit_ != false) {
            output.writeBool(17, hasIconTextFit_);
          }
          if (getIconTextFitPaddingList().size() > 0) {
            output.writeUInt32NoTag(146);
            output.writeUInt32NoTag(iconTextFitPaddingMemoizedSerializedSize);
          }
          for (int i = 0; i < iconTextFitPadding_.size(); i++) {
            output.writeFloatNoTag(iconTextFitPadding_.getFloat(i));
          }
          if (hasIconTextFitPadding_ != false) {
            output.writeBool(19, hasIconTextFitPadding_);
          }
          if (iconImage_ != null) {
            output.writeMessage(20, getIconImage());
          }
          if (iconRotate_ != null) {
            output.writeMessage(21, getIconRotate());
          }
          if (iconPadding_ != null) {
            output.writeMessage(22, getIconPadding());
          }
          if (iconKeepUpright_ != null) {
            output.writeMessage(23, getIconKeepUpright());
          }
          if (getIconOffsetList().size() > 0) {
            output.writeUInt32NoTag(194);
            output.writeUInt32NoTag(iconOffsetMemoizedSerializedSize);
          }
          for (int i = 0; i < iconOffset_.size(); i++) {
            output.writeFloatNoTag(iconOffset_.getFloat(i));
          }
          if (hasIconOffset_ != false) {
            output.writeBool(25, hasIconOffset_);
          }
          if (iconAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.POSITION_CENTER.getNumber()) {
            output.writeEnum(26, iconAnchor_);
          }
          if (hasIconAnchor_ != false) {
            output.writeBool(27, hasIconAnchor_);
          }
          if (iconPitchAlignment_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.ALIGNMENT_AUTO.getNumber()) {
            output.writeEnum(28, iconPitchAlignment_);
          }
          if (hasIconPitchAlignment_ != false) {
            output.writeBool(29, hasIconPitchAlignment_);
          }
          if (textPitchAlignment_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.ALIGNMENT_AUTO.getNumber()) {
            output.writeEnum(30, textPitchAlignment_);
          }
          if (hasTextPitchAlignment_ != false) {
            output.writeBool(31, hasTextPitchAlignment_);
          }
          if (textRotationAlignment_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.ALIGNMENT_AUTO.getNumber()) {
            output.writeEnum(32, textRotationAlignment_);
          }
          if (hasTextRotationAlignment_ != false) {
            output.writeBool(33, hasTextRotationAlignment_);
          }
          for (int i = 0; i < textField_.size(); i++) {
            output.writeMessage(34, textField_.get(i));
          }
          if (hasTextField_ != false) {
            output.writeBool(35, hasTextField_);
          }
          for (int i = 0; i < textFont_.size(); i++) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 36, textFont_.getRaw(i));
          }
          if (hasTextFont_ != false) {
            output.writeBool(37, hasTextFont_);
          }
          if (textSize_ != null) {
            output.writeMessage(38, getTextSize());
          }
          if (textMaxWidth_ != null) {
            output.writeMessage(39, getTextMaxWidth());
          }
          if (textLineHeight_ != null) {
            output.writeMessage(40, getTextLineHeight());
          }
          if (textLetterSpacing_ != null) {
            output.writeMessage(41, getTextLetterSpacing());
          }
          if (textJustify_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify.JUSTIFY_AUTO.getNumber()) {
            output.writeEnum(42, textJustify_);
          }
          if (hasTextJustify_ != false) {
            output.writeBool(43, hasTextJustify_);
          }
          if (textRadialOffset_ != null) {
            output.writeMessage(44, getTextRadialOffset());
          }
          if (getTextVariableAnchorList().size() > 0) {
            output.writeUInt32NoTag(362);
            output.writeUInt32NoTag(textVariableAnchorMemoizedSerializedSize);
          }
          for (int i = 0; i < textVariableAnchor_.size(); i++) {
            output.writeEnumNoTag(textVariableAnchor_.get(i));
          }
          if (hasTextVariableAnchor_ != false) {
            output.writeBool(46, hasTextVariableAnchor_);
          }
          if (textAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.POSITION_CENTER.getNumber()) {
            output.writeEnum(47, textAnchor_);
          }
          if (hasTextAnchor_ != false) {
            output.writeBool(48, hasTextAnchor_);
          }
          if (textMaxAngle_ != null) {
            output.writeMessage(49, getTextMaxAngle());
          }
          if (textRotate_ != null) {
            output.writeMessage(50, getTextRotate());
          }
          if (textPadding_ != null) {
            output.writeMessage(51, getTextPadding());
          }
          if (textKeepUpright_ != null) {
            output.writeMessage(52, getTextKeepUpright());
          }
          if (textTransform_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform.TRANSFORM_NONE.getNumber()) {
            output.writeEnum(53, textTransform_);
          }
          if (hasTextTransform_ != false) {
            output.writeBool(54, hasTextTransform_);
          }
          if (getTextOffsetList().size() > 0) {
            output.writeUInt32NoTag(442);
            output.writeUInt32NoTag(textOffsetMemoizedSerializedSize);
          }
          for (int i = 0; i < textOffset_.size(); i++) {
            output.writeFloatNoTag(textOffset_.getFloat(i));
          }
          if (hasTextOffset_ != false) {
            output.writeBool(56, hasTextOffset_);
          }
          if (textAllowOverlap_ != null) {
            output.writeMessage(57, getTextAllowOverlap());
          }
          if (textIgnorePlacement_ != null) {
            output.writeMessage(58, getTextIgnorePlacement());
          }
          if (textOptional_ != null) {
            output.writeMessage(59, getTextOptional());
          }
          if (iconOpacity_ != null) {
            output.writeMessage(60, getIconOpacity());
          }
          if (iconColor_ != null) {
            output.writeMessage(61, getIconColor());
          }
          if (iconHaloColor_ != null) {
            output.writeMessage(62, getIconHaloColor());
          }
          if (iconHaloWidth_ != null) {
            output.writeMessage(63, getIconHaloWidth());
          }
          if (iconHaloBlur_ != null) {
            output.writeMessage(64, getIconHaloBlur());
          }
          if (getIconTranslateList().size() > 0) {
            output.writeUInt32NoTag(522);
            output.writeUInt32NoTag(iconTranslateMemoizedSerializedSize);
          }
          for (int i = 0; i < iconTranslate_.size(); i++) {
            output.writeFloatNoTag(iconTranslate_.getFloat(i));
          }
          if (hasIconTranslate_ != false) {
            output.writeBool(66, hasIconTranslate_);
          }
          if (iconTranslateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(67, iconTranslateAnchor_);
          }
          if (hasIconTranslateAnchor_ != false) {
            output.writeBool(68, hasIconTranslateAnchor_);
          }
          if (textOpacity_ != null) {
            output.writeMessage(69, getTextOpacity());
          }
          if (textColor_ != null) {
            output.writeMessage(70, getTextColor());
          }
          if (textHaloColor_ != null) {
            output.writeMessage(71, getTextHaloColor());
          }
          if (textHaloWidth_ != null) {
            output.writeMessage(72, getTextHaloWidth());
          }
          if (textHaloBlur_ != null) {
            output.writeMessage(73, getTextHaloBlur());
          }
          if (getTextTranslateList().size() > 0) {
            output.writeUInt32NoTag(594);
            output.writeUInt32NoTag(textTranslateMemoizedSerializedSize);
          }
          for (int i = 0; i < textTranslate_.size(); i++) {
            output.writeFloatNoTag(textTranslate_.getFloat(i));
          }
          if (hasTextTranslate_ != false) {
            output.writeBool(75, hasTextTranslate_);
          }
          if (textTranslateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            output.writeEnum(76, textTranslateAnchor_);
          }
          if (hasTextTranslateAnchor_ != false) {
            output.writeBool(77, hasTextTranslateAnchor_);
          }
          if (iconOpacityTransition_ != null) {
            output.writeMessage(78, getIconOpacityTransition());
          }
          if (iconColorTransition_ != null) {
            output.writeMessage(79, getIconColorTransition());
          }
          if (iconHaloColorTransition_ != null) {
            output.writeMessage(80, getIconHaloColorTransition());
          }
          if (iconHaloWidthTransition_ != null) {
            output.writeMessage(81, getIconHaloWidthTransition());
          }
          if (iconHaloBlurTransition_ != null) {
            output.writeMessage(82, getIconHaloBlurTransition());
          }
          if (iconTranslateTransition_ != null) {
            output.writeMessage(83, getIconTranslateTransition());
          }
          if (textOpacityTransition_ != null) {
            output.writeMessage(84, getTextOpacityTransition());
          }
          if (textColorTransition_ != null) {
            output.writeMessage(85, getTextColorTransition());
          }
          if (textHaloColorTransition_ != null) {
            output.writeMessage(86, getTextHaloColorTransition());
          }
          if (textHaloWidthTransition_ != null) {
            output.writeMessage(87, getTextHaloWidthTransition());
          }
          if (textHaloBlurTransition_ != null) {
            output.writeMessage(88, getTextHaloBlurTransition());
          }
          if (textTranslateTransition_ != null) {
            output.writeMessage(89, getTextTranslateTransition());
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (visible_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getVisible());
          }
          if (minZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, getMinZoom());
          }
          if (maxZoom_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, getMaxZoom());
          }
          if (symbolPlacement_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement.PLACEMENT_POINT.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(4, symbolPlacement_);
          }
          if (hasSymbolPlacement_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(5, hasSymbolPlacement_);
          }
          if (symbolSpacing_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(6, getSymbolSpacing());
          }
          if (symbolAvoidEdges_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, getSymbolAvoidEdges());
          }
          if (symbolZOrder_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder.Z_ORDER_AUTO.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(8, symbolZOrder_);
          }
          if (hasSymbolZOrder_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(9, hasSymbolZOrder_);
          }
          if (iconAllowOverlap_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(10, getIconAllowOverlap());
          }
          if (iconIgnorePlacement_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(11, getIconIgnorePlacement());
          }
          if (iconOptional_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(12, getIconOptional());
          }
          if (iconRotationAlignment_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.ALIGNMENT_AUTO.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(13, iconRotationAlignment_);
          }
          if (hasIconRotationAlignment_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(14, hasIconRotationAlignment_);
          }
          if (iconSize_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(15, getIconSize());
          }
          if (iconTextFit_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit.TEXT_FIT_NONE.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(16, iconTextFit_);
          }
          if (hasIconTextFit_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(17, hasIconTextFit_);
          }
          {
            int dataSize = 0;
            dataSize = 4 * getIconTextFitPaddingList().size();
            size += dataSize;
            if (!getIconTextFitPaddingList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            iconTextFitPaddingMemoizedSerializedSize = dataSize;
          }
          if (hasIconTextFitPadding_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(19, hasIconTextFitPadding_);
          }
          if (iconImage_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(20, getIconImage());
          }
          if (iconRotate_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(21, getIconRotate());
          }
          if (iconPadding_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(22, getIconPadding());
          }
          if (iconKeepUpright_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(23, getIconKeepUpright());
          }
          {
            int dataSize = 0;
            dataSize = 4 * getIconOffsetList().size();
            size += dataSize;
            if (!getIconOffsetList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            iconOffsetMemoizedSerializedSize = dataSize;
          }
          if (hasIconOffset_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(25, hasIconOffset_);
          }
          if (iconAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.POSITION_CENTER.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(26, iconAnchor_);
          }
          if (hasIconAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(27, hasIconAnchor_);
          }
          if (iconPitchAlignment_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.ALIGNMENT_AUTO.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(28, iconPitchAlignment_);
          }
          if (hasIconPitchAlignment_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(29, hasIconPitchAlignment_);
          }
          if (textPitchAlignment_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.ALIGNMENT_AUTO.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(30, textPitchAlignment_);
          }
          if (hasTextPitchAlignment_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(31, hasTextPitchAlignment_);
          }
          if (textRotationAlignment_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.ALIGNMENT_AUTO.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(32, textRotationAlignment_);
          }
          if (hasTextRotationAlignment_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(33, hasTextRotationAlignment_);
          }
          for (int i = 0; i < textField_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(34, textField_.get(i));
          }
          if (hasTextField_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(35, hasTextField_);
          }
          {
            int dataSize = 0;
            for (int i = 0; i < textFont_.size(); i++) {
              dataSize += computeStringSizeNoTag(textFont_.getRaw(i));
            }
            size += dataSize;
            size += 2 * getTextFontList().size();
          }
          if (hasTextFont_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(37, hasTextFont_);
          }
          if (textSize_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(38, getTextSize());
          }
          if (textMaxWidth_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(39, getTextMaxWidth());
          }
          if (textLineHeight_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(40, getTextLineHeight());
          }
          if (textLetterSpacing_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(41, getTextLetterSpacing());
          }
          if (textJustify_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify.JUSTIFY_AUTO.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(42, textJustify_);
          }
          if (hasTextJustify_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(43, hasTextJustify_);
          }
          if (textRadialOffset_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(44, getTextRadialOffset());
          }
          {
            int dataSize = 0;
            for (int i = 0; i < textVariableAnchor_.size(); i++) {
              dataSize += com.google.protobuf.CodedOutputStream
                .computeEnumSizeNoTag(textVariableAnchor_.get(i));
            }
            size += dataSize;
            if (!getTextVariableAnchorList().isEmpty()) {  size += 2;
              size += com.google.protobuf.CodedOutputStream
                .computeUInt32SizeNoTag(dataSize);
            }textVariableAnchorMemoizedSerializedSize = dataSize;
          }
          if (hasTextVariableAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(46, hasTextVariableAnchor_);
          }
          if (textAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.POSITION_CENTER.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(47, textAnchor_);
          }
          if (hasTextAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(48, hasTextAnchor_);
          }
          if (textMaxAngle_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(49, getTextMaxAngle());
          }
          if (textRotate_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(50, getTextRotate());
          }
          if (textPadding_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(51, getTextPadding());
          }
          if (textKeepUpright_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(52, getTextKeepUpright());
          }
          if (textTransform_ != com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform.TRANSFORM_NONE.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(53, textTransform_);
          }
          if (hasTextTransform_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(54, hasTextTransform_);
          }
          {
            int dataSize = 0;
            dataSize = 4 * getTextOffsetList().size();
            size += dataSize;
            if (!getTextOffsetList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            textOffsetMemoizedSerializedSize = dataSize;
          }
          if (hasTextOffset_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(56, hasTextOffset_);
          }
          if (textAllowOverlap_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(57, getTextAllowOverlap());
          }
          if (textIgnorePlacement_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(58, getTextIgnorePlacement());
          }
          if (textOptional_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(59, getTextOptional());
          }
          if (iconOpacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(60, getIconOpacity());
          }
          if (iconColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(61, getIconColor());
          }
          if (iconHaloColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(62, getIconHaloColor());
          }
          if (iconHaloWidth_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(63, getIconHaloWidth());
          }
          if (iconHaloBlur_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(64, getIconHaloBlur());
          }
          {
            int dataSize = 0;
            dataSize = 4 * getIconTranslateList().size();
            size += dataSize;
            if (!getIconTranslateList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            iconTranslateMemoizedSerializedSize = dataSize;
          }
          if (hasIconTranslate_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(66, hasIconTranslate_);
          }
          if (iconTranslateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(67, iconTranslateAnchor_);
          }
          if (hasIconTranslateAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(68, hasIconTranslateAnchor_);
          }
          if (textOpacity_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(69, getTextOpacity());
          }
          if (textColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(70, getTextColor());
          }
          if (textHaloColor_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(71, getTextHaloColor());
          }
          if (textHaloWidth_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(72, getTextHaloWidth());
          }
          if (textHaloBlur_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(73, getTextHaloBlur());
          }
          {
            int dataSize = 0;
            dataSize = 4 * getTextTranslateList().size();
            size += dataSize;
            if (!getTextTranslateList().isEmpty()) {
              size += 2;
              size += com.google.protobuf.CodedOutputStream
                  .computeInt32SizeNoTag(dataSize);
            }
            textTranslateMemoizedSerializedSize = dataSize;
          }
          if (hasTextTranslate_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(75, hasTextTranslate_);
          }
          if (textTranslateAnchor_ != com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.MAP.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(76, textTranslateAnchor_);
          }
          if (hasTextTranslateAnchor_ != false) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(77, hasTextTranslateAnchor_);
          }
          if (iconOpacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(78, getIconOpacityTransition());
          }
          if (iconColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(79, getIconColorTransition());
          }
          if (iconHaloColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(80, getIconHaloColorTransition());
          }
          if (iconHaloWidthTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(81, getIconHaloWidthTransition());
          }
          if (iconHaloBlurTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(82, getIconHaloBlurTransition());
          }
          if (iconTranslateTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(83, getIconTranslateTransition());
          }
          if (textOpacityTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(84, getTextOpacityTransition());
          }
          if (textColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(85, getTextColorTransition());
          }
          if (textHaloColorTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(86, getTextHaloColorTransition());
          }
          if (textHaloWidthTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(87, getTextHaloWidthTransition());
          }
          if (textHaloBlurTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(88, getTextHaloBlurTransition());
          }
          if (textTranslateTransition_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(89, getTextTranslateTransition());
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol)) {
            return super.equals(obj);
          }
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) obj;

          if (hasVisible() != other.hasVisible()) return false;
          if (hasVisible()) {
            if (!getVisible()
                .equals(other.getVisible())) return false;
          }
          if (hasMinZoom() != other.hasMinZoom()) return false;
          if (hasMinZoom()) {
            if (!getMinZoom()
                .equals(other.getMinZoom())) return false;
          }
          if (hasMaxZoom() != other.hasMaxZoom()) return false;
          if (hasMaxZoom()) {
            if (!getMaxZoom()
                .equals(other.getMaxZoom())) return false;
          }
          if (symbolPlacement_ != other.symbolPlacement_) return false;
          if (getHasSymbolPlacement()
              != other.getHasSymbolPlacement()) return false;
          if (hasSymbolSpacing() != other.hasSymbolSpacing()) return false;
          if (hasSymbolSpacing()) {
            if (!getSymbolSpacing()
                .equals(other.getSymbolSpacing())) return false;
          }
          if (hasSymbolAvoidEdges() != other.hasSymbolAvoidEdges()) return false;
          if (hasSymbolAvoidEdges()) {
            if (!getSymbolAvoidEdges()
                .equals(other.getSymbolAvoidEdges())) return false;
          }
          if (symbolZOrder_ != other.symbolZOrder_) return false;
          if (getHasSymbolZOrder()
              != other.getHasSymbolZOrder()) return false;
          if (hasIconAllowOverlap() != other.hasIconAllowOverlap()) return false;
          if (hasIconAllowOverlap()) {
            if (!getIconAllowOverlap()
                .equals(other.getIconAllowOverlap())) return false;
          }
          if (hasIconIgnorePlacement() != other.hasIconIgnorePlacement()) return false;
          if (hasIconIgnorePlacement()) {
            if (!getIconIgnorePlacement()
                .equals(other.getIconIgnorePlacement())) return false;
          }
          if (hasIconOptional() != other.hasIconOptional()) return false;
          if (hasIconOptional()) {
            if (!getIconOptional()
                .equals(other.getIconOptional())) return false;
          }
          if (iconRotationAlignment_ != other.iconRotationAlignment_) return false;
          if (getHasIconRotationAlignment()
              != other.getHasIconRotationAlignment()) return false;
          if (hasIconSize() != other.hasIconSize()) return false;
          if (hasIconSize()) {
            if (!getIconSize()
                .equals(other.getIconSize())) return false;
          }
          if (iconTextFit_ != other.iconTextFit_) return false;
          if (getHasIconTextFit()
              != other.getHasIconTextFit()) return false;
          if (!getIconTextFitPaddingList()
              .equals(other.getIconTextFitPaddingList())) return false;
          if (getHasIconTextFitPadding()
              != other.getHasIconTextFitPadding()) return false;
          if (hasIconImage() != other.hasIconImage()) return false;
          if (hasIconImage()) {
            if (!getIconImage()
                .equals(other.getIconImage())) return false;
          }
          if (hasIconRotate() != other.hasIconRotate()) return false;
          if (hasIconRotate()) {
            if (!getIconRotate()
                .equals(other.getIconRotate())) return false;
          }
          if (hasIconPadding() != other.hasIconPadding()) return false;
          if (hasIconPadding()) {
            if (!getIconPadding()
                .equals(other.getIconPadding())) return false;
          }
          if (hasIconKeepUpright() != other.hasIconKeepUpright()) return false;
          if (hasIconKeepUpright()) {
            if (!getIconKeepUpright()
                .equals(other.getIconKeepUpright())) return false;
          }
          if (!getIconOffsetList()
              .equals(other.getIconOffsetList())) return false;
          if (getHasIconOffset()
              != other.getHasIconOffset()) return false;
          if (iconAnchor_ != other.iconAnchor_) return false;
          if (getHasIconAnchor()
              != other.getHasIconAnchor()) return false;
          if (iconPitchAlignment_ != other.iconPitchAlignment_) return false;
          if (getHasIconPitchAlignment()
              != other.getHasIconPitchAlignment()) return false;
          if (textPitchAlignment_ != other.textPitchAlignment_) return false;
          if (getHasTextPitchAlignment()
              != other.getHasTextPitchAlignment()) return false;
          if (textRotationAlignment_ != other.textRotationAlignment_) return false;
          if (getHasTextRotationAlignment()
              != other.getHasTextRotationAlignment()) return false;
          if (!getTextFieldList()
              .equals(other.getTextFieldList())) return false;
          if (getHasTextField()
              != other.getHasTextField()) return false;
          if (!getTextFontList()
              .equals(other.getTextFontList())) return false;
          if (getHasTextFont()
              != other.getHasTextFont()) return false;
          if (hasTextSize() != other.hasTextSize()) return false;
          if (hasTextSize()) {
            if (!getTextSize()
                .equals(other.getTextSize())) return false;
          }
          if (hasTextMaxWidth() != other.hasTextMaxWidth()) return false;
          if (hasTextMaxWidth()) {
            if (!getTextMaxWidth()
                .equals(other.getTextMaxWidth())) return false;
          }
          if (hasTextLineHeight() != other.hasTextLineHeight()) return false;
          if (hasTextLineHeight()) {
            if (!getTextLineHeight()
                .equals(other.getTextLineHeight())) return false;
          }
          if (hasTextLetterSpacing() != other.hasTextLetterSpacing()) return false;
          if (hasTextLetterSpacing()) {
            if (!getTextLetterSpacing()
                .equals(other.getTextLetterSpacing())) return false;
          }
          if (textJustify_ != other.textJustify_) return false;
          if (getHasTextJustify()
              != other.getHasTextJustify()) return false;
          if (hasTextRadialOffset() != other.hasTextRadialOffset()) return false;
          if (hasTextRadialOffset()) {
            if (!getTextRadialOffset()
                .equals(other.getTextRadialOffset())) return false;
          }
          if (!textVariableAnchor_.equals(other.textVariableAnchor_)) return false;
          if (getHasTextVariableAnchor()
              != other.getHasTextVariableAnchor()) return false;
          if (textAnchor_ != other.textAnchor_) return false;
          if (getHasTextAnchor()
              != other.getHasTextAnchor()) return false;
          if (hasTextMaxAngle() != other.hasTextMaxAngle()) return false;
          if (hasTextMaxAngle()) {
            if (!getTextMaxAngle()
                .equals(other.getTextMaxAngle())) return false;
          }
          if (hasTextRotate() != other.hasTextRotate()) return false;
          if (hasTextRotate()) {
            if (!getTextRotate()
                .equals(other.getTextRotate())) return false;
          }
          if (hasTextPadding() != other.hasTextPadding()) return false;
          if (hasTextPadding()) {
            if (!getTextPadding()
                .equals(other.getTextPadding())) return false;
          }
          if (hasTextKeepUpright() != other.hasTextKeepUpright()) return false;
          if (hasTextKeepUpright()) {
            if (!getTextKeepUpright()
                .equals(other.getTextKeepUpright())) return false;
          }
          if (textTransform_ != other.textTransform_) return false;
          if (getHasTextTransform()
              != other.getHasTextTransform()) return false;
          if (!getTextOffsetList()
              .equals(other.getTextOffsetList())) return false;
          if (getHasTextOffset()
              != other.getHasTextOffset()) return false;
          if (hasTextAllowOverlap() != other.hasTextAllowOverlap()) return false;
          if (hasTextAllowOverlap()) {
            if (!getTextAllowOverlap()
                .equals(other.getTextAllowOverlap())) return false;
          }
          if (hasTextIgnorePlacement() != other.hasTextIgnorePlacement()) return false;
          if (hasTextIgnorePlacement()) {
            if (!getTextIgnorePlacement()
                .equals(other.getTextIgnorePlacement())) return false;
          }
          if (hasTextOptional() != other.hasTextOptional()) return false;
          if (hasTextOptional()) {
            if (!getTextOptional()
                .equals(other.getTextOptional())) return false;
          }
          if (hasIconOpacity() != other.hasIconOpacity()) return false;
          if (hasIconOpacity()) {
            if (!getIconOpacity()
                .equals(other.getIconOpacity())) return false;
          }
          if (hasIconColor() != other.hasIconColor()) return false;
          if (hasIconColor()) {
            if (!getIconColor()
                .equals(other.getIconColor())) return false;
          }
          if (hasIconHaloColor() != other.hasIconHaloColor()) return false;
          if (hasIconHaloColor()) {
            if (!getIconHaloColor()
                .equals(other.getIconHaloColor())) return false;
          }
          if (hasIconHaloWidth() != other.hasIconHaloWidth()) return false;
          if (hasIconHaloWidth()) {
            if (!getIconHaloWidth()
                .equals(other.getIconHaloWidth())) return false;
          }
          if (hasIconHaloBlur() != other.hasIconHaloBlur()) return false;
          if (hasIconHaloBlur()) {
            if (!getIconHaloBlur()
                .equals(other.getIconHaloBlur())) return false;
          }
          if (!getIconTranslateList()
              .equals(other.getIconTranslateList())) return false;
          if (getHasIconTranslate()
              != other.getHasIconTranslate()) return false;
          if (iconTranslateAnchor_ != other.iconTranslateAnchor_) return false;
          if (getHasIconTranslateAnchor()
              != other.getHasIconTranslateAnchor()) return false;
          if (hasTextOpacity() != other.hasTextOpacity()) return false;
          if (hasTextOpacity()) {
            if (!getTextOpacity()
                .equals(other.getTextOpacity())) return false;
          }
          if (hasTextColor() != other.hasTextColor()) return false;
          if (hasTextColor()) {
            if (!getTextColor()
                .equals(other.getTextColor())) return false;
          }
          if (hasTextHaloColor() != other.hasTextHaloColor()) return false;
          if (hasTextHaloColor()) {
            if (!getTextHaloColor()
                .equals(other.getTextHaloColor())) return false;
          }
          if (hasTextHaloWidth() != other.hasTextHaloWidth()) return false;
          if (hasTextHaloWidth()) {
            if (!getTextHaloWidth()
                .equals(other.getTextHaloWidth())) return false;
          }
          if (hasTextHaloBlur() != other.hasTextHaloBlur()) return false;
          if (hasTextHaloBlur()) {
            if (!getTextHaloBlur()
                .equals(other.getTextHaloBlur())) return false;
          }
          if (!getTextTranslateList()
              .equals(other.getTextTranslateList())) return false;
          if (getHasTextTranslate()
              != other.getHasTextTranslate()) return false;
          if (textTranslateAnchor_ != other.textTranslateAnchor_) return false;
          if (getHasTextTranslateAnchor()
              != other.getHasTextTranslateAnchor()) return false;
          if (hasIconOpacityTransition() != other.hasIconOpacityTransition()) return false;
          if (hasIconOpacityTransition()) {
            if (!getIconOpacityTransition()
                .equals(other.getIconOpacityTransition())) return false;
          }
          if (hasIconColorTransition() != other.hasIconColorTransition()) return false;
          if (hasIconColorTransition()) {
            if (!getIconColorTransition()
                .equals(other.getIconColorTransition())) return false;
          }
          if (hasIconHaloColorTransition() != other.hasIconHaloColorTransition()) return false;
          if (hasIconHaloColorTransition()) {
            if (!getIconHaloColorTransition()
                .equals(other.getIconHaloColorTransition())) return false;
          }
          if (hasIconHaloWidthTransition() != other.hasIconHaloWidthTransition()) return false;
          if (hasIconHaloWidthTransition()) {
            if (!getIconHaloWidthTransition()
                .equals(other.getIconHaloWidthTransition())) return false;
          }
          if (hasIconHaloBlurTransition() != other.hasIconHaloBlurTransition()) return false;
          if (hasIconHaloBlurTransition()) {
            if (!getIconHaloBlurTransition()
                .equals(other.getIconHaloBlurTransition())) return false;
          }
          if (hasIconTranslateTransition() != other.hasIconTranslateTransition()) return false;
          if (hasIconTranslateTransition()) {
            if (!getIconTranslateTransition()
                .equals(other.getIconTranslateTransition())) return false;
          }
          if (hasTextOpacityTransition() != other.hasTextOpacityTransition()) return false;
          if (hasTextOpacityTransition()) {
            if (!getTextOpacityTransition()
                .equals(other.getTextOpacityTransition())) return false;
          }
          if (hasTextColorTransition() != other.hasTextColorTransition()) return false;
          if (hasTextColorTransition()) {
            if (!getTextColorTransition()
                .equals(other.getTextColorTransition())) return false;
          }
          if (hasTextHaloColorTransition() != other.hasTextHaloColorTransition()) return false;
          if (hasTextHaloColorTransition()) {
            if (!getTextHaloColorTransition()
                .equals(other.getTextHaloColorTransition())) return false;
          }
          if (hasTextHaloWidthTransition() != other.hasTextHaloWidthTransition()) return false;
          if (hasTextHaloWidthTransition()) {
            if (!getTextHaloWidthTransition()
                .equals(other.getTextHaloWidthTransition())) return false;
          }
          if (hasTextHaloBlurTransition() != other.hasTextHaloBlurTransition()) return false;
          if (hasTextHaloBlurTransition()) {
            if (!getTextHaloBlurTransition()
                .equals(other.getTextHaloBlurTransition())) return false;
          }
          if (hasTextTranslateTransition() != other.hasTextTranslateTransition()) return false;
          if (hasTextTranslateTransition()) {
            if (!getTextTranslateTransition()
                .equals(other.getTextTranslateTransition())) return false;
          }
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasVisible()) {
            hash = (37 * hash) + VISIBLE_FIELD_NUMBER;
            hash = (53 * hash) + getVisible().hashCode();
          }
          if (hasMinZoom()) {
            hash = (37 * hash) + MIN_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMinZoom().hashCode();
          }
          if (hasMaxZoom()) {
            hash = (37 * hash) + MAX_ZOOM_FIELD_NUMBER;
            hash = (53 * hash) + getMaxZoom().hashCode();
          }
          hash = (37 * hash) + SYMBOL_PLACEMENT_FIELD_NUMBER;
          hash = (53 * hash) + symbolPlacement_;
          hash = (37 * hash) + HAS_SYMBOL_PLACEMENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasSymbolPlacement());
          if (hasSymbolSpacing()) {
            hash = (37 * hash) + SYMBOL_SPACING_FIELD_NUMBER;
            hash = (53 * hash) + getSymbolSpacing().hashCode();
          }
          if (hasSymbolAvoidEdges()) {
            hash = (37 * hash) + SYMBOL_AVOID_EDGES_FIELD_NUMBER;
            hash = (53 * hash) + getSymbolAvoidEdges().hashCode();
          }
          hash = (37 * hash) + SYMBOL_Z_ORDER_FIELD_NUMBER;
          hash = (53 * hash) + symbolZOrder_;
          hash = (37 * hash) + HAS_SYMBOL_Z_ORDER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasSymbolZOrder());
          if (hasIconAllowOverlap()) {
            hash = (37 * hash) + ICON_ALLOW_OVERLAP_FIELD_NUMBER;
            hash = (53 * hash) + getIconAllowOverlap().hashCode();
          }
          if (hasIconIgnorePlacement()) {
            hash = (37 * hash) + ICON_IGNORE_PLACEMENT_FIELD_NUMBER;
            hash = (53 * hash) + getIconIgnorePlacement().hashCode();
          }
          if (hasIconOptional()) {
            hash = (37 * hash) + ICON_OPTIONAL_FIELD_NUMBER;
            hash = (53 * hash) + getIconOptional().hashCode();
          }
          hash = (37 * hash) + ICON_ROTATION_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + iconRotationAlignment_;
          hash = (37 * hash) + HAS_ICON_ROTATION_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIconRotationAlignment());
          if (hasIconSize()) {
            hash = (37 * hash) + ICON_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + getIconSize().hashCode();
          }
          hash = (37 * hash) + ICON_TEXT_FIT_FIELD_NUMBER;
          hash = (53 * hash) + iconTextFit_;
          hash = (37 * hash) + HAS_ICON_TEXT_FIT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIconTextFit());
          if (getIconTextFitPaddingCount() > 0) {
            hash = (37 * hash) + ICON_TEXT_FIT_PADDING_FIELD_NUMBER;
            hash = (53 * hash) + getIconTextFitPaddingList().hashCode();
          }
          hash = (37 * hash) + HAS_ICON_TEXT_FIT_PADDING_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIconTextFitPadding());
          if (hasIconImage()) {
            hash = (37 * hash) + ICON_IMAGE_FIELD_NUMBER;
            hash = (53 * hash) + getIconImage().hashCode();
          }
          if (hasIconRotate()) {
            hash = (37 * hash) + ICON_ROTATE_FIELD_NUMBER;
            hash = (53 * hash) + getIconRotate().hashCode();
          }
          if (hasIconPadding()) {
            hash = (37 * hash) + ICON_PADDING_FIELD_NUMBER;
            hash = (53 * hash) + getIconPadding().hashCode();
          }
          if (hasIconKeepUpright()) {
            hash = (37 * hash) + ICON_KEEP_UPRIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getIconKeepUpright().hashCode();
          }
          if (getIconOffsetCount() > 0) {
            hash = (37 * hash) + ICON_OFFSET_FIELD_NUMBER;
            hash = (53 * hash) + getIconOffsetList().hashCode();
          }
          hash = (37 * hash) + HAS_ICON_OFFSET_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIconOffset());
          hash = (37 * hash) + ICON_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + iconAnchor_;
          hash = (37 * hash) + HAS_ICON_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIconAnchor());
          hash = (37 * hash) + ICON_PITCH_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + iconPitchAlignment_;
          hash = (37 * hash) + HAS_ICON_PITCH_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIconPitchAlignment());
          hash = (37 * hash) + TEXT_PITCH_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + textPitchAlignment_;
          hash = (37 * hash) + HAS_TEXT_PITCH_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextPitchAlignment());
          hash = (37 * hash) + TEXT_ROTATION_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + textRotationAlignment_;
          hash = (37 * hash) + HAS_TEXT_ROTATION_ALIGNMENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextRotationAlignment());
          if (getTextFieldCount() > 0) {
            hash = (37 * hash) + TEXT_FIELD_FIELD_NUMBER;
            hash = (53 * hash) + getTextFieldList().hashCode();
          }
          hash = (37 * hash) + HAS_TEXT_FIELD_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextField());
          if (getTextFontCount() > 0) {
            hash = (37 * hash) + TEXT_FONT_FIELD_NUMBER;
            hash = (53 * hash) + getTextFontList().hashCode();
          }
          hash = (37 * hash) + HAS_TEXT_FONT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextFont());
          if (hasTextSize()) {
            hash = (37 * hash) + TEXT_SIZE_FIELD_NUMBER;
            hash = (53 * hash) + getTextSize().hashCode();
          }
          if (hasTextMaxWidth()) {
            hash = (37 * hash) + TEXT_MAX_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getTextMaxWidth().hashCode();
          }
          if (hasTextLineHeight()) {
            hash = (37 * hash) + TEXT_LINE_HEIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getTextLineHeight().hashCode();
          }
          if (hasTextLetterSpacing()) {
            hash = (37 * hash) + TEXT_LETTER_SPACING_FIELD_NUMBER;
            hash = (53 * hash) + getTextLetterSpacing().hashCode();
          }
          hash = (37 * hash) + TEXT_JUSTIFY_FIELD_NUMBER;
          hash = (53 * hash) + textJustify_;
          hash = (37 * hash) + HAS_TEXT_JUSTIFY_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextJustify());
          if (hasTextRadialOffset()) {
            hash = (37 * hash) + TEXT_RADIAL_OFFSET_FIELD_NUMBER;
            hash = (53 * hash) + getTextRadialOffset().hashCode();
          }
          if (getTextVariableAnchorCount() > 0) {
            hash = (37 * hash) + TEXT_VARIABLE_ANCHOR_FIELD_NUMBER;
            hash = (53 * hash) + textVariableAnchor_.hashCode();
          }
          hash = (37 * hash) + HAS_TEXT_VARIABLE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextVariableAnchor());
          hash = (37 * hash) + TEXT_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + textAnchor_;
          hash = (37 * hash) + HAS_TEXT_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextAnchor());
          if (hasTextMaxAngle()) {
            hash = (37 * hash) + TEXT_MAX_ANGLE_FIELD_NUMBER;
            hash = (53 * hash) + getTextMaxAngle().hashCode();
          }
          if (hasTextRotate()) {
            hash = (37 * hash) + TEXT_ROTATE_FIELD_NUMBER;
            hash = (53 * hash) + getTextRotate().hashCode();
          }
          if (hasTextPadding()) {
            hash = (37 * hash) + TEXT_PADDING_FIELD_NUMBER;
            hash = (53 * hash) + getTextPadding().hashCode();
          }
          if (hasTextKeepUpright()) {
            hash = (37 * hash) + TEXT_KEEP_UPRIGHT_FIELD_NUMBER;
            hash = (53 * hash) + getTextKeepUpright().hashCode();
          }
          hash = (37 * hash) + TEXT_TRANSFORM_FIELD_NUMBER;
          hash = (53 * hash) + textTransform_;
          hash = (37 * hash) + HAS_TEXT_TRANSFORM_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextTransform());
          if (getTextOffsetCount() > 0) {
            hash = (37 * hash) + TEXT_OFFSET_FIELD_NUMBER;
            hash = (53 * hash) + getTextOffsetList().hashCode();
          }
          hash = (37 * hash) + HAS_TEXT_OFFSET_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextOffset());
          if (hasTextAllowOverlap()) {
            hash = (37 * hash) + TEXT_ALLOW_OVERLAP_FIELD_NUMBER;
            hash = (53 * hash) + getTextAllowOverlap().hashCode();
          }
          if (hasTextIgnorePlacement()) {
            hash = (37 * hash) + TEXT_IGNORE_PLACEMENT_FIELD_NUMBER;
            hash = (53 * hash) + getTextIgnorePlacement().hashCode();
          }
          if (hasTextOptional()) {
            hash = (37 * hash) + TEXT_OPTIONAL_FIELD_NUMBER;
            hash = (53 * hash) + getTextOptional().hashCode();
          }
          if (hasIconOpacity()) {
            hash = (37 * hash) + ICON_OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getIconOpacity().hashCode();
          }
          if (hasIconColor()) {
            hash = (37 * hash) + ICON_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getIconColor().hashCode();
          }
          if (hasIconHaloColor()) {
            hash = (37 * hash) + ICON_HALO_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getIconHaloColor().hashCode();
          }
          if (hasIconHaloWidth()) {
            hash = (37 * hash) + ICON_HALO_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getIconHaloWidth().hashCode();
          }
          if (hasIconHaloBlur()) {
            hash = (37 * hash) + ICON_HALO_BLUR_FIELD_NUMBER;
            hash = (53 * hash) + getIconHaloBlur().hashCode();
          }
          if (getIconTranslateCount() > 0) {
            hash = (37 * hash) + ICON_TRANSLATE_FIELD_NUMBER;
            hash = (53 * hash) + getIconTranslateList().hashCode();
          }
          hash = (37 * hash) + HAS_ICON_TRANSLATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIconTranslate());
          hash = (37 * hash) + ICON_TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + iconTranslateAnchor_;
          hash = (37 * hash) + HAS_ICON_TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasIconTranslateAnchor());
          if (hasTextOpacity()) {
            hash = (37 * hash) + TEXT_OPACITY_FIELD_NUMBER;
            hash = (53 * hash) + getTextOpacity().hashCode();
          }
          if (hasTextColor()) {
            hash = (37 * hash) + TEXT_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTextColor().hashCode();
          }
          if (hasTextHaloColor()) {
            hash = (37 * hash) + TEXT_HALO_COLOR_FIELD_NUMBER;
            hash = (53 * hash) + getTextHaloColor().hashCode();
          }
          if (hasTextHaloWidth()) {
            hash = (37 * hash) + TEXT_HALO_WIDTH_FIELD_NUMBER;
            hash = (53 * hash) + getTextHaloWidth().hashCode();
          }
          if (hasTextHaloBlur()) {
            hash = (37 * hash) + TEXT_HALO_BLUR_FIELD_NUMBER;
            hash = (53 * hash) + getTextHaloBlur().hashCode();
          }
          if (getTextTranslateCount() > 0) {
            hash = (37 * hash) + TEXT_TRANSLATE_FIELD_NUMBER;
            hash = (53 * hash) + getTextTranslateList().hashCode();
          }
          hash = (37 * hash) + HAS_TEXT_TRANSLATE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextTranslate());
          hash = (37 * hash) + TEXT_TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + textTranslateAnchor_;
          hash = (37 * hash) + HAS_TEXT_TRANSLATE_ANCHOR_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHasTextTranslateAnchor());
          if (hasIconOpacityTransition()) {
            hash = (37 * hash) + ICON_OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getIconOpacityTransition().hashCode();
          }
          if (hasIconColorTransition()) {
            hash = (37 * hash) + ICON_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getIconColorTransition().hashCode();
          }
          if (hasIconHaloColorTransition()) {
            hash = (37 * hash) + ICON_HALO_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getIconHaloColorTransition().hashCode();
          }
          if (hasIconHaloWidthTransition()) {
            hash = (37 * hash) + ICON_HALO_WIDTH_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getIconHaloWidthTransition().hashCode();
          }
          if (hasIconHaloBlurTransition()) {
            hash = (37 * hash) + ICON_HALO_BLUR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getIconHaloBlurTransition().hashCode();
          }
          if (hasIconTranslateTransition()) {
            hash = (37 * hash) + ICON_TRANSLATE_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getIconTranslateTransition().hashCode();
          }
          if (hasTextOpacityTransition()) {
            hash = (37 * hash) + TEXT_OPACITY_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTextOpacityTransition().hashCode();
          }
          if (hasTextColorTransition()) {
            hash = (37 * hash) + TEXT_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTextColorTransition().hashCode();
          }
          if (hasTextHaloColorTransition()) {
            hash = (37 * hash) + TEXT_HALO_COLOR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTextHaloColorTransition().hashCode();
          }
          if (hasTextHaloWidthTransition()) {
            hash = (37 * hash) + TEXT_HALO_WIDTH_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTextHaloWidthTransition().hashCode();
          }
          if (hasTextHaloBlurTransition()) {
            hash = (37 * hash) + TEXT_HALO_BLUR_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTextHaloBlurTransition().hashCode();
          }
          if (hasTextTranslateTransition()) {
            hash = (37 * hash) + TEXT_TRANSLATE_TRANSITION_FIELD_NUMBER;
            hash = (53 * hash) + getTextTranslateTransition().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update.Symbol}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update.Symbol)
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.SymbolOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.Builder.class);
          }

          // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getTextFieldFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (visibleBuilder_ == null) {
              visible_ = null;
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }
            symbolPlacement_ = 0;

            hasSymbolPlacement_ = false;

            if (symbolSpacingBuilder_ == null) {
              symbolSpacing_ = null;
            } else {
              symbolSpacing_ = null;
              symbolSpacingBuilder_ = null;
            }
            if (symbolAvoidEdgesBuilder_ == null) {
              symbolAvoidEdges_ = null;
            } else {
              symbolAvoidEdges_ = null;
              symbolAvoidEdgesBuilder_ = null;
            }
            symbolZOrder_ = 0;

            hasSymbolZOrder_ = false;

            if (iconAllowOverlapBuilder_ == null) {
              iconAllowOverlap_ = null;
            } else {
              iconAllowOverlap_ = null;
              iconAllowOverlapBuilder_ = null;
            }
            if (iconIgnorePlacementBuilder_ == null) {
              iconIgnorePlacement_ = null;
            } else {
              iconIgnorePlacement_ = null;
              iconIgnorePlacementBuilder_ = null;
            }
            if (iconOptionalBuilder_ == null) {
              iconOptional_ = null;
            } else {
              iconOptional_ = null;
              iconOptionalBuilder_ = null;
            }
            iconRotationAlignment_ = 0;

            hasIconRotationAlignment_ = false;

            if (iconSizeBuilder_ == null) {
              iconSize_ = null;
            } else {
              iconSize_ = null;
              iconSizeBuilder_ = null;
            }
            iconTextFit_ = 0;

            hasIconTextFit_ = false;

            iconTextFitPadding_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00020000);
            hasIconTextFitPadding_ = false;

            if (iconImageBuilder_ == null) {
              iconImage_ = null;
            } else {
              iconImage_ = null;
              iconImageBuilder_ = null;
            }
            if (iconRotateBuilder_ == null) {
              iconRotate_ = null;
            } else {
              iconRotate_ = null;
              iconRotateBuilder_ = null;
            }
            if (iconPaddingBuilder_ == null) {
              iconPadding_ = null;
            } else {
              iconPadding_ = null;
              iconPaddingBuilder_ = null;
            }
            if (iconKeepUprightBuilder_ == null) {
              iconKeepUpright_ = null;
            } else {
              iconKeepUpright_ = null;
              iconKeepUprightBuilder_ = null;
            }
            iconOffset_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00800000);
            hasIconOffset_ = false;

            iconAnchor_ = 0;

            hasIconAnchor_ = false;

            iconPitchAlignment_ = 0;

            hasIconPitchAlignment_ = false;

            textPitchAlignment_ = 0;

            hasTextPitchAlignment_ = false;

            textRotationAlignment_ = 0;

            hasTextRotationAlignment_ = false;

            if (textFieldBuilder_ == null) {
              textField_ = java.util.Collections.emptyList();
              bitField1_ = (bitField1_ & ~0x00000002);
            } else {
              textFieldBuilder_.clear();
            }
            hasTextField_ = false;

            textFont_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField1_ = (bitField1_ & ~0x00000008);
            hasTextFont_ = false;

            if (textSizeBuilder_ == null) {
              textSize_ = null;
            } else {
              textSize_ = null;
              textSizeBuilder_ = null;
            }
            if (textMaxWidthBuilder_ == null) {
              textMaxWidth_ = null;
            } else {
              textMaxWidth_ = null;
              textMaxWidthBuilder_ = null;
            }
            if (textLineHeightBuilder_ == null) {
              textLineHeight_ = null;
            } else {
              textLineHeight_ = null;
              textLineHeightBuilder_ = null;
            }
            if (textLetterSpacingBuilder_ == null) {
              textLetterSpacing_ = null;
            } else {
              textLetterSpacing_ = null;
              textLetterSpacingBuilder_ = null;
            }
            textJustify_ = 0;

            hasTextJustify_ = false;

            if (textRadialOffsetBuilder_ == null) {
              textRadialOffset_ = null;
            } else {
              textRadialOffset_ = null;
              textRadialOffsetBuilder_ = null;
            }
            textVariableAnchor_ = java.util.Collections.emptyList();
            bitField1_ = (bitField1_ & ~0x00001000);
            hasTextVariableAnchor_ = false;

            textAnchor_ = 0;

            hasTextAnchor_ = false;

            if (textMaxAngleBuilder_ == null) {
              textMaxAngle_ = null;
            } else {
              textMaxAngle_ = null;
              textMaxAngleBuilder_ = null;
            }
            if (textRotateBuilder_ == null) {
              textRotate_ = null;
            } else {
              textRotate_ = null;
              textRotateBuilder_ = null;
            }
            if (textPaddingBuilder_ == null) {
              textPadding_ = null;
            } else {
              textPadding_ = null;
              textPaddingBuilder_ = null;
            }
            if (textKeepUprightBuilder_ == null) {
              textKeepUpright_ = null;
            } else {
              textKeepUpright_ = null;
              textKeepUprightBuilder_ = null;
            }
            textTransform_ = 0;

            hasTextTransform_ = false;

            textOffset_ = emptyFloatList();
            bitField1_ = (bitField1_ & ~0x00400000);
            hasTextOffset_ = false;

            if (textAllowOverlapBuilder_ == null) {
              textAllowOverlap_ = null;
            } else {
              textAllowOverlap_ = null;
              textAllowOverlapBuilder_ = null;
            }
            if (textIgnorePlacementBuilder_ == null) {
              textIgnorePlacement_ = null;
            } else {
              textIgnorePlacement_ = null;
              textIgnorePlacementBuilder_ = null;
            }
            if (textOptionalBuilder_ == null) {
              textOptional_ = null;
            } else {
              textOptional_ = null;
              textOptionalBuilder_ = null;
            }
            if (iconOpacityBuilder_ == null) {
              iconOpacity_ = null;
            } else {
              iconOpacity_ = null;
              iconOpacityBuilder_ = null;
            }
            if (iconColorBuilder_ == null) {
              iconColor_ = null;
            } else {
              iconColor_ = null;
              iconColorBuilder_ = null;
            }
            if (iconHaloColorBuilder_ == null) {
              iconHaloColor_ = null;
            } else {
              iconHaloColor_ = null;
              iconHaloColorBuilder_ = null;
            }
            if (iconHaloWidthBuilder_ == null) {
              iconHaloWidth_ = null;
            } else {
              iconHaloWidth_ = null;
              iconHaloWidthBuilder_ = null;
            }
            if (iconHaloBlurBuilder_ == null) {
              iconHaloBlur_ = null;
            } else {
              iconHaloBlur_ = null;
              iconHaloBlurBuilder_ = null;
            }
            iconTranslate_ = emptyFloatList();
            bitField2_ = (bitField2_ & ~0x00000001);
            hasIconTranslate_ = false;

            iconTranslateAnchor_ = 0;

            hasIconTranslateAnchor_ = false;

            if (textOpacityBuilder_ == null) {
              textOpacity_ = null;
            } else {
              textOpacity_ = null;
              textOpacityBuilder_ = null;
            }
            if (textColorBuilder_ == null) {
              textColor_ = null;
            } else {
              textColor_ = null;
              textColorBuilder_ = null;
            }
            if (textHaloColorBuilder_ == null) {
              textHaloColor_ = null;
            } else {
              textHaloColor_ = null;
              textHaloColorBuilder_ = null;
            }
            if (textHaloWidthBuilder_ == null) {
              textHaloWidth_ = null;
            } else {
              textHaloWidth_ = null;
              textHaloWidthBuilder_ = null;
            }
            if (textHaloBlurBuilder_ == null) {
              textHaloBlur_ = null;
            } else {
              textHaloBlur_ = null;
              textHaloBlurBuilder_ = null;
            }
            textTranslate_ = emptyFloatList();
            bitField2_ = (bitField2_ & ~0x00000200);
            hasTextTranslate_ = false;

            textTranslateAnchor_ = 0;

            hasTextTranslateAnchor_ = false;

            if (iconOpacityTransitionBuilder_ == null) {
              iconOpacityTransition_ = null;
            } else {
              iconOpacityTransition_ = null;
              iconOpacityTransitionBuilder_ = null;
            }
            if (iconColorTransitionBuilder_ == null) {
              iconColorTransition_ = null;
            } else {
              iconColorTransition_ = null;
              iconColorTransitionBuilder_ = null;
            }
            if (iconHaloColorTransitionBuilder_ == null) {
              iconHaloColorTransition_ = null;
            } else {
              iconHaloColorTransition_ = null;
              iconHaloColorTransitionBuilder_ = null;
            }
            if (iconHaloWidthTransitionBuilder_ == null) {
              iconHaloWidthTransition_ = null;
            } else {
              iconHaloWidthTransition_ = null;
              iconHaloWidthTransitionBuilder_ = null;
            }
            if (iconHaloBlurTransitionBuilder_ == null) {
              iconHaloBlurTransition_ = null;
            } else {
              iconHaloBlurTransition_ = null;
              iconHaloBlurTransitionBuilder_ = null;
            }
            if (iconTranslateTransitionBuilder_ == null) {
              iconTranslateTransition_ = null;
            } else {
              iconTranslateTransition_ = null;
              iconTranslateTransitionBuilder_ = null;
            }
            if (textOpacityTransitionBuilder_ == null) {
              textOpacityTransition_ = null;
            } else {
              textOpacityTransition_ = null;
              textOpacityTransitionBuilder_ = null;
            }
            if (textColorTransitionBuilder_ == null) {
              textColorTransition_ = null;
            } else {
              textColorTransition_ = null;
              textColorTransitionBuilder_ = null;
            }
            if (textHaloColorTransitionBuilder_ == null) {
              textHaloColorTransition_ = null;
            } else {
              textHaloColorTransition_ = null;
              textHaloColorTransitionBuilder_ = null;
            }
            if (textHaloWidthTransitionBuilder_ == null) {
              textHaloWidthTransition_ = null;
            } else {
              textHaloWidthTransition_ = null;
              textHaloWidthTransitionBuilder_ = null;
            }
            if (textHaloBlurTransitionBuilder_ == null) {
              textHaloBlurTransition_ = null;
            } else {
              textHaloBlurTransition_ = null;
              textHaloBlurTransitionBuilder_ = null;
            }
            if (textTranslateTransitionBuilder_ == null) {
              textTranslateTransition_ = null;
            } else {
              textTranslateTransition_ = null;
              textTranslateTransitionBuilder_ = null;
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_descriptor;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol getDefaultInstanceForType() {
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance();
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol build() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol buildPartial() {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol(this);
            int from_bitField0_ = bitField0_;
            int from_bitField1_ = bitField1_;
            int from_bitField2_ = bitField2_;
            int to_bitField0_ = 0;
            int to_bitField1_ = 0;
            int to_bitField2_ = 0;
            if (visibleBuilder_ == null) {
              result.visible_ = visible_;
            } else {
              result.visible_ = visibleBuilder_.build();
            }
            if (minZoomBuilder_ == null) {
              result.minZoom_ = minZoom_;
            } else {
              result.minZoom_ = minZoomBuilder_.build();
            }
            if (maxZoomBuilder_ == null) {
              result.maxZoom_ = maxZoom_;
            } else {
              result.maxZoom_ = maxZoomBuilder_.build();
            }
            result.symbolPlacement_ = symbolPlacement_;
            result.hasSymbolPlacement_ = hasSymbolPlacement_;
            if (symbolSpacingBuilder_ == null) {
              result.symbolSpacing_ = symbolSpacing_;
            } else {
              result.symbolSpacing_ = symbolSpacingBuilder_.build();
            }
            if (symbolAvoidEdgesBuilder_ == null) {
              result.symbolAvoidEdges_ = symbolAvoidEdges_;
            } else {
              result.symbolAvoidEdges_ = symbolAvoidEdgesBuilder_.build();
            }
            result.symbolZOrder_ = symbolZOrder_;
            result.hasSymbolZOrder_ = hasSymbolZOrder_;
            if (iconAllowOverlapBuilder_ == null) {
              result.iconAllowOverlap_ = iconAllowOverlap_;
            } else {
              result.iconAllowOverlap_ = iconAllowOverlapBuilder_.build();
            }
            if (iconIgnorePlacementBuilder_ == null) {
              result.iconIgnorePlacement_ = iconIgnorePlacement_;
            } else {
              result.iconIgnorePlacement_ = iconIgnorePlacementBuilder_.build();
            }
            if (iconOptionalBuilder_ == null) {
              result.iconOptional_ = iconOptional_;
            } else {
              result.iconOptional_ = iconOptionalBuilder_.build();
            }
            result.iconRotationAlignment_ = iconRotationAlignment_;
            result.hasIconRotationAlignment_ = hasIconRotationAlignment_;
            if (iconSizeBuilder_ == null) {
              result.iconSize_ = iconSize_;
            } else {
              result.iconSize_ = iconSizeBuilder_.build();
            }
            result.iconTextFit_ = iconTextFit_;
            result.hasIconTextFit_ = hasIconTextFit_;
            if (((bitField0_ & 0x00020000) != 0)) {
              iconTextFitPadding_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00020000);
            }
            result.iconTextFitPadding_ = iconTextFitPadding_;
            result.hasIconTextFitPadding_ = hasIconTextFitPadding_;
            if (iconImageBuilder_ == null) {
              result.iconImage_ = iconImage_;
            } else {
              result.iconImage_ = iconImageBuilder_.build();
            }
            if (iconRotateBuilder_ == null) {
              result.iconRotate_ = iconRotate_;
            } else {
              result.iconRotate_ = iconRotateBuilder_.build();
            }
            if (iconPaddingBuilder_ == null) {
              result.iconPadding_ = iconPadding_;
            } else {
              result.iconPadding_ = iconPaddingBuilder_.build();
            }
            if (iconKeepUprightBuilder_ == null) {
              result.iconKeepUpright_ = iconKeepUpright_;
            } else {
              result.iconKeepUpright_ = iconKeepUprightBuilder_.build();
            }
            if (((bitField0_ & 0x00800000) != 0)) {
              iconOffset_.makeImmutable();
              bitField0_ = (bitField0_ & ~0x00800000);
            }
            result.iconOffset_ = iconOffset_;
            result.hasIconOffset_ = hasIconOffset_;
            result.iconAnchor_ = iconAnchor_;
            result.hasIconAnchor_ = hasIconAnchor_;
            result.iconPitchAlignment_ = iconPitchAlignment_;
            result.hasIconPitchAlignment_ = hasIconPitchAlignment_;
            result.textPitchAlignment_ = textPitchAlignment_;
            result.hasTextPitchAlignment_ = hasTextPitchAlignment_;
            result.textRotationAlignment_ = textRotationAlignment_;
            result.hasTextRotationAlignment_ = hasTextRotationAlignment_;
            if (textFieldBuilder_ == null) {
              if (((bitField1_ & 0x00000002) != 0)) {
                textField_ = java.util.Collections.unmodifiableList(textField_);
                bitField1_ = (bitField1_ & ~0x00000002);
              }
              result.textField_ = textField_;
            } else {
              result.textField_ = textFieldBuilder_.build();
            }
            result.hasTextField_ = hasTextField_;
            if (((bitField1_ & 0x00000008) != 0)) {
              textFont_ = textFont_.getUnmodifiableView();
              bitField1_ = (bitField1_ & ~0x00000008);
            }
            result.textFont_ = textFont_;
            result.hasTextFont_ = hasTextFont_;
            if (textSizeBuilder_ == null) {
              result.textSize_ = textSize_;
            } else {
              result.textSize_ = textSizeBuilder_.build();
            }
            if (textMaxWidthBuilder_ == null) {
              result.textMaxWidth_ = textMaxWidth_;
            } else {
              result.textMaxWidth_ = textMaxWidthBuilder_.build();
            }
            if (textLineHeightBuilder_ == null) {
              result.textLineHeight_ = textLineHeight_;
            } else {
              result.textLineHeight_ = textLineHeightBuilder_.build();
            }
            if (textLetterSpacingBuilder_ == null) {
              result.textLetterSpacing_ = textLetterSpacing_;
            } else {
              result.textLetterSpacing_ = textLetterSpacingBuilder_.build();
            }
            result.textJustify_ = textJustify_;
            result.hasTextJustify_ = hasTextJustify_;
            if (textRadialOffsetBuilder_ == null) {
              result.textRadialOffset_ = textRadialOffset_;
            } else {
              result.textRadialOffset_ = textRadialOffsetBuilder_.build();
            }
            if (((bitField1_ & 0x00001000) != 0)) {
              textVariableAnchor_ = java.util.Collections.unmodifiableList(textVariableAnchor_);
              bitField1_ = (bitField1_ & ~0x00001000);
            }
            result.textVariableAnchor_ = textVariableAnchor_;
            result.hasTextVariableAnchor_ = hasTextVariableAnchor_;
            result.textAnchor_ = textAnchor_;
            result.hasTextAnchor_ = hasTextAnchor_;
            if (textMaxAngleBuilder_ == null) {
              result.textMaxAngle_ = textMaxAngle_;
            } else {
              result.textMaxAngle_ = textMaxAngleBuilder_.build();
            }
            if (textRotateBuilder_ == null) {
              result.textRotate_ = textRotate_;
            } else {
              result.textRotate_ = textRotateBuilder_.build();
            }
            if (textPaddingBuilder_ == null) {
              result.textPadding_ = textPadding_;
            } else {
              result.textPadding_ = textPaddingBuilder_.build();
            }
            if (textKeepUprightBuilder_ == null) {
              result.textKeepUpright_ = textKeepUpright_;
            } else {
              result.textKeepUpright_ = textKeepUprightBuilder_.build();
            }
            result.textTransform_ = textTransform_;
            result.hasTextTransform_ = hasTextTransform_;
            if (((bitField1_ & 0x00400000) != 0)) {
              textOffset_.makeImmutable();
              bitField1_ = (bitField1_ & ~0x00400000);
            }
            result.textOffset_ = textOffset_;
            result.hasTextOffset_ = hasTextOffset_;
            if (textAllowOverlapBuilder_ == null) {
              result.textAllowOverlap_ = textAllowOverlap_;
            } else {
              result.textAllowOverlap_ = textAllowOverlapBuilder_.build();
            }
            if (textIgnorePlacementBuilder_ == null) {
              result.textIgnorePlacement_ = textIgnorePlacement_;
            } else {
              result.textIgnorePlacement_ = textIgnorePlacementBuilder_.build();
            }
            if (textOptionalBuilder_ == null) {
              result.textOptional_ = textOptional_;
            } else {
              result.textOptional_ = textOptionalBuilder_.build();
            }
            if (iconOpacityBuilder_ == null) {
              result.iconOpacity_ = iconOpacity_;
            } else {
              result.iconOpacity_ = iconOpacityBuilder_.build();
            }
            if (iconColorBuilder_ == null) {
              result.iconColor_ = iconColor_;
            } else {
              result.iconColor_ = iconColorBuilder_.build();
            }
            if (iconHaloColorBuilder_ == null) {
              result.iconHaloColor_ = iconHaloColor_;
            } else {
              result.iconHaloColor_ = iconHaloColorBuilder_.build();
            }
            if (iconHaloWidthBuilder_ == null) {
              result.iconHaloWidth_ = iconHaloWidth_;
            } else {
              result.iconHaloWidth_ = iconHaloWidthBuilder_.build();
            }
            if (iconHaloBlurBuilder_ == null) {
              result.iconHaloBlur_ = iconHaloBlur_;
            } else {
              result.iconHaloBlur_ = iconHaloBlurBuilder_.build();
            }
            if (((bitField2_ & 0x00000001) != 0)) {
              iconTranslate_.makeImmutable();
              bitField2_ = (bitField2_ & ~0x00000001);
            }
            result.iconTranslate_ = iconTranslate_;
            result.hasIconTranslate_ = hasIconTranslate_;
            result.iconTranslateAnchor_ = iconTranslateAnchor_;
            result.hasIconTranslateAnchor_ = hasIconTranslateAnchor_;
            if (textOpacityBuilder_ == null) {
              result.textOpacity_ = textOpacity_;
            } else {
              result.textOpacity_ = textOpacityBuilder_.build();
            }
            if (textColorBuilder_ == null) {
              result.textColor_ = textColor_;
            } else {
              result.textColor_ = textColorBuilder_.build();
            }
            if (textHaloColorBuilder_ == null) {
              result.textHaloColor_ = textHaloColor_;
            } else {
              result.textHaloColor_ = textHaloColorBuilder_.build();
            }
            if (textHaloWidthBuilder_ == null) {
              result.textHaloWidth_ = textHaloWidth_;
            } else {
              result.textHaloWidth_ = textHaloWidthBuilder_.build();
            }
            if (textHaloBlurBuilder_ == null) {
              result.textHaloBlur_ = textHaloBlur_;
            } else {
              result.textHaloBlur_ = textHaloBlurBuilder_.build();
            }
            if (((bitField2_ & 0x00000200) != 0)) {
              textTranslate_.makeImmutable();
              bitField2_ = (bitField2_ & ~0x00000200);
            }
            result.textTranslate_ = textTranslate_;
            result.hasTextTranslate_ = hasTextTranslate_;
            result.textTranslateAnchor_ = textTranslateAnchor_;
            result.hasTextTranslateAnchor_ = hasTextTranslateAnchor_;
            if (iconOpacityTransitionBuilder_ == null) {
              result.iconOpacityTransition_ = iconOpacityTransition_;
            } else {
              result.iconOpacityTransition_ = iconOpacityTransitionBuilder_.build();
            }
            if (iconColorTransitionBuilder_ == null) {
              result.iconColorTransition_ = iconColorTransition_;
            } else {
              result.iconColorTransition_ = iconColorTransitionBuilder_.build();
            }
            if (iconHaloColorTransitionBuilder_ == null) {
              result.iconHaloColorTransition_ = iconHaloColorTransition_;
            } else {
              result.iconHaloColorTransition_ = iconHaloColorTransitionBuilder_.build();
            }
            if (iconHaloWidthTransitionBuilder_ == null) {
              result.iconHaloWidthTransition_ = iconHaloWidthTransition_;
            } else {
              result.iconHaloWidthTransition_ = iconHaloWidthTransitionBuilder_.build();
            }
            if (iconHaloBlurTransitionBuilder_ == null) {
              result.iconHaloBlurTransition_ = iconHaloBlurTransition_;
            } else {
              result.iconHaloBlurTransition_ = iconHaloBlurTransitionBuilder_.build();
            }
            if (iconTranslateTransitionBuilder_ == null) {
              result.iconTranslateTransition_ = iconTranslateTransition_;
            } else {
              result.iconTranslateTransition_ = iconTranslateTransitionBuilder_.build();
            }
            if (textOpacityTransitionBuilder_ == null) {
              result.textOpacityTransition_ = textOpacityTransition_;
            } else {
              result.textOpacityTransition_ = textOpacityTransitionBuilder_.build();
            }
            if (textColorTransitionBuilder_ == null) {
              result.textColorTransition_ = textColorTransition_;
            } else {
              result.textColorTransition_ = textColorTransitionBuilder_.build();
            }
            if (textHaloColorTransitionBuilder_ == null) {
              result.textHaloColorTransition_ = textHaloColorTransition_;
            } else {
              result.textHaloColorTransition_ = textHaloColorTransitionBuilder_.build();
            }
            if (textHaloWidthTransitionBuilder_ == null) {
              result.textHaloWidthTransition_ = textHaloWidthTransition_;
            } else {
              result.textHaloWidthTransition_ = textHaloWidthTransitionBuilder_.build();
            }
            if (textHaloBlurTransitionBuilder_ == null) {
              result.textHaloBlurTransition_ = textHaloBlurTransition_;
            } else {
              result.textHaloBlurTransition_ = textHaloBlurTransitionBuilder_.build();
            }
            if (textTranslateTransitionBuilder_ == null) {
              result.textTranslateTransition_ = textTranslateTransition_;
            } else {
              result.textTranslateTransition_ = textTranslateTransitionBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            result.bitField1_ = to_bitField1_;
            result.bitField2_ = to_bitField2_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) {
              return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol other) {
            if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance()) return this;
            if (other.hasVisible()) {
              mergeVisible(other.getVisible());
            }
            if (other.hasMinZoom()) {
              mergeMinZoom(other.getMinZoom());
            }
            if (other.hasMaxZoom()) {
              mergeMaxZoom(other.getMaxZoom());
            }
            if (other.symbolPlacement_ != 0) {
              setSymbolPlacementValue(other.getSymbolPlacementValue());
            }
            if (other.getHasSymbolPlacement() != false) {
              setHasSymbolPlacement(other.getHasSymbolPlacement());
            }
            if (other.hasSymbolSpacing()) {
              mergeSymbolSpacing(other.getSymbolSpacing());
            }
            if (other.hasSymbolAvoidEdges()) {
              mergeSymbolAvoidEdges(other.getSymbolAvoidEdges());
            }
            if (other.symbolZOrder_ != 0) {
              setSymbolZOrderValue(other.getSymbolZOrderValue());
            }
            if (other.getHasSymbolZOrder() != false) {
              setHasSymbolZOrder(other.getHasSymbolZOrder());
            }
            if (other.hasIconAllowOverlap()) {
              mergeIconAllowOverlap(other.getIconAllowOverlap());
            }
            if (other.hasIconIgnorePlacement()) {
              mergeIconIgnorePlacement(other.getIconIgnorePlacement());
            }
            if (other.hasIconOptional()) {
              mergeIconOptional(other.getIconOptional());
            }
            if (other.iconRotationAlignment_ != 0) {
              setIconRotationAlignmentValue(other.getIconRotationAlignmentValue());
            }
            if (other.getHasIconRotationAlignment() != false) {
              setHasIconRotationAlignment(other.getHasIconRotationAlignment());
            }
            if (other.hasIconSize()) {
              mergeIconSize(other.getIconSize());
            }
            if (other.iconTextFit_ != 0) {
              setIconTextFitValue(other.getIconTextFitValue());
            }
            if (other.getHasIconTextFit() != false) {
              setHasIconTextFit(other.getHasIconTextFit());
            }
            if (!other.iconTextFitPadding_.isEmpty()) {
              if (iconTextFitPadding_.isEmpty()) {
                iconTextFitPadding_ = other.iconTextFitPadding_;
                bitField0_ = (bitField0_ & ~0x00020000);
              } else {
                ensureIconTextFitPaddingIsMutable();
                iconTextFitPadding_.addAll(other.iconTextFitPadding_);
              }
              onChanged();
            }
            if (other.getHasIconTextFitPadding() != false) {
              setHasIconTextFitPadding(other.getHasIconTextFitPadding());
            }
            if (other.hasIconImage()) {
              mergeIconImage(other.getIconImage());
            }
            if (other.hasIconRotate()) {
              mergeIconRotate(other.getIconRotate());
            }
            if (other.hasIconPadding()) {
              mergeIconPadding(other.getIconPadding());
            }
            if (other.hasIconKeepUpright()) {
              mergeIconKeepUpright(other.getIconKeepUpright());
            }
            if (!other.iconOffset_.isEmpty()) {
              if (iconOffset_.isEmpty()) {
                iconOffset_ = other.iconOffset_;
                bitField0_ = (bitField0_ & ~0x00800000);
              } else {
                ensureIconOffsetIsMutable();
                iconOffset_.addAll(other.iconOffset_);
              }
              onChanged();
            }
            if (other.getHasIconOffset() != false) {
              setHasIconOffset(other.getHasIconOffset());
            }
            if (other.iconAnchor_ != 0) {
              setIconAnchorValue(other.getIconAnchorValue());
            }
            if (other.getHasIconAnchor() != false) {
              setHasIconAnchor(other.getHasIconAnchor());
            }
            if (other.iconPitchAlignment_ != 0) {
              setIconPitchAlignmentValue(other.getIconPitchAlignmentValue());
            }
            if (other.getHasIconPitchAlignment() != false) {
              setHasIconPitchAlignment(other.getHasIconPitchAlignment());
            }
            if (other.textPitchAlignment_ != 0) {
              setTextPitchAlignmentValue(other.getTextPitchAlignmentValue());
            }
            if (other.getHasTextPitchAlignment() != false) {
              setHasTextPitchAlignment(other.getHasTextPitchAlignment());
            }
            if (other.textRotationAlignment_ != 0) {
              setTextRotationAlignmentValue(other.getTextRotationAlignmentValue());
            }
            if (other.getHasTextRotationAlignment() != false) {
              setHasTextRotationAlignment(other.getHasTextRotationAlignment());
            }
            if (textFieldBuilder_ == null) {
              if (!other.textField_.isEmpty()) {
                if (textField_.isEmpty()) {
                  textField_ = other.textField_;
                  bitField1_ = (bitField1_ & ~0x00000002);
                } else {
                  ensureTextFieldIsMutable();
                  textField_.addAll(other.textField_);
                }
                onChanged();
              }
            } else {
              if (!other.textField_.isEmpty()) {
                if (textFieldBuilder_.isEmpty()) {
                  textFieldBuilder_.dispose();
                  textFieldBuilder_ = null;
                  textField_ = other.textField_;
                  bitField1_ = (bitField1_ & ~0x00000002);
                  textFieldBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getTextFieldFieldBuilder() : null;
                } else {
                  textFieldBuilder_.addAllMessages(other.textField_);
                }
              }
            }
            if (other.getHasTextField() != false) {
              setHasTextField(other.getHasTextField());
            }
            if (!other.textFont_.isEmpty()) {
              if (textFont_.isEmpty()) {
                textFont_ = other.textFont_;
                bitField1_ = (bitField1_ & ~0x00000008);
              } else {
                ensureTextFontIsMutable();
                textFont_.addAll(other.textFont_);
              }
              onChanged();
            }
            if (other.getHasTextFont() != false) {
              setHasTextFont(other.getHasTextFont());
            }
            if (other.hasTextSize()) {
              mergeTextSize(other.getTextSize());
            }
            if (other.hasTextMaxWidth()) {
              mergeTextMaxWidth(other.getTextMaxWidth());
            }
            if (other.hasTextLineHeight()) {
              mergeTextLineHeight(other.getTextLineHeight());
            }
            if (other.hasTextLetterSpacing()) {
              mergeTextLetterSpacing(other.getTextLetterSpacing());
            }
            if (other.textJustify_ != 0) {
              setTextJustifyValue(other.getTextJustifyValue());
            }
            if (other.getHasTextJustify() != false) {
              setHasTextJustify(other.getHasTextJustify());
            }
            if (other.hasTextRadialOffset()) {
              mergeTextRadialOffset(other.getTextRadialOffset());
            }
            if (!other.textVariableAnchor_.isEmpty()) {
              if (textVariableAnchor_.isEmpty()) {
                textVariableAnchor_ = other.textVariableAnchor_;
                bitField1_ = (bitField1_ & ~0x00001000);
              } else {
                ensureTextVariableAnchorIsMutable();
                textVariableAnchor_.addAll(other.textVariableAnchor_);
              }
              onChanged();
            }
            if (other.getHasTextVariableAnchor() != false) {
              setHasTextVariableAnchor(other.getHasTextVariableAnchor());
            }
            if (other.textAnchor_ != 0) {
              setTextAnchorValue(other.getTextAnchorValue());
            }
            if (other.getHasTextAnchor() != false) {
              setHasTextAnchor(other.getHasTextAnchor());
            }
            if (other.hasTextMaxAngle()) {
              mergeTextMaxAngle(other.getTextMaxAngle());
            }
            if (other.hasTextRotate()) {
              mergeTextRotate(other.getTextRotate());
            }
            if (other.hasTextPadding()) {
              mergeTextPadding(other.getTextPadding());
            }
            if (other.hasTextKeepUpright()) {
              mergeTextKeepUpright(other.getTextKeepUpright());
            }
            if (other.textTransform_ != 0) {
              setTextTransformValue(other.getTextTransformValue());
            }
            if (other.getHasTextTransform() != false) {
              setHasTextTransform(other.getHasTextTransform());
            }
            if (!other.textOffset_.isEmpty()) {
              if (textOffset_.isEmpty()) {
                textOffset_ = other.textOffset_;
                bitField1_ = (bitField1_ & ~0x00400000);
              } else {
                ensureTextOffsetIsMutable();
                textOffset_.addAll(other.textOffset_);
              }
              onChanged();
            }
            if (other.getHasTextOffset() != false) {
              setHasTextOffset(other.getHasTextOffset());
            }
            if (other.hasTextAllowOverlap()) {
              mergeTextAllowOverlap(other.getTextAllowOverlap());
            }
            if (other.hasTextIgnorePlacement()) {
              mergeTextIgnorePlacement(other.getTextIgnorePlacement());
            }
            if (other.hasTextOptional()) {
              mergeTextOptional(other.getTextOptional());
            }
            if (other.hasIconOpacity()) {
              mergeIconOpacity(other.getIconOpacity());
            }
            if (other.hasIconColor()) {
              mergeIconColor(other.getIconColor());
            }
            if (other.hasIconHaloColor()) {
              mergeIconHaloColor(other.getIconHaloColor());
            }
            if (other.hasIconHaloWidth()) {
              mergeIconHaloWidth(other.getIconHaloWidth());
            }
            if (other.hasIconHaloBlur()) {
              mergeIconHaloBlur(other.getIconHaloBlur());
            }
            if (!other.iconTranslate_.isEmpty()) {
              if (iconTranslate_.isEmpty()) {
                iconTranslate_ = other.iconTranslate_;
                bitField2_ = (bitField2_ & ~0x00000001);
              } else {
                ensureIconTranslateIsMutable();
                iconTranslate_.addAll(other.iconTranslate_);
              }
              onChanged();
            }
            if (other.getHasIconTranslate() != false) {
              setHasIconTranslate(other.getHasIconTranslate());
            }
            if (other.iconTranslateAnchor_ != 0) {
              setIconTranslateAnchorValue(other.getIconTranslateAnchorValue());
            }
            if (other.getHasIconTranslateAnchor() != false) {
              setHasIconTranslateAnchor(other.getHasIconTranslateAnchor());
            }
            if (other.hasTextOpacity()) {
              mergeTextOpacity(other.getTextOpacity());
            }
            if (other.hasTextColor()) {
              mergeTextColor(other.getTextColor());
            }
            if (other.hasTextHaloColor()) {
              mergeTextHaloColor(other.getTextHaloColor());
            }
            if (other.hasTextHaloWidth()) {
              mergeTextHaloWidth(other.getTextHaloWidth());
            }
            if (other.hasTextHaloBlur()) {
              mergeTextHaloBlur(other.getTextHaloBlur());
            }
            if (!other.textTranslate_.isEmpty()) {
              if (textTranslate_.isEmpty()) {
                textTranslate_ = other.textTranslate_;
                bitField2_ = (bitField2_ & ~0x00000200);
              } else {
                ensureTextTranslateIsMutable();
                textTranslate_.addAll(other.textTranslate_);
              }
              onChanged();
            }
            if (other.getHasTextTranslate() != false) {
              setHasTextTranslate(other.getHasTextTranslate());
            }
            if (other.textTranslateAnchor_ != 0) {
              setTextTranslateAnchorValue(other.getTextTranslateAnchorValue());
            }
            if (other.getHasTextTranslateAnchor() != false) {
              setHasTextTranslateAnchor(other.getHasTextTranslateAnchor());
            }
            if (other.hasIconOpacityTransition()) {
              mergeIconOpacityTransition(other.getIconOpacityTransition());
            }
            if (other.hasIconColorTransition()) {
              mergeIconColorTransition(other.getIconColorTransition());
            }
            if (other.hasIconHaloColorTransition()) {
              mergeIconHaloColorTransition(other.getIconHaloColorTransition());
            }
            if (other.hasIconHaloWidthTransition()) {
              mergeIconHaloWidthTransition(other.getIconHaloWidthTransition());
            }
            if (other.hasIconHaloBlurTransition()) {
              mergeIconHaloBlurTransition(other.getIconHaloBlurTransition());
            }
            if (other.hasIconTranslateTransition()) {
              mergeIconTranslateTransition(other.getIconTranslateTransition());
            }
            if (other.hasTextOpacityTransition()) {
              mergeTextOpacityTransition(other.getTextOpacityTransition());
            }
            if (other.hasTextColorTransition()) {
              mergeTextColorTransition(other.getTextColorTransition());
            }
            if (other.hasTextHaloColorTransition()) {
              mergeTextHaloColorTransition(other.getTextHaloColorTransition());
            }
            if (other.hasTextHaloWidthTransition()) {
              mergeTextHaloWidthTransition(other.getTextHaloWidthTransition());
            }
            if (other.hasTextHaloBlurTransition()) {
              mergeTextHaloBlurTransition(other.getTextHaloBlurTransition());
            }
            if (other.hasTextTranslateTransition()) {
              mergeTextTranslateTransition(other.getTextTranslateTransition());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;
          private int bitField1_;
          private int bitField2_;

          private com.google.protobuf.BoolValue visible_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> visibleBuilder_;
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public boolean hasVisible() {
            return visibleBuilder_ != null || visible_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue getVisible() {
            if (visibleBuilder_ == null) {
              return visible_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            } else {
              return visibleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              visible_ = value;
              onChanged();
            } else {
              visibleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder setVisible(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (visibleBuilder_ == null) {
              visible_ = builderForValue.build();
              onChanged();
            } else {
              visibleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder mergeVisible(com.google.protobuf.BoolValue value) {
            if (visibleBuilder_ == null) {
              if (visible_ != null) {
                visible_ =
                  com.google.protobuf.BoolValue.newBuilder(visible_).mergeFrom(value).buildPartial();
              } else {
                visible_ = value;
              }
              onChanged();
            } else {
              visibleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public Builder clearVisible() {
            if (visibleBuilder_ == null) {
              visible_ = null;
              onChanged();
            } else {
              visible_ = null;
              visibleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValue.Builder getVisibleBuilder() {
            
            onChanged();
            return getVisibleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getVisibleOrBuilder() {
            if (visibleBuilder_ != null) {
              return visibleBuilder_.getMessageOrBuilder();
            } else {
              return visible_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : visible_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue visible = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getVisibleFieldBuilder() {
            if (visibleBuilder_ == null) {
              visibleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getVisible(),
                      getParentForChildren(),
                      isClean());
              visible_ = null;
            }
            return visibleBuilder_;
          }

          private com.google.protobuf.FloatValue minZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> minZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public boolean hasMinZoom() {
            return minZoomBuilder_ != null || minZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue getMinZoom() {
            if (minZoomBuilder_ == null) {
              return minZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            } else {
              return minZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              minZoom_ = value;
              onChanged();
            } else {
              minZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder setMinZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (minZoomBuilder_ == null) {
              minZoom_ = builderForValue.build();
              onChanged();
            } else {
              minZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder mergeMinZoom(com.google.protobuf.FloatValue value) {
            if (minZoomBuilder_ == null) {
              if (minZoom_ != null) {
                minZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(minZoom_).mergeFrom(value).buildPartial();
              } else {
                minZoom_ = value;
              }
              onChanged();
            } else {
              minZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public Builder clearMinZoom() {
            if (minZoomBuilder_ == null) {
              minZoom_ = null;
              onChanged();
            } else {
              minZoom_ = null;
              minZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMinZoomBuilder() {
            
            onChanged();
            return getMinZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMinZoomOrBuilder() {
            if (minZoomBuilder_ != null) {
              return minZoomBuilder_.getMessageOrBuilder();
            } else {
              return minZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : minZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue min_zoom = 2;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMinZoomFieldBuilder() {
            if (minZoomBuilder_ == null) {
              minZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMinZoom(),
                      getParentForChildren(),
                      isClean());
              minZoom_ = null;
            }
            return minZoomBuilder_;
          }

          private com.google.protobuf.FloatValue maxZoom_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> maxZoomBuilder_;
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public boolean hasMaxZoom() {
            return maxZoomBuilder_ != null || maxZoom_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue getMaxZoom() {
            if (maxZoomBuilder_ == null) {
              return maxZoom_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            } else {
              return maxZoomBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              maxZoom_ = value;
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder setMaxZoom(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = builderForValue.build();
              onChanged();
            } else {
              maxZoomBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder mergeMaxZoom(com.google.protobuf.FloatValue value) {
            if (maxZoomBuilder_ == null) {
              if (maxZoom_ != null) {
                maxZoom_ =
                  com.google.protobuf.FloatValue.newBuilder(maxZoom_).mergeFrom(value).buildPartial();
              } else {
                maxZoom_ = value;
              }
              onChanged();
            } else {
              maxZoomBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public Builder clearMaxZoom() {
            if (maxZoomBuilder_ == null) {
              maxZoom_ = null;
              onChanged();
            } else {
              maxZoom_ = null;
              maxZoomBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValue.Builder getMaxZoomBuilder() {
            
            onChanged();
            return getMaxZoomFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getMaxZoomOrBuilder() {
            if (maxZoomBuilder_ != null) {
              return maxZoomBuilder_.getMessageOrBuilder();
            } else {
              return maxZoom_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : maxZoom_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue max_zoom = 3;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getMaxZoomFieldBuilder() {
            if (maxZoomBuilder_ == null) {
              maxZoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getMaxZoom(),
                      getParentForChildren(),
                      isClean());
              maxZoom_ = null;
            }
            return maxZoomBuilder_;
          }

          private int symbolPlacement_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
           */
          public int getSymbolPlacementValue() {
            return symbolPlacement_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
           */
          public Builder setSymbolPlacementValue(int value) {
            symbolPlacement_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement getSymbolPlacement() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement.valueOf(symbolPlacement_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
           */
          public Builder setSymbolPlacement(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Placement value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            symbolPlacement_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Placement symbol_placement = 4;</code>
           */
          public Builder clearSymbolPlacement() {
            
            symbolPlacement_ = 0;
            onChanged();
            return this;
          }

          private boolean hasSymbolPlacement_ ;
          /**
           * <code>bool has_symbol_placement = 5;</code>
           */
          public boolean getHasSymbolPlacement() {
            return hasSymbolPlacement_;
          }
          /**
           * <code>bool has_symbol_placement = 5;</code>
           */
          public Builder setHasSymbolPlacement(boolean value) {
            
            hasSymbolPlacement_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_symbol_placement = 5;</code>
           */
          public Builder clearHasSymbolPlacement() {
            
            hasSymbolPlacement_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue symbolSpacing_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> symbolSpacingBuilder_;
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          public boolean hasSymbolSpacing() {
            return symbolSpacingBuilder_ != null || symbolSpacing_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          public com.google.protobuf.FloatValue getSymbolSpacing() {
            if (symbolSpacingBuilder_ == null) {
              return symbolSpacing_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : symbolSpacing_;
            } else {
              return symbolSpacingBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          public Builder setSymbolSpacing(com.google.protobuf.FloatValue value) {
            if (symbolSpacingBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              symbolSpacing_ = value;
              onChanged();
            } else {
              symbolSpacingBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          public Builder setSymbolSpacing(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (symbolSpacingBuilder_ == null) {
              symbolSpacing_ = builderForValue.build();
              onChanged();
            } else {
              symbolSpacingBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          public Builder mergeSymbolSpacing(com.google.protobuf.FloatValue value) {
            if (symbolSpacingBuilder_ == null) {
              if (symbolSpacing_ != null) {
                symbolSpacing_ =
                  com.google.protobuf.FloatValue.newBuilder(symbolSpacing_).mergeFrom(value).buildPartial();
              } else {
                symbolSpacing_ = value;
              }
              onChanged();
            } else {
              symbolSpacingBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          public Builder clearSymbolSpacing() {
            if (symbolSpacingBuilder_ == null) {
              symbolSpacing_ = null;
              onChanged();
            } else {
              symbolSpacing_ = null;
              symbolSpacingBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          public com.google.protobuf.FloatValue.Builder getSymbolSpacingBuilder() {
            
            onChanged();
            return getSymbolSpacingFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getSymbolSpacingOrBuilder() {
            if (symbolSpacingBuilder_ != null) {
              return symbolSpacingBuilder_.getMessageOrBuilder();
            } else {
              return symbolSpacing_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : symbolSpacing_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue symbol_spacing = 6;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getSymbolSpacingFieldBuilder() {
            if (symbolSpacingBuilder_ == null) {
              symbolSpacingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getSymbolSpacing(),
                      getParentForChildren(),
                      isClean());
              symbolSpacing_ = null;
            }
            return symbolSpacingBuilder_;
          }

          private com.google.protobuf.BoolValue symbolAvoidEdges_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> symbolAvoidEdgesBuilder_;
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          public boolean hasSymbolAvoidEdges() {
            return symbolAvoidEdgesBuilder_ != null || symbolAvoidEdges_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          public com.google.protobuf.BoolValue getSymbolAvoidEdges() {
            if (symbolAvoidEdgesBuilder_ == null) {
              return symbolAvoidEdges_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : symbolAvoidEdges_;
            } else {
              return symbolAvoidEdgesBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          public Builder setSymbolAvoidEdges(com.google.protobuf.BoolValue value) {
            if (symbolAvoidEdgesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              symbolAvoidEdges_ = value;
              onChanged();
            } else {
              symbolAvoidEdgesBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          public Builder setSymbolAvoidEdges(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (symbolAvoidEdgesBuilder_ == null) {
              symbolAvoidEdges_ = builderForValue.build();
              onChanged();
            } else {
              symbolAvoidEdgesBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          public Builder mergeSymbolAvoidEdges(com.google.protobuf.BoolValue value) {
            if (symbolAvoidEdgesBuilder_ == null) {
              if (symbolAvoidEdges_ != null) {
                symbolAvoidEdges_ =
                  com.google.protobuf.BoolValue.newBuilder(symbolAvoidEdges_).mergeFrom(value).buildPartial();
              } else {
                symbolAvoidEdges_ = value;
              }
              onChanged();
            } else {
              symbolAvoidEdgesBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          public Builder clearSymbolAvoidEdges() {
            if (symbolAvoidEdgesBuilder_ == null) {
              symbolAvoidEdges_ = null;
              onChanged();
            } else {
              symbolAvoidEdges_ = null;
              symbolAvoidEdgesBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          public com.google.protobuf.BoolValue.Builder getSymbolAvoidEdgesBuilder() {
            
            onChanged();
            return getSymbolAvoidEdgesFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getSymbolAvoidEdgesOrBuilder() {
            if (symbolAvoidEdgesBuilder_ != null) {
              return symbolAvoidEdgesBuilder_.getMessageOrBuilder();
            } else {
              return symbolAvoidEdges_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : symbolAvoidEdges_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue symbol_avoid_edges = 7;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getSymbolAvoidEdgesFieldBuilder() {
            if (symbolAvoidEdgesBuilder_ == null) {
              symbolAvoidEdgesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getSymbolAvoidEdges(),
                      getParentForChildren(),
                      isClean());
              symbolAvoidEdges_ = null;
            }
            return symbolAvoidEdgesBuilder_;
          }

          private int symbolZOrder_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
           */
          public int getSymbolZOrderValue() {
            return symbolZOrder_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
           */
          public Builder setSymbolZOrderValue(int value) {
            symbolZOrder_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder getSymbolZOrder() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder.valueOf(symbolZOrder_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
           */
          public Builder setSymbolZOrder(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.ZOrder value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            symbolZOrder_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.ZOrder symbol_z_order = 8;</code>
           */
          public Builder clearSymbolZOrder() {
            
            symbolZOrder_ = 0;
            onChanged();
            return this;
          }

          private boolean hasSymbolZOrder_ ;
          /**
           * <code>bool has_symbol_z_order = 9;</code>
           */
          public boolean getHasSymbolZOrder() {
            return hasSymbolZOrder_;
          }
          /**
           * <code>bool has_symbol_z_order = 9;</code>
           */
          public Builder setHasSymbolZOrder(boolean value) {
            
            hasSymbolZOrder_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_symbol_z_order = 9;</code>
           */
          public Builder clearHasSymbolZOrder() {
            
            hasSymbolZOrder_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.BoolValue iconAllowOverlap_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> iconAllowOverlapBuilder_;
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          public boolean hasIconAllowOverlap() {
            return iconAllowOverlapBuilder_ != null || iconAllowOverlap_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          public com.google.protobuf.BoolValue getIconAllowOverlap() {
            if (iconAllowOverlapBuilder_ == null) {
              return iconAllowOverlap_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : iconAllowOverlap_;
            } else {
              return iconAllowOverlapBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          public Builder setIconAllowOverlap(com.google.protobuf.BoolValue value) {
            if (iconAllowOverlapBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconAllowOverlap_ = value;
              onChanged();
            } else {
              iconAllowOverlapBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          public Builder setIconAllowOverlap(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (iconAllowOverlapBuilder_ == null) {
              iconAllowOverlap_ = builderForValue.build();
              onChanged();
            } else {
              iconAllowOverlapBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          public Builder mergeIconAllowOverlap(com.google.protobuf.BoolValue value) {
            if (iconAllowOverlapBuilder_ == null) {
              if (iconAllowOverlap_ != null) {
                iconAllowOverlap_ =
                  com.google.protobuf.BoolValue.newBuilder(iconAllowOverlap_).mergeFrom(value).buildPartial();
              } else {
                iconAllowOverlap_ = value;
              }
              onChanged();
            } else {
              iconAllowOverlapBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          public Builder clearIconAllowOverlap() {
            if (iconAllowOverlapBuilder_ == null) {
              iconAllowOverlap_ = null;
              onChanged();
            } else {
              iconAllowOverlap_ = null;
              iconAllowOverlapBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          public com.google.protobuf.BoolValue.Builder getIconAllowOverlapBuilder() {
            
            onChanged();
            return getIconAllowOverlapFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getIconAllowOverlapOrBuilder() {
            if (iconAllowOverlapBuilder_ != null) {
              return iconAllowOverlapBuilder_.getMessageOrBuilder();
            } else {
              return iconAllowOverlap_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : iconAllowOverlap_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue icon_allow_overlap = 10;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getIconAllowOverlapFieldBuilder() {
            if (iconAllowOverlapBuilder_ == null) {
              iconAllowOverlapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getIconAllowOverlap(),
                      getParentForChildren(),
                      isClean());
              iconAllowOverlap_ = null;
            }
            return iconAllowOverlapBuilder_;
          }

          private com.google.protobuf.BoolValue iconIgnorePlacement_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> iconIgnorePlacementBuilder_;
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          public boolean hasIconIgnorePlacement() {
            return iconIgnorePlacementBuilder_ != null || iconIgnorePlacement_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          public com.google.protobuf.BoolValue getIconIgnorePlacement() {
            if (iconIgnorePlacementBuilder_ == null) {
              return iconIgnorePlacement_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : iconIgnorePlacement_;
            } else {
              return iconIgnorePlacementBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          public Builder setIconIgnorePlacement(com.google.protobuf.BoolValue value) {
            if (iconIgnorePlacementBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconIgnorePlacement_ = value;
              onChanged();
            } else {
              iconIgnorePlacementBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          public Builder setIconIgnorePlacement(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (iconIgnorePlacementBuilder_ == null) {
              iconIgnorePlacement_ = builderForValue.build();
              onChanged();
            } else {
              iconIgnorePlacementBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          public Builder mergeIconIgnorePlacement(com.google.protobuf.BoolValue value) {
            if (iconIgnorePlacementBuilder_ == null) {
              if (iconIgnorePlacement_ != null) {
                iconIgnorePlacement_ =
                  com.google.protobuf.BoolValue.newBuilder(iconIgnorePlacement_).mergeFrom(value).buildPartial();
              } else {
                iconIgnorePlacement_ = value;
              }
              onChanged();
            } else {
              iconIgnorePlacementBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          public Builder clearIconIgnorePlacement() {
            if (iconIgnorePlacementBuilder_ == null) {
              iconIgnorePlacement_ = null;
              onChanged();
            } else {
              iconIgnorePlacement_ = null;
              iconIgnorePlacementBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          public com.google.protobuf.BoolValue.Builder getIconIgnorePlacementBuilder() {
            
            onChanged();
            return getIconIgnorePlacementFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getIconIgnorePlacementOrBuilder() {
            if (iconIgnorePlacementBuilder_ != null) {
              return iconIgnorePlacementBuilder_.getMessageOrBuilder();
            } else {
              return iconIgnorePlacement_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : iconIgnorePlacement_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue icon_ignore_placement = 11;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getIconIgnorePlacementFieldBuilder() {
            if (iconIgnorePlacementBuilder_ == null) {
              iconIgnorePlacementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getIconIgnorePlacement(),
                      getParentForChildren(),
                      isClean());
              iconIgnorePlacement_ = null;
            }
            return iconIgnorePlacementBuilder_;
          }

          private com.google.protobuf.BoolValue iconOptional_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> iconOptionalBuilder_;
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          public boolean hasIconOptional() {
            return iconOptionalBuilder_ != null || iconOptional_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          public com.google.protobuf.BoolValue getIconOptional() {
            if (iconOptionalBuilder_ == null) {
              return iconOptional_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : iconOptional_;
            } else {
              return iconOptionalBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          public Builder setIconOptional(com.google.protobuf.BoolValue value) {
            if (iconOptionalBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconOptional_ = value;
              onChanged();
            } else {
              iconOptionalBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          public Builder setIconOptional(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (iconOptionalBuilder_ == null) {
              iconOptional_ = builderForValue.build();
              onChanged();
            } else {
              iconOptionalBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          public Builder mergeIconOptional(com.google.protobuf.BoolValue value) {
            if (iconOptionalBuilder_ == null) {
              if (iconOptional_ != null) {
                iconOptional_ =
                  com.google.protobuf.BoolValue.newBuilder(iconOptional_).mergeFrom(value).buildPartial();
              } else {
                iconOptional_ = value;
              }
              onChanged();
            } else {
              iconOptionalBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          public Builder clearIconOptional() {
            if (iconOptionalBuilder_ == null) {
              iconOptional_ = null;
              onChanged();
            } else {
              iconOptional_ = null;
              iconOptionalBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          public com.google.protobuf.BoolValue.Builder getIconOptionalBuilder() {
            
            onChanged();
            return getIconOptionalFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getIconOptionalOrBuilder() {
            if (iconOptionalBuilder_ != null) {
              return iconOptionalBuilder_.getMessageOrBuilder();
            } else {
              return iconOptional_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : iconOptional_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue icon_optional = 12;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getIconOptionalFieldBuilder() {
            if (iconOptionalBuilder_ == null) {
              iconOptionalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getIconOptional(),
                      getParentForChildren(),
                      isClean());
              iconOptional_ = null;
            }
            return iconOptionalBuilder_;
          }

          private int iconRotationAlignment_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
           */
          public int getIconRotationAlignmentValue() {
            return iconRotationAlignment_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
           */
          public Builder setIconRotationAlignmentValue(int value) {
            iconRotationAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getIconRotationAlignment() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.valueOf(iconRotationAlignment_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
           */
          public Builder setIconRotationAlignment(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            iconRotationAlignment_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_rotation_alignment = 13;</code>
           */
          public Builder clearIconRotationAlignment() {
            
            iconRotationAlignment_ = 0;
            onChanged();
            return this;
          }

          private boolean hasIconRotationAlignment_ ;
          /**
           * <code>bool has_icon_rotation_alignment = 14;</code>
           */
          public boolean getHasIconRotationAlignment() {
            return hasIconRotationAlignment_;
          }
          /**
           * <code>bool has_icon_rotation_alignment = 14;</code>
           */
          public Builder setHasIconRotationAlignment(boolean value) {
            
            hasIconRotationAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_icon_rotation_alignment = 14;</code>
           */
          public Builder clearHasIconRotationAlignment() {
            
            hasIconRotationAlignment_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue iconSize_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> iconSizeBuilder_;
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          public boolean hasIconSize() {
            return iconSizeBuilder_ != null || iconSize_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          public com.google.protobuf.FloatValue getIconSize() {
            if (iconSizeBuilder_ == null) {
              return iconSize_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconSize_;
            } else {
              return iconSizeBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          public Builder setIconSize(com.google.protobuf.FloatValue value) {
            if (iconSizeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconSize_ = value;
              onChanged();
            } else {
              iconSizeBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          public Builder setIconSize(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (iconSizeBuilder_ == null) {
              iconSize_ = builderForValue.build();
              onChanged();
            } else {
              iconSizeBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          public Builder mergeIconSize(com.google.protobuf.FloatValue value) {
            if (iconSizeBuilder_ == null) {
              if (iconSize_ != null) {
                iconSize_ =
                  com.google.protobuf.FloatValue.newBuilder(iconSize_).mergeFrom(value).buildPartial();
              } else {
                iconSize_ = value;
              }
              onChanged();
            } else {
              iconSizeBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          public Builder clearIconSize() {
            if (iconSizeBuilder_ == null) {
              iconSize_ = null;
              onChanged();
            } else {
              iconSize_ = null;
              iconSizeBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          public com.google.protobuf.FloatValue.Builder getIconSizeBuilder() {
            
            onChanged();
            return getIconSizeFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getIconSizeOrBuilder() {
            if (iconSizeBuilder_ != null) {
              return iconSizeBuilder_.getMessageOrBuilder();
            } else {
              return iconSize_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : iconSize_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_size = 15;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getIconSizeFieldBuilder() {
            if (iconSizeBuilder_ == null) {
              iconSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getIconSize(),
                      getParentForChildren(),
                      isClean());
              iconSize_ = null;
            }
            return iconSizeBuilder_;
          }

          private int iconTextFit_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
           */
          public int getIconTextFitValue() {
            return iconTextFit_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
           */
          public Builder setIconTextFitValue(int value) {
            iconTextFit_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit getIconTextFit() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit.valueOf(iconTextFit_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
           */
          public Builder setIconTextFit(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextFit value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            iconTextFit_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextFit icon_text_fit = 16;</code>
           */
          public Builder clearIconTextFit() {
            
            iconTextFit_ = 0;
            onChanged();
            return this;
          }

          private boolean hasIconTextFit_ ;
          /**
           * <code>bool has_icon_text_fit = 17;</code>
           */
          public boolean getHasIconTextFit() {
            return hasIconTextFit_;
          }
          /**
           * <code>bool has_icon_text_fit = 17;</code>
           */
          public Builder setHasIconTextFit(boolean value) {
            
            hasIconTextFit_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_icon_text_fit = 17;</code>
           */
          public Builder clearHasIconTextFit() {
            
            hasIconTextFit_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.FloatList iconTextFitPadding_ = emptyFloatList();
          private void ensureIconTextFitPaddingIsMutable() {
            if (!((bitField0_ & 0x00020000) != 0)) {
              iconTextFitPadding_ = mutableCopy(iconTextFitPadding_);
              bitField0_ |= 0x00020000;
             }
          }
          /**
           * <code>repeated float icon_text_fit_padding = 18;</code>
           */
          public java.util.List<java.lang.Float>
              getIconTextFitPaddingList() {
            return ((bitField0_ & 0x00020000) != 0) ?
                     java.util.Collections.unmodifiableList(iconTextFitPadding_) : iconTextFitPadding_;
          }
          /**
           * <code>repeated float icon_text_fit_padding = 18;</code>
           */
          public int getIconTextFitPaddingCount() {
            return iconTextFitPadding_.size();
          }
          /**
           * <code>repeated float icon_text_fit_padding = 18;</code>
           */
          public float getIconTextFitPadding(int index) {
            return iconTextFitPadding_.getFloat(index);
          }
          /**
           * <code>repeated float icon_text_fit_padding = 18;</code>
           */
          public Builder setIconTextFitPadding(
              int index, float value) {
            ensureIconTextFitPaddingIsMutable();
            iconTextFitPadding_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_text_fit_padding = 18;</code>
           */
          public Builder addIconTextFitPadding(float value) {
            ensureIconTextFitPaddingIsMutable();
            iconTextFitPadding_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_text_fit_padding = 18;</code>
           */
          public Builder addAllIconTextFitPadding(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureIconTextFitPaddingIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, iconTextFitPadding_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_text_fit_padding = 18;</code>
           */
          public Builder clearIconTextFitPadding() {
            iconTextFitPadding_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00020000);
            onChanged();
            return this;
          }

          private boolean hasIconTextFitPadding_ ;
          /**
           * <code>bool has_icon_text_fit_padding = 19;</code>
           */
          public boolean getHasIconTextFitPadding() {
            return hasIconTextFitPadding_;
          }
          /**
           * <code>bool has_icon_text_fit_padding = 19;</code>
           */
          public Builder setHasIconTextFitPadding(boolean value) {
            
            hasIconTextFitPadding_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_icon_text_fit_padding = 19;</code>
           */
          public Builder clearHasIconTextFitPadding() {
            
            hasIconTextFitPadding_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.StringValue iconImage_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> iconImageBuilder_;
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          public boolean hasIconImage() {
            return iconImageBuilder_ != null || iconImage_ != null;
          }
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          public com.google.protobuf.StringValue getIconImage() {
            if (iconImageBuilder_ == null) {
              return iconImage_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : iconImage_;
            } else {
              return iconImageBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          public Builder setIconImage(com.google.protobuf.StringValue value) {
            if (iconImageBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconImage_ = value;
              onChanged();
            } else {
              iconImageBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          public Builder setIconImage(
              com.google.protobuf.StringValue.Builder builderForValue) {
            if (iconImageBuilder_ == null) {
              iconImage_ = builderForValue.build();
              onChanged();
            } else {
              iconImageBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          public Builder mergeIconImage(com.google.protobuf.StringValue value) {
            if (iconImageBuilder_ == null) {
              if (iconImage_ != null) {
                iconImage_ =
                  com.google.protobuf.StringValue.newBuilder(iconImage_).mergeFrom(value).buildPartial();
              } else {
                iconImage_ = value;
              }
              onChanged();
            } else {
              iconImageBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          public Builder clearIconImage() {
            if (iconImageBuilder_ == null) {
              iconImage_ = null;
              onChanged();
            } else {
              iconImage_ = null;
              iconImageBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          public com.google.protobuf.StringValue.Builder getIconImageBuilder() {
            
            onChanged();
            return getIconImageFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          public com.google.protobuf.StringValueOrBuilder getIconImageOrBuilder() {
            if (iconImageBuilder_ != null) {
              return iconImageBuilder_.getMessageOrBuilder();
            } else {
              return iconImage_ == null ?
                  com.google.protobuf.StringValue.getDefaultInstance() : iconImage_;
            }
          }
          /**
           * <code>.google.protobuf.StringValue icon_image = 20;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> 
              getIconImageFieldBuilder() {
            if (iconImageBuilder_ == null) {
              iconImageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                      getIconImage(),
                      getParentForChildren(),
                      isClean());
              iconImage_ = null;
            }
            return iconImageBuilder_;
          }

          private com.google.protobuf.FloatValue iconRotate_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> iconRotateBuilder_;
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          public boolean hasIconRotate() {
            return iconRotateBuilder_ != null || iconRotate_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          public com.google.protobuf.FloatValue getIconRotate() {
            if (iconRotateBuilder_ == null) {
              return iconRotate_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconRotate_;
            } else {
              return iconRotateBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          public Builder setIconRotate(com.google.protobuf.FloatValue value) {
            if (iconRotateBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconRotate_ = value;
              onChanged();
            } else {
              iconRotateBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          public Builder setIconRotate(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (iconRotateBuilder_ == null) {
              iconRotate_ = builderForValue.build();
              onChanged();
            } else {
              iconRotateBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          public Builder mergeIconRotate(com.google.protobuf.FloatValue value) {
            if (iconRotateBuilder_ == null) {
              if (iconRotate_ != null) {
                iconRotate_ =
                  com.google.protobuf.FloatValue.newBuilder(iconRotate_).mergeFrom(value).buildPartial();
              } else {
                iconRotate_ = value;
              }
              onChanged();
            } else {
              iconRotateBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          public Builder clearIconRotate() {
            if (iconRotateBuilder_ == null) {
              iconRotate_ = null;
              onChanged();
            } else {
              iconRotate_ = null;
              iconRotateBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          public com.google.protobuf.FloatValue.Builder getIconRotateBuilder() {
            
            onChanged();
            return getIconRotateFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getIconRotateOrBuilder() {
            if (iconRotateBuilder_ != null) {
              return iconRotateBuilder_.getMessageOrBuilder();
            } else {
              return iconRotate_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : iconRotate_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_rotate = 21;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getIconRotateFieldBuilder() {
            if (iconRotateBuilder_ == null) {
              iconRotateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getIconRotate(),
                      getParentForChildren(),
                      isClean());
              iconRotate_ = null;
            }
            return iconRotateBuilder_;
          }

          private com.google.protobuf.FloatValue iconPadding_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> iconPaddingBuilder_;
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          public boolean hasIconPadding() {
            return iconPaddingBuilder_ != null || iconPadding_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          public com.google.protobuf.FloatValue getIconPadding() {
            if (iconPaddingBuilder_ == null) {
              return iconPadding_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconPadding_;
            } else {
              return iconPaddingBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          public Builder setIconPadding(com.google.protobuf.FloatValue value) {
            if (iconPaddingBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconPadding_ = value;
              onChanged();
            } else {
              iconPaddingBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          public Builder setIconPadding(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (iconPaddingBuilder_ == null) {
              iconPadding_ = builderForValue.build();
              onChanged();
            } else {
              iconPaddingBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          public Builder mergeIconPadding(com.google.protobuf.FloatValue value) {
            if (iconPaddingBuilder_ == null) {
              if (iconPadding_ != null) {
                iconPadding_ =
                  com.google.protobuf.FloatValue.newBuilder(iconPadding_).mergeFrom(value).buildPartial();
              } else {
                iconPadding_ = value;
              }
              onChanged();
            } else {
              iconPaddingBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          public Builder clearIconPadding() {
            if (iconPaddingBuilder_ == null) {
              iconPadding_ = null;
              onChanged();
            } else {
              iconPadding_ = null;
              iconPaddingBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          public com.google.protobuf.FloatValue.Builder getIconPaddingBuilder() {
            
            onChanged();
            return getIconPaddingFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getIconPaddingOrBuilder() {
            if (iconPaddingBuilder_ != null) {
              return iconPaddingBuilder_.getMessageOrBuilder();
            } else {
              return iconPadding_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : iconPadding_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_padding = 22;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getIconPaddingFieldBuilder() {
            if (iconPaddingBuilder_ == null) {
              iconPaddingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getIconPadding(),
                      getParentForChildren(),
                      isClean());
              iconPadding_ = null;
            }
            return iconPaddingBuilder_;
          }

          private com.google.protobuf.BoolValue iconKeepUpright_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> iconKeepUprightBuilder_;
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          public boolean hasIconKeepUpright() {
            return iconKeepUprightBuilder_ != null || iconKeepUpright_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          public com.google.protobuf.BoolValue getIconKeepUpright() {
            if (iconKeepUprightBuilder_ == null) {
              return iconKeepUpright_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : iconKeepUpright_;
            } else {
              return iconKeepUprightBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          public Builder setIconKeepUpright(com.google.protobuf.BoolValue value) {
            if (iconKeepUprightBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconKeepUpright_ = value;
              onChanged();
            } else {
              iconKeepUprightBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          public Builder setIconKeepUpright(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (iconKeepUprightBuilder_ == null) {
              iconKeepUpright_ = builderForValue.build();
              onChanged();
            } else {
              iconKeepUprightBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          public Builder mergeIconKeepUpright(com.google.protobuf.BoolValue value) {
            if (iconKeepUprightBuilder_ == null) {
              if (iconKeepUpright_ != null) {
                iconKeepUpright_ =
                  com.google.protobuf.BoolValue.newBuilder(iconKeepUpright_).mergeFrom(value).buildPartial();
              } else {
                iconKeepUpright_ = value;
              }
              onChanged();
            } else {
              iconKeepUprightBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          public Builder clearIconKeepUpright() {
            if (iconKeepUprightBuilder_ == null) {
              iconKeepUpright_ = null;
              onChanged();
            } else {
              iconKeepUpright_ = null;
              iconKeepUprightBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          public com.google.protobuf.BoolValue.Builder getIconKeepUprightBuilder() {
            
            onChanged();
            return getIconKeepUprightFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getIconKeepUprightOrBuilder() {
            if (iconKeepUprightBuilder_ != null) {
              return iconKeepUprightBuilder_.getMessageOrBuilder();
            } else {
              return iconKeepUpright_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : iconKeepUpright_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue icon_keep_upright = 23;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getIconKeepUprightFieldBuilder() {
            if (iconKeepUprightBuilder_ == null) {
              iconKeepUprightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getIconKeepUpright(),
                      getParentForChildren(),
                      isClean());
              iconKeepUpright_ = null;
            }
            return iconKeepUprightBuilder_;
          }

          private com.google.protobuf.Internal.FloatList iconOffset_ = emptyFloatList();
          private void ensureIconOffsetIsMutable() {
            if (!((bitField0_ & 0x00800000) != 0)) {
              iconOffset_ = mutableCopy(iconOffset_);
              bitField0_ |= 0x00800000;
             }
          }
          /**
           * <code>repeated float icon_offset = 24;</code>
           */
          public java.util.List<java.lang.Float>
              getIconOffsetList() {
            return ((bitField0_ & 0x00800000) != 0) ?
                     java.util.Collections.unmodifiableList(iconOffset_) : iconOffset_;
          }
          /**
           * <code>repeated float icon_offset = 24;</code>
           */
          public int getIconOffsetCount() {
            return iconOffset_.size();
          }
          /**
           * <code>repeated float icon_offset = 24;</code>
           */
          public float getIconOffset(int index) {
            return iconOffset_.getFloat(index);
          }
          /**
           * <code>repeated float icon_offset = 24;</code>
           */
          public Builder setIconOffset(
              int index, float value) {
            ensureIconOffsetIsMutable();
            iconOffset_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_offset = 24;</code>
           */
          public Builder addIconOffset(float value) {
            ensureIconOffsetIsMutable();
            iconOffset_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_offset = 24;</code>
           */
          public Builder addAllIconOffset(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureIconOffsetIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, iconOffset_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_offset = 24;</code>
           */
          public Builder clearIconOffset() {
            iconOffset_ = emptyFloatList();
            bitField0_ = (bitField0_ & ~0x00800000);
            onChanged();
            return this;
          }

          private boolean hasIconOffset_ ;
          /**
           * <code>bool has_icon_offset = 25;</code>
           */
          public boolean getHasIconOffset() {
            return hasIconOffset_;
          }
          /**
           * <code>bool has_icon_offset = 25;</code>
           */
          public Builder setHasIconOffset(boolean value) {
            
            hasIconOffset_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_icon_offset = 25;</code>
           */
          public Builder clearHasIconOffset() {
            
            hasIconOffset_ = false;
            onChanged();
            return this;
          }

          private int iconAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
           */
          public int getIconAnchorValue() {
            return iconAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
           */
          public Builder setIconAnchorValue(int value) {
            iconAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getIconAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.valueOf(iconAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
           */
          public Builder setIconAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            iconAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor icon_anchor = 26;</code>
           */
          public Builder clearIconAnchor() {
            
            iconAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasIconAnchor_ ;
          /**
           * <code>bool has_icon_anchor = 27;</code>
           */
          public boolean getHasIconAnchor() {
            return hasIconAnchor_;
          }
          /**
           * <code>bool has_icon_anchor = 27;</code>
           */
          public Builder setHasIconAnchor(boolean value) {
            
            hasIconAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_icon_anchor = 27;</code>
           */
          public Builder clearHasIconAnchor() {
            
            hasIconAnchor_ = false;
            onChanged();
            return this;
          }

          private int iconPitchAlignment_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
           */
          public int getIconPitchAlignmentValue() {
            return iconPitchAlignment_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
           */
          public Builder setIconPitchAlignmentValue(int value) {
            iconPitchAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getIconPitchAlignment() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.valueOf(iconPitchAlignment_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
           */
          public Builder setIconPitchAlignment(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            iconPitchAlignment_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment icon_pitch_alignment = 28;</code>
           */
          public Builder clearIconPitchAlignment() {
            
            iconPitchAlignment_ = 0;
            onChanged();
            return this;
          }

          private boolean hasIconPitchAlignment_ ;
          /**
           * <code>bool has_icon_pitch_alignment = 29;</code>
           */
          public boolean getHasIconPitchAlignment() {
            return hasIconPitchAlignment_;
          }
          /**
           * <code>bool has_icon_pitch_alignment = 29;</code>
           */
          public Builder setHasIconPitchAlignment(boolean value) {
            
            hasIconPitchAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_icon_pitch_alignment = 29;</code>
           */
          public Builder clearHasIconPitchAlignment() {
            
            hasIconPitchAlignment_ = false;
            onChanged();
            return this;
          }

          private int textPitchAlignment_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
           */
          public int getTextPitchAlignmentValue() {
            return textPitchAlignment_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
           */
          public Builder setTextPitchAlignmentValue(int value) {
            textPitchAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getTextPitchAlignment() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.valueOf(textPitchAlignment_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
           */
          public Builder setTextPitchAlignment(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            textPitchAlignment_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_pitch_alignment = 30;</code>
           */
          public Builder clearTextPitchAlignment() {
            
            textPitchAlignment_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTextPitchAlignment_ ;
          /**
           * <code>bool has_text_pitch_alignment = 31;</code>
           */
          public boolean getHasTextPitchAlignment() {
            return hasTextPitchAlignment_;
          }
          /**
           * <code>bool has_text_pitch_alignment = 31;</code>
           */
          public Builder setHasTextPitchAlignment(boolean value) {
            
            hasTextPitchAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_pitch_alignment = 31;</code>
           */
          public Builder clearHasTextPitchAlignment() {
            
            hasTextPitchAlignment_ = false;
            onChanged();
            return this;
          }

          private int textRotationAlignment_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
           */
          public int getTextRotationAlignmentValue() {
            return textRotationAlignment_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
           */
          public Builder setTextRotationAlignmentValue(int value) {
            textRotationAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment getTextRotationAlignment() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.valueOf(textRotationAlignment_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
           */
          public Builder setTextRotationAlignment(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.Alignment value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            textRotationAlignment_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.Alignment text_rotation_alignment = 32;</code>
           */
          public Builder clearTextRotationAlignment() {
            
            textRotationAlignment_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTextRotationAlignment_ ;
          /**
           * <code>bool has_text_rotation_alignment = 33;</code>
           */
          public boolean getHasTextRotationAlignment() {
            return hasTextRotationAlignment_;
          }
          /**
           * <code>bool has_text_rotation_alignment = 33;</code>
           */
          public Builder setHasTextRotationAlignment(boolean value) {
            
            hasTextRotationAlignment_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_rotation_alignment = 33;</code>
           */
          public Builder clearHasTextRotationAlignment() {
            
            hasTextRotationAlignment_ = false;
            onChanged();
            return this;
          }

          private java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection> textField_ =
            java.util.Collections.emptyList();
          private void ensureTextFieldIsMutable() {
            if (!((bitField1_ & 0x00000002) != 0)) {
              textField_ = new java.util.ArrayList<com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection>(textField_);
              bitField1_ |= 0x00000002;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder> textFieldBuilder_;

          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection> getTextFieldList() {
            if (textFieldBuilder_ == null) {
              return java.util.Collections.unmodifiableList(textField_);
            } else {
              return textFieldBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public int getTextFieldCount() {
            if (textFieldBuilder_ == null) {
              return textField_.size();
            } else {
              return textFieldBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection getTextField(int index) {
            if (textFieldBuilder_ == null) {
              return textField_.get(index);
            } else {
              return textFieldBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder setTextField(
              int index, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection value) {
            if (textFieldBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTextFieldIsMutable();
              textField_.set(index, value);
              onChanged();
            } else {
              textFieldBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder setTextField(
              int index, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder builderForValue) {
            if (textFieldBuilder_ == null) {
              ensureTextFieldIsMutable();
              textField_.set(index, builderForValue.build());
              onChanged();
            } else {
              textFieldBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder addTextField(com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection value) {
            if (textFieldBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTextFieldIsMutable();
              textField_.add(value);
              onChanged();
            } else {
              textFieldBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder addTextField(
              int index, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection value) {
            if (textFieldBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureTextFieldIsMutable();
              textField_.add(index, value);
              onChanged();
            } else {
              textFieldBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder addTextField(
              com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder builderForValue) {
            if (textFieldBuilder_ == null) {
              ensureTextFieldIsMutable();
              textField_.add(builderForValue.build());
              onChanged();
            } else {
              textFieldBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder addTextField(
              int index, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder builderForValue) {
            if (textFieldBuilder_ == null) {
              ensureTextFieldIsMutable();
              textField_.add(index, builderForValue.build());
              onChanged();
            } else {
              textFieldBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder addAllTextField(
              java.lang.Iterable<? extends com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection> values) {
            if (textFieldBuilder_ == null) {
              ensureTextFieldIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, textField_);
              onChanged();
            } else {
              textFieldBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder clearTextField() {
            if (textFieldBuilder_ == null) {
              textField_ = java.util.Collections.emptyList();
              bitField1_ = (bitField1_ & ~0x00000002);
              onChanged();
            } else {
              textFieldBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public Builder removeTextField(int index) {
            if (textFieldBuilder_ == null) {
              ensureTextFieldIsMutable();
              textField_.remove(index);
              onChanged();
            } else {
              textFieldBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder getTextFieldBuilder(
              int index) {
            return getTextFieldFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder getTextFieldOrBuilder(
              int index) {
            if (textFieldBuilder_ == null) {
              return textField_.get(index);  } else {
              return textFieldBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public java.util.List<? extends com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder> 
               getTextFieldOrBuilderList() {
            if (textFieldBuilder_ != null) {
              return textFieldBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(textField_);
            }
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder addTextFieldBuilder() {
            return getTextFieldFieldBuilder().addBuilder(
                com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.getDefaultInstance());
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder addTextFieldBuilder(
              int index) {
            return getTextFieldFieldBuilder().addBuilder(
                index, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.getDefaultInstance());
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.FormattedSection text_field = 34;</code>
           */
          public java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder> 
               getTextFieldBuilderList() {
            return getTextFieldFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder> 
              getTextFieldFieldBuilder() {
            if (textFieldBuilder_ == null) {
              textFieldBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSection.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.FormattedSectionOrBuilder>(
                      textField_,
                      ((bitField1_ & 0x00000002) != 0),
                      getParentForChildren(),
                      isClean());
              textField_ = null;
            }
            return textFieldBuilder_;
          }

          private boolean hasTextField_ ;
          /**
           * <code>bool has_text_field = 35;</code>
           */
          public boolean getHasTextField() {
            return hasTextField_;
          }
          /**
           * <code>bool has_text_field = 35;</code>
           */
          public Builder setHasTextField(boolean value) {
            
            hasTextField_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_field = 35;</code>
           */
          public Builder clearHasTextField() {
            
            hasTextField_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.LazyStringList textFont_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          private void ensureTextFontIsMutable() {
            if (!((bitField1_ & 0x00000008) != 0)) {
              textFont_ = new com.google.protobuf.LazyStringArrayList(textFont_);
              bitField1_ |= 0x00000008;
             }
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public com.google.protobuf.ProtocolStringList
              getTextFontList() {
            return textFont_.getUnmodifiableView();
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public int getTextFontCount() {
            return textFont_.size();
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public java.lang.String getTextFont(int index) {
            return textFont_.get(index);
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public com.google.protobuf.ByteString
              getTextFontBytes(int index) {
            return textFont_.getByteString(index);
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public Builder setTextFont(
              int index, java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureTextFontIsMutable();
            textFont_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public Builder addTextFont(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  ensureTextFontIsMutable();
            textFont_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public Builder addAllTextFont(
              java.lang.Iterable<java.lang.String> values) {
            ensureTextFontIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, textFont_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public Builder clearTextFont() {
            textFont_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            bitField1_ = (bitField1_ & ~0x00000008);
            onChanged();
            return this;
          }
          /**
           * <code>repeated string text_font = 36;</code>
           */
          public Builder addTextFontBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            ensureTextFontIsMutable();
            textFont_.add(value);
            onChanged();
            return this;
          }

          private boolean hasTextFont_ ;
          /**
           * <code>bool has_text_font = 37;</code>
           */
          public boolean getHasTextFont() {
            return hasTextFont_;
          }
          /**
           * <code>bool has_text_font = 37;</code>
           */
          public Builder setHasTextFont(boolean value) {
            
            hasTextFont_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_font = 37;</code>
           */
          public Builder clearHasTextFont() {
            
            hasTextFont_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue textSize_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textSizeBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          public boolean hasTextSize() {
            return textSizeBuilder_ != null || textSize_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          public com.google.protobuf.FloatValue getTextSize() {
            if (textSizeBuilder_ == null) {
              return textSize_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textSize_;
            } else {
              return textSizeBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          public Builder setTextSize(com.google.protobuf.FloatValue value) {
            if (textSizeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textSize_ = value;
              onChanged();
            } else {
              textSizeBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          public Builder setTextSize(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textSizeBuilder_ == null) {
              textSize_ = builderForValue.build();
              onChanged();
            } else {
              textSizeBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          public Builder mergeTextSize(com.google.protobuf.FloatValue value) {
            if (textSizeBuilder_ == null) {
              if (textSize_ != null) {
                textSize_ =
                  com.google.protobuf.FloatValue.newBuilder(textSize_).mergeFrom(value).buildPartial();
              } else {
                textSize_ = value;
              }
              onChanged();
            } else {
              textSizeBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          public Builder clearTextSize() {
            if (textSizeBuilder_ == null) {
              textSize_ = null;
              onChanged();
            } else {
              textSize_ = null;
              textSizeBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextSizeBuilder() {
            
            onChanged();
            return getTextSizeFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextSizeOrBuilder() {
            if (textSizeBuilder_ != null) {
              return textSizeBuilder_.getMessageOrBuilder();
            } else {
              return textSize_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textSize_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_size = 38;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextSizeFieldBuilder() {
            if (textSizeBuilder_ == null) {
              textSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextSize(),
                      getParentForChildren(),
                      isClean());
              textSize_ = null;
            }
            return textSizeBuilder_;
          }

          private com.google.protobuf.FloatValue textMaxWidth_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textMaxWidthBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          public boolean hasTextMaxWidth() {
            return textMaxWidthBuilder_ != null || textMaxWidth_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          public com.google.protobuf.FloatValue getTextMaxWidth() {
            if (textMaxWidthBuilder_ == null) {
              return textMaxWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textMaxWidth_;
            } else {
              return textMaxWidthBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          public Builder setTextMaxWidth(com.google.protobuf.FloatValue value) {
            if (textMaxWidthBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textMaxWidth_ = value;
              onChanged();
            } else {
              textMaxWidthBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          public Builder setTextMaxWidth(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textMaxWidthBuilder_ == null) {
              textMaxWidth_ = builderForValue.build();
              onChanged();
            } else {
              textMaxWidthBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          public Builder mergeTextMaxWidth(com.google.protobuf.FloatValue value) {
            if (textMaxWidthBuilder_ == null) {
              if (textMaxWidth_ != null) {
                textMaxWidth_ =
                  com.google.protobuf.FloatValue.newBuilder(textMaxWidth_).mergeFrom(value).buildPartial();
              } else {
                textMaxWidth_ = value;
              }
              onChanged();
            } else {
              textMaxWidthBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          public Builder clearTextMaxWidth() {
            if (textMaxWidthBuilder_ == null) {
              textMaxWidth_ = null;
              onChanged();
            } else {
              textMaxWidth_ = null;
              textMaxWidthBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextMaxWidthBuilder() {
            
            onChanged();
            return getTextMaxWidthFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextMaxWidthOrBuilder() {
            if (textMaxWidthBuilder_ != null) {
              return textMaxWidthBuilder_.getMessageOrBuilder();
            } else {
              return textMaxWidth_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textMaxWidth_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_width = 39;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextMaxWidthFieldBuilder() {
            if (textMaxWidthBuilder_ == null) {
              textMaxWidthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextMaxWidth(),
                      getParentForChildren(),
                      isClean());
              textMaxWidth_ = null;
            }
            return textMaxWidthBuilder_;
          }

          private com.google.protobuf.FloatValue textLineHeight_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textLineHeightBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          public boolean hasTextLineHeight() {
            return textLineHeightBuilder_ != null || textLineHeight_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          public com.google.protobuf.FloatValue getTextLineHeight() {
            if (textLineHeightBuilder_ == null) {
              return textLineHeight_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textLineHeight_;
            } else {
              return textLineHeightBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          public Builder setTextLineHeight(com.google.protobuf.FloatValue value) {
            if (textLineHeightBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textLineHeight_ = value;
              onChanged();
            } else {
              textLineHeightBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          public Builder setTextLineHeight(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textLineHeightBuilder_ == null) {
              textLineHeight_ = builderForValue.build();
              onChanged();
            } else {
              textLineHeightBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          public Builder mergeTextLineHeight(com.google.protobuf.FloatValue value) {
            if (textLineHeightBuilder_ == null) {
              if (textLineHeight_ != null) {
                textLineHeight_ =
                  com.google.protobuf.FloatValue.newBuilder(textLineHeight_).mergeFrom(value).buildPartial();
              } else {
                textLineHeight_ = value;
              }
              onChanged();
            } else {
              textLineHeightBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          public Builder clearTextLineHeight() {
            if (textLineHeightBuilder_ == null) {
              textLineHeight_ = null;
              onChanged();
            } else {
              textLineHeight_ = null;
              textLineHeightBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextLineHeightBuilder() {
            
            onChanged();
            return getTextLineHeightFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextLineHeightOrBuilder() {
            if (textLineHeightBuilder_ != null) {
              return textLineHeightBuilder_.getMessageOrBuilder();
            } else {
              return textLineHeight_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textLineHeight_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_line_height = 40;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextLineHeightFieldBuilder() {
            if (textLineHeightBuilder_ == null) {
              textLineHeightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextLineHeight(),
                      getParentForChildren(),
                      isClean());
              textLineHeight_ = null;
            }
            return textLineHeightBuilder_;
          }

          private com.google.protobuf.FloatValue textLetterSpacing_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textLetterSpacingBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          public boolean hasTextLetterSpacing() {
            return textLetterSpacingBuilder_ != null || textLetterSpacing_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          public com.google.protobuf.FloatValue getTextLetterSpacing() {
            if (textLetterSpacingBuilder_ == null) {
              return textLetterSpacing_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textLetterSpacing_;
            } else {
              return textLetterSpacingBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          public Builder setTextLetterSpacing(com.google.protobuf.FloatValue value) {
            if (textLetterSpacingBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textLetterSpacing_ = value;
              onChanged();
            } else {
              textLetterSpacingBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          public Builder setTextLetterSpacing(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textLetterSpacingBuilder_ == null) {
              textLetterSpacing_ = builderForValue.build();
              onChanged();
            } else {
              textLetterSpacingBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          public Builder mergeTextLetterSpacing(com.google.protobuf.FloatValue value) {
            if (textLetterSpacingBuilder_ == null) {
              if (textLetterSpacing_ != null) {
                textLetterSpacing_ =
                  com.google.protobuf.FloatValue.newBuilder(textLetterSpacing_).mergeFrom(value).buildPartial();
              } else {
                textLetterSpacing_ = value;
              }
              onChanged();
            } else {
              textLetterSpacingBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          public Builder clearTextLetterSpacing() {
            if (textLetterSpacingBuilder_ == null) {
              textLetterSpacing_ = null;
              onChanged();
            } else {
              textLetterSpacing_ = null;
              textLetterSpacingBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextLetterSpacingBuilder() {
            
            onChanged();
            return getTextLetterSpacingFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextLetterSpacingOrBuilder() {
            if (textLetterSpacingBuilder_ != null) {
              return textLetterSpacingBuilder_.getMessageOrBuilder();
            } else {
              return textLetterSpacing_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textLetterSpacing_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_letter_spacing = 41;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextLetterSpacingFieldBuilder() {
            if (textLetterSpacingBuilder_ == null) {
              textLetterSpacingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextLetterSpacing(),
                      getParentForChildren(),
                      isClean());
              textLetterSpacing_ = null;
            }
            return textLetterSpacingBuilder_;
          }

          private int textJustify_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
           */
          public int getTextJustifyValue() {
            return textJustify_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
           */
          public Builder setTextJustifyValue(int value) {
            textJustify_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify getTextJustify() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify.valueOf(textJustify_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
           */
          public Builder setTextJustify(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextJustify value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            textJustify_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextJustify text_justify = 42;</code>
           */
          public Builder clearTextJustify() {
            
            textJustify_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTextJustify_ ;
          /**
           * <code>bool has_text_justify = 43;</code>
           */
          public boolean getHasTextJustify() {
            return hasTextJustify_;
          }
          /**
           * <code>bool has_text_justify = 43;</code>
           */
          public Builder setHasTextJustify(boolean value) {
            
            hasTextJustify_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_justify = 43;</code>
           */
          public Builder clearHasTextJustify() {
            
            hasTextJustify_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue textRadialOffset_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textRadialOffsetBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          public boolean hasTextRadialOffset() {
            return textRadialOffsetBuilder_ != null || textRadialOffset_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          public com.google.protobuf.FloatValue getTextRadialOffset() {
            if (textRadialOffsetBuilder_ == null) {
              return textRadialOffset_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textRadialOffset_;
            } else {
              return textRadialOffsetBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          public Builder setTextRadialOffset(com.google.protobuf.FloatValue value) {
            if (textRadialOffsetBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textRadialOffset_ = value;
              onChanged();
            } else {
              textRadialOffsetBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          public Builder setTextRadialOffset(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textRadialOffsetBuilder_ == null) {
              textRadialOffset_ = builderForValue.build();
              onChanged();
            } else {
              textRadialOffsetBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          public Builder mergeTextRadialOffset(com.google.protobuf.FloatValue value) {
            if (textRadialOffsetBuilder_ == null) {
              if (textRadialOffset_ != null) {
                textRadialOffset_ =
                  com.google.protobuf.FloatValue.newBuilder(textRadialOffset_).mergeFrom(value).buildPartial();
              } else {
                textRadialOffset_ = value;
              }
              onChanged();
            } else {
              textRadialOffsetBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          public Builder clearTextRadialOffset() {
            if (textRadialOffsetBuilder_ == null) {
              textRadialOffset_ = null;
              onChanged();
            } else {
              textRadialOffset_ = null;
              textRadialOffsetBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextRadialOffsetBuilder() {
            
            onChanged();
            return getTextRadialOffsetFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextRadialOffsetOrBuilder() {
            if (textRadialOffsetBuilder_ != null) {
              return textRadialOffsetBuilder_.getMessageOrBuilder();
            } else {
              return textRadialOffset_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textRadialOffset_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_radial_offset = 44;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextRadialOffsetFieldBuilder() {
            if (textRadialOffsetBuilder_ == null) {
              textRadialOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextRadialOffset(),
                      getParentForChildren(),
                      isClean());
              textRadialOffset_ = null;
            }
            return textRadialOffsetBuilder_;
          }

          private java.util.List<java.lang.Integer> textVariableAnchor_ =
            java.util.Collections.emptyList();
          private void ensureTextVariableAnchorIsMutable() {
            if (!((bitField1_ & 0x00001000) != 0)) {
              textVariableAnchor_ = new java.util.ArrayList<java.lang.Integer>(textVariableAnchor_);
              bitField1_ |= 0x00001000;
            }
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public java.util.List<com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor> getTextVariableAnchorList() {
            return new com.google.protobuf.Internal.ListAdapter<
                java.lang.Integer, com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor>(textVariableAnchor_, textVariableAnchor_converter_);
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public int getTextVariableAnchorCount() {
            return textVariableAnchor_.size();
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getTextVariableAnchor(int index) {
            return textVariableAnchor_converter_.convert(textVariableAnchor_.get(index));
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public Builder setTextVariableAnchor(
              int index, com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTextVariableAnchorIsMutable();
            textVariableAnchor_.set(index, value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public Builder addTextVariableAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTextVariableAnchorIsMutable();
            textVariableAnchor_.add(value.getNumber());
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public Builder addAllTextVariableAnchor(
              java.lang.Iterable<? extends com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor> values) {
            ensureTextVariableAnchorIsMutable();
            for (com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor value : values) {
              textVariableAnchor_.add(value.getNumber());
            }
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public Builder clearTextVariableAnchor() {
            textVariableAnchor_ = java.util.Collections.emptyList();
            bitField1_ = (bitField1_ & ~0x00001000);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public java.util.List<java.lang.Integer>
          getTextVariableAnchorValueList() {
            return java.util.Collections.unmodifiableList(textVariableAnchor_);
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public int getTextVariableAnchorValue(int index) {
            return textVariableAnchor_.get(index);
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public Builder setTextVariableAnchorValue(
              int index, int value) {
            ensureTextVariableAnchorIsMutable();
            textVariableAnchor_.set(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public Builder addTextVariableAnchorValue(int value) {
            ensureTextVariableAnchorIsMutable();
            textVariableAnchor_.add(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated .com.tophap.mapbox_gl.proto.PositionAnchor text_variable_anchor = 45;</code>
           */
          public Builder addAllTextVariableAnchorValue(
              java.lang.Iterable<java.lang.Integer> values) {
            ensureTextVariableAnchorIsMutable();
            for (int value : values) {
              textVariableAnchor_.add(value);
            }
            onChanged();
            return this;
          }

          private boolean hasTextVariableAnchor_ ;
          /**
           * <code>bool has_text_variable_anchor = 46;</code>
           */
          public boolean getHasTextVariableAnchor() {
            return hasTextVariableAnchor_;
          }
          /**
           * <code>bool has_text_variable_anchor = 46;</code>
           */
          public Builder setHasTextVariableAnchor(boolean value) {
            
            hasTextVariableAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_variable_anchor = 46;</code>
           */
          public Builder clearHasTextVariableAnchor() {
            
            hasTextVariableAnchor_ = false;
            onChanged();
            return this;
          }

          private int textAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
           */
          public int getTextAnchorValue() {
            return textAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
           */
          public Builder setTextAnchorValue(int value) {
            textAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor getTextAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.valueOf(textAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
           */
          public Builder setTextAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.PositionAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            textAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.PositionAnchor text_anchor = 47;</code>
           */
          public Builder clearTextAnchor() {
            
            textAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTextAnchor_ ;
          /**
           * <code>bool has_text_anchor = 48;</code>
           */
          public boolean getHasTextAnchor() {
            return hasTextAnchor_;
          }
          /**
           * <code>bool has_text_anchor = 48;</code>
           */
          public Builder setHasTextAnchor(boolean value) {
            
            hasTextAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_anchor = 48;</code>
           */
          public Builder clearHasTextAnchor() {
            
            hasTextAnchor_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue textMaxAngle_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textMaxAngleBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          public boolean hasTextMaxAngle() {
            return textMaxAngleBuilder_ != null || textMaxAngle_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          public com.google.protobuf.FloatValue getTextMaxAngle() {
            if (textMaxAngleBuilder_ == null) {
              return textMaxAngle_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textMaxAngle_;
            } else {
              return textMaxAngleBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          public Builder setTextMaxAngle(com.google.protobuf.FloatValue value) {
            if (textMaxAngleBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textMaxAngle_ = value;
              onChanged();
            } else {
              textMaxAngleBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          public Builder setTextMaxAngle(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textMaxAngleBuilder_ == null) {
              textMaxAngle_ = builderForValue.build();
              onChanged();
            } else {
              textMaxAngleBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          public Builder mergeTextMaxAngle(com.google.protobuf.FloatValue value) {
            if (textMaxAngleBuilder_ == null) {
              if (textMaxAngle_ != null) {
                textMaxAngle_ =
                  com.google.protobuf.FloatValue.newBuilder(textMaxAngle_).mergeFrom(value).buildPartial();
              } else {
                textMaxAngle_ = value;
              }
              onChanged();
            } else {
              textMaxAngleBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          public Builder clearTextMaxAngle() {
            if (textMaxAngleBuilder_ == null) {
              textMaxAngle_ = null;
              onChanged();
            } else {
              textMaxAngle_ = null;
              textMaxAngleBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextMaxAngleBuilder() {
            
            onChanged();
            return getTextMaxAngleFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextMaxAngleOrBuilder() {
            if (textMaxAngleBuilder_ != null) {
              return textMaxAngleBuilder_.getMessageOrBuilder();
            } else {
              return textMaxAngle_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textMaxAngle_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_max_angle = 49;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextMaxAngleFieldBuilder() {
            if (textMaxAngleBuilder_ == null) {
              textMaxAngleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextMaxAngle(),
                      getParentForChildren(),
                      isClean());
              textMaxAngle_ = null;
            }
            return textMaxAngleBuilder_;
          }

          private com.google.protobuf.FloatValue textRotate_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textRotateBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          public boolean hasTextRotate() {
            return textRotateBuilder_ != null || textRotate_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          public com.google.protobuf.FloatValue getTextRotate() {
            if (textRotateBuilder_ == null) {
              return textRotate_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textRotate_;
            } else {
              return textRotateBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          public Builder setTextRotate(com.google.protobuf.FloatValue value) {
            if (textRotateBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textRotate_ = value;
              onChanged();
            } else {
              textRotateBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          public Builder setTextRotate(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textRotateBuilder_ == null) {
              textRotate_ = builderForValue.build();
              onChanged();
            } else {
              textRotateBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          public Builder mergeTextRotate(com.google.protobuf.FloatValue value) {
            if (textRotateBuilder_ == null) {
              if (textRotate_ != null) {
                textRotate_ =
                  com.google.protobuf.FloatValue.newBuilder(textRotate_).mergeFrom(value).buildPartial();
              } else {
                textRotate_ = value;
              }
              onChanged();
            } else {
              textRotateBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          public Builder clearTextRotate() {
            if (textRotateBuilder_ == null) {
              textRotate_ = null;
              onChanged();
            } else {
              textRotate_ = null;
              textRotateBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextRotateBuilder() {
            
            onChanged();
            return getTextRotateFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextRotateOrBuilder() {
            if (textRotateBuilder_ != null) {
              return textRotateBuilder_.getMessageOrBuilder();
            } else {
              return textRotate_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textRotate_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_rotate = 50;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextRotateFieldBuilder() {
            if (textRotateBuilder_ == null) {
              textRotateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextRotate(),
                      getParentForChildren(),
                      isClean());
              textRotate_ = null;
            }
            return textRotateBuilder_;
          }

          private com.google.protobuf.FloatValue textPadding_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textPaddingBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          public boolean hasTextPadding() {
            return textPaddingBuilder_ != null || textPadding_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          public com.google.protobuf.FloatValue getTextPadding() {
            if (textPaddingBuilder_ == null) {
              return textPadding_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textPadding_;
            } else {
              return textPaddingBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          public Builder setTextPadding(com.google.protobuf.FloatValue value) {
            if (textPaddingBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textPadding_ = value;
              onChanged();
            } else {
              textPaddingBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          public Builder setTextPadding(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textPaddingBuilder_ == null) {
              textPadding_ = builderForValue.build();
              onChanged();
            } else {
              textPaddingBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          public Builder mergeTextPadding(com.google.protobuf.FloatValue value) {
            if (textPaddingBuilder_ == null) {
              if (textPadding_ != null) {
                textPadding_ =
                  com.google.protobuf.FloatValue.newBuilder(textPadding_).mergeFrom(value).buildPartial();
              } else {
                textPadding_ = value;
              }
              onChanged();
            } else {
              textPaddingBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          public Builder clearTextPadding() {
            if (textPaddingBuilder_ == null) {
              textPadding_ = null;
              onChanged();
            } else {
              textPadding_ = null;
              textPaddingBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextPaddingBuilder() {
            
            onChanged();
            return getTextPaddingFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextPaddingOrBuilder() {
            if (textPaddingBuilder_ != null) {
              return textPaddingBuilder_.getMessageOrBuilder();
            } else {
              return textPadding_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textPadding_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_padding = 51;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextPaddingFieldBuilder() {
            if (textPaddingBuilder_ == null) {
              textPaddingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextPadding(),
                      getParentForChildren(),
                      isClean());
              textPadding_ = null;
            }
            return textPaddingBuilder_;
          }

          private com.google.protobuf.BoolValue textKeepUpright_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> textKeepUprightBuilder_;
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          public boolean hasTextKeepUpright() {
            return textKeepUprightBuilder_ != null || textKeepUpright_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          public com.google.protobuf.BoolValue getTextKeepUpright() {
            if (textKeepUprightBuilder_ == null) {
              return textKeepUpright_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textKeepUpright_;
            } else {
              return textKeepUprightBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          public Builder setTextKeepUpright(com.google.protobuf.BoolValue value) {
            if (textKeepUprightBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textKeepUpright_ = value;
              onChanged();
            } else {
              textKeepUprightBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          public Builder setTextKeepUpright(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (textKeepUprightBuilder_ == null) {
              textKeepUpright_ = builderForValue.build();
              onChanged();
            } else {
              textKeepUprightBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          public Builder mergeTextKeepUpright(com.google.protobuf.BoolValue value) {
            if (textKeepUprightBuilder_ == null) {
              if (textKeepUpright_ != null) {
                textKeepUpright_ =
                  com.google.protobuf.BoolValue.newBuilder(textKeepUpright_).mergeFrom(value).buildPartial();
              } else {
                textKeepUpright_ = value;
              }
              onChanged();
            } else {
              textKeepUprightBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          public Builder clearTextKeepUpright() {
            if (textKeepUprightBuilder_ == null) {
              textKeepUpright_ = null;
              onChanged();
            } else {
              textKeepUpright_ = null;
              textKeepUprightBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          public com.google.protobuf.BoolValue.Builder getTextKeepUprightBuilder() {
            
            onChanged();
            return getTextKeepUprightFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getTextKeepUprightOrBuilder() {
            if (textKeepUprightBuilder_ != null) {
              return textKeepUprightBuilder_.getMessageOrBuilder();
            } else {
              return textKeepUpright_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : textKeepUpright_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue text_keep_upright = 52;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getTextKeepUprightFieldBuilder() {
            if (textKeepUprightBuilder_ == null) {
              textKeepUprightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getTextKeepUpright(),
                      getParentForChildren(),
                      isClean());
              textKeepUpright_ = null;
            }
            return textKeepUprightBuilder_;
          }

          private int textTransform_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
           */
          public int getTextTransformValue() {
            return textTransform_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
           */
          public Builder setTextTransformValue(int value) {
            textTransform_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
           */
          public com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform getTextTransform() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform result = com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform.valueOf(textTransform_);
            return result == null ? com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
           */
          public Builder setTextTransform(com.tophap.mapbox_gl.proto.Layers.Layer.Symbol.TextTransform value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            textTransform_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.Layer.Symbol.TextTransform text_transform = 53;</code>
           */
          public Builder clearTextTransform() {
            
            textTransform_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTextTransform_ ;
          /**
           * <code>bool has_text_transform = 54;</code>
           */
          public boolean getHasTextTransform() {
            return hasTextTransform_;
          }
          /**
           * <code>bool has_text_transform = 54;</code>
           */
          public Builder setHasTextTransform(boolean value) {
            
            hasTextTransform_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_transform = 54;</code>
           */
          public Builder clearHasTextTransform() {
            
            hasTextTransform_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.Internal.FloatList textOffset_ = emptyFloatList();
          private void ensureTextOffsetIsMutable() {
            if (!((bitField1_ & 0x00400000) != 0)) {
              textOffset_ = mutableCopy(textOffset_);
              bitField1_ |= 0x00400000;
             }
          }
          /**
           * <code>repeated float text_offset = 55;</code>
           */
          public java.util.List<java.lang.Float>
              getTextOffsetList() {
            return ((bitField1_ & 0x00400000) != 0) ?
                     java.util.Collections.unmodifiableList(textOffset_) : textOffset_;
          }
          /**
           * <code>repeated float text_offset = 55;</code>
           */
          public int getTextOffsetCount() {
            return textOffset_.size();
          }
          /**
           * <code>repeated float text_offset = 55;</code>
           */
          public float getTextOffset(int index) {
            return textOffset_.getFloat(index);
          }
          /**
           * <code>repeated float text_offset = 55;</code>
           */
          public Builder setTextOffset(
              int index, float value) {
            ensureTextOffsetIsMutable();
            textOffset_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float text_offset = 55;</code>
           */
          public Builder addTextOffset(float value) {
            ensureTextOffsetIsMutable();
            textOffset_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float text_offset = 55;</code>
           */
          public Builder addAllTextOffset(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureTextOffsetIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, textOffset_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float text_offset = 55;</code>
           */
          public Builder clearTextOffset() {
            textOffset_ = emptyFloatList();
            bitField1_ = (bitField1_ & ~0x00400000);
            onChanged();
            return this;
          }

          private boolean hasTextOffset_ ;
          /**
           * <code>bool has_text_offset = 56;</code>
           */
          public boolean getHasTextOffset() {
            return hasTextOffset_;
          }
          /**
           * <code>bool has_text_offset = 56;</code>
           */
          public Builder setHasTextOffset(boolean value) {
            
            hasTextOffset_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_offset = 56;</code>
           */
          public Builder clearHasTextOffset() {
            
            hasTextOffset_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.BoolValue textAllowOverlap_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> textAllowOverlapBuilder_;
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          public boolean hasTextAllowOverlap() {
            return textAllowOverlapBuilder_ != null || textAllowOverlap_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          public com.google.protobuf.BoolValue getTextAllowOverlap() {
            if (textAllowOverlapBuilder_ == null) {
              return textAllowOverlap_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textAllowOverlap_;
            } else {
              return textAllowOverlapBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          public Builder setTextAllowOverlap(com.google.protobuf.BoolValue value) {
            if (textAllowOverlapBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textAllowOverlap_ = value;
              onChanged();
            } else {
              textAllowOverlapBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          public Builder setTextAllowOverlap(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (textAllowOverlapBuilder_ == null) {
              textAllowOverlap_ = builderForValue.build();
              onChanged();
            } else {
              textAllowOverlapBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          public Builder mergeTextAllowOverlap(com.google.protobuf.BoolValue value) {
            if (textAllowOverlapBuilder_ == null) {
              if (textAllowOverlap_ != null) {
                textAllowOverlap_ =
                  com.google.protobuf.BoolValue.newBuilder(textAllowOverlap_).mergeFrom(value).buildPartial();
              } else {
                textAllowOverlap_ = value;
              }
              onChanged();
            } else {
              textAllowOverlapBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          public Builder clearTextAllowOverlap() {
            if (textAllowOverlapBuilder_ == null) {
              textAllowOverlap_ = null;
              onChanged();
            } else {
              textAllowOverlap_ = null;
              textAllowOverlapBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          public com.google.protobuf.BoolValue.Builder getTextAllowOverlapBuilder() {
            
            onChanged();
            return getTextAllowOverlapFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getTextAllowOverlapOrBuilder() {
            if (textAllowOverlapBuilder_ != null) {
              return textAllowOverlapBuilder_.getMessageOrBuilder();
            } else {
              return textAllowOverlap_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : textAllowOverlap_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue text_allow_overlap = 57;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getTextAllowOverlapFieldBuilder() {
            if (textAllowOverlapBuilder_ == null) {
              textAllowOverlapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getTextAllowOverlap(),
                      getParentForChildren(),
                      isClean());
              textAllowOverlap_ = null;
            }
            return textAllowOverlapBuilder_;
          }

          private com.google.protobuf.BoolValue textIgnorePlacement_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> textIgnorePlacementBuilder_;
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          public boolean hasTextIgnorePlacement() {
            return textIgnorePlacementBuilder_ != null || textIgnorePlacement_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          public com.google.protobuf.BoolValue getTextIgnorePlacement() {
            if (textIgnorePlacementBuilder_ == null) {
              return textIgnorePlacement_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textIgnorePlacement_;
            } else {
              return textIgnorePlacementBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          public Builder setTextIgnorePlacement(com.google.protobuf.BoolValue value) {
            if (textIgnorePlacementBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textIgnorePlacement_ = value;
              onChanged();
            } else {
              textIgnorePlacementBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          public Builder setTextIgnorePlacement(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (textIgnorePlacementBuilder_ == null) {
              textIgnorePlacement_ = builderForValue.build();
              onChanged();
            } else {
              textIgnorePlacementBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          public Builder mergeTextIgnorePlacement(com.google.protobuf.BoolValue value) {
            if (textIgnorePlacementBuilder_ == null) {
              if (textIgnorePlacement_ != null) {
                textIgnorePlacement_ =
                  com.google.protobuf.BoolValue.newBuilder(textIgnorePlacement_).mergeFrom(value).buildPartial();
              } else {
                textIgnorePlacement_ = value;
              }
              onChanged();
            } else {
              textIgnorePlacementBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          public Builder clearTextIgnorePlacement() {
            if (textIgnorePlacementBuilder_ == null) {
              textIgnorePlacement_ = null;
              onChanged();
            } else {
              textIgnorePlacement_ = null;
              textIgnorePlacementBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          public com.google.protobuf.BoolValue.Builder getTextIgnorePlacementBuilder() {
            
            onChanged();
            return getTextIgnorePlacementFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getTextIgnorePlacementOrBuilder() {
            if (textIgnorePlacementBuilder_ != null) {
              return textIgnorePlacementBuilder_.getMessageOrBuilder();
            } else {
              return textIgnorePlacement_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : textIgnorePlacement_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue text_ignore_placement = 58;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getTextIgnorePlacementFieldBuilder() {
            if (textIgnorePlacementBuilder_ == null) {
              textIgnorePlacementBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getTextIgnorePlacement(),
                      getParentForChildren(),
                      isClean());
              textIgnorePlacement_ = null;
            }
            return textIgnorePlacementBuilder_;
          }

          private com.google.protobuf.BoolValue textOptional_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> textOptionalBuilder_;
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          public boolean hasTextOptional() {
            return textOptionalBuilder_ != null || textOptional_ != null;
          }
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          public com.google.protobuf.BoolValue getTextOptional() {
            if (textOptionalBuilder_ == null) {
              return textOptional_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : textOptional_;
            } else {
              return textOptionalBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          public Builder setTextOptional(com.google.protobuf.BoolValue value) {
            if (textOptionalBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textOptional_ = value;
              onChanged();
            } else {
              textOptionalBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          public Builder setTextOptional(
              com.google.protobuf.BoolValue.Builder builderForValue) {
            if (textOptionalBuilder_ == null) {
              textOptional_ = builderForValue.build();
              onChanged();
            } else {
              textOptionalBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          public Builder mergeTextOptional(com.google.protobuf.BoolValue value) {
            if (textOptionalBuilder_ == null) {
              if (textOptional_ != null) {
                textOptional_ =
                  com.google.protobuf.BoolValue.newBuilder(textOptional_).mergeFrom(value).buildPartial();
              } else {
                textOptional_ = value;
              }
              onChanged();
            } else {
              textOptionalBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          public Builder clearTextOptional() {
            if (textOptionalBuilder_ == null) {
              textOptional_ = null;
              onChanged();
            } else {
              textOptional_ = null;
              textOptionalBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          public com.google.protobuf.BoolValue.Builder getTextOptionalBuilder() {
            
            onChanged();
            return getTextOptionalFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          public com.google.protobuf.BoolValueOrBuilder getTextOptionalOrBuilder() {
            if (textOptionalBuilder_ != null) {
              return textOptionalBuilder_.getMessageOrBuilder();
            } else {
              return textOptional_ == null ?
                  com.google.protobuf.BoolValue.getDefaultInstance() : textOptional_;
            }
          }
          /**
           * <code>.google.protobuf.BoolValue text_optional = 59;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
              getTextOptionalFieldBuilder() {
            if (textOptionalBuilder_ == null) {
              textOptionalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                      getTextOptional(),
                      getParentForChildren(),
                      isClean());
              textOptional_ = null;
            }
            return textOptionalBuilder_;
          }

          private com.google.protobuf.FloatValue iconOpacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> iconOpacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          public boolean hasIconOpacity() {
            return iconOpacityBuilder_ != null || iconOpacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          public com.google.protobuf.FloatValue getIconOpacity() {
            if (iconOpacityBuilder_ == null) {
              return iconOpacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconOpacity_;
            } else {
              return iconOpacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          public Builder setIconOpacity(com.google.protobuf.FloatValue value) {
            if (iconOpacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconOpacity_ = value;
              onChanged();
            } else {
              iconOpacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          public Builder setIconOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (iconOpacityBuilder_ == null) {
              iconOpacity_ = builderForValue.build();
              onChanged();
            } else {
              iconOpacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          public Builder mergeIconOpacity(com.google.protobuf.FloatValue value) {
            if (iconOpacityBuilder_ == null) {
              if (iconOpacity_ != null) {
                iconOpacity_ =
                  com.google.protobuf.FloatValue.newBuilder(iconOpacity_).mergeFrom(value).buildPartial();
              } else {
                iconOpacity_ = value;
              }
              onChanged();
            } else {
              iconOpacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          public Builder clearIconOpacity() {
            if (iconOpacityBuilder_ == null) {
              iconOpacity_ = null;
              onChanged();
            } else {
              iconOpacity_ = null;
              iconOpacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          public com.google.protobuf.FloatValue.Builder getIconOpacityBuilder() {
            
            onChanged();
            return getIconOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getIconOpacityOrBuilder() {
            if (iconOpacityBuilder_ != null) {
              return iconOpacityBuilder_.getMessageOrBuilder();
            } else {
              return iconOpacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : iconOpacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_opacity = 60;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getIconOpacityFieldBuilder() {
            if (iconOpacityBuilder_ == null) {
              iconOpacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getIconOpacity(),
                      getParentForChildren(),
                      isClean());
              iconOpacity_ = null;
            }
            return iconOpacityBuilder_;
          }

          private com.google.protobuf.Int32Value iconColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> iconColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          public boolean hasIconColor() {
            return iconColorBuilder_ != null || iconColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          public com.google.protobuf.Int32Value getIconColor() {
            if (iconColorBuilder_ == null) {
              return iconColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : iconColor_;
            } else {
              return iconColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          public Builder setIconColor(com.google.protobuf.Int32Value value) {
            if (iconColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconColor_ = value;
              onChanged();
            } else {
              iconColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          public Builder setIconColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (iconColorBuilder_ == null) {
              iconColor_ = builderForValue.build();
              onChanged();
            } else {
              iconColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          public Builder mergeIconColor(com.google.protobuf.Int32Value value) {
            if (iconColorBuilder_ == null) {
              if (iconColor_ != null) {
                iconColor_ =
                  com.google.protobuf.Int32Value.newBuilder(iconColor_).mergeFrom(value).buildPartial();
              } else {
                iconColor_ = value;
              }
              onChanged();
            } else {
              iconColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          public Builder clearIconColor() {
            if (iconColorBuilder_ == null) {
              iconColor_ = null;
              onChanged();
            } else {
              iconColor_ = null;
              iconColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          public com.google.protobuf.Int32Value.Builder getIconColorBuilder() {
            
            onChanged();
            return getIconColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getIconColorOrBuilder() {
            if (iconColorBuilder_ != null) {
              return iconColorBuilder_.getMessageOrBuilder();
            } else {
              return iconColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : iconColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value icon_color = 61;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getIconColorFieldBuilder() {
            if (iconColorBuilder_ == null) {
              iconColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getIconColor(),
                      getParentForChildren(),
                      isClean());
              iconColor_ = null;
            }
            return iconColorBuilder_;
          }

          private com.google.protobuf.Int32Value iconHaloColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> iconHaloColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          public boolean hasIconHaloColor() {
            return iconHaloColorBuilder_ != null || iconHaloColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          public com.google.protobuf.Int32Value getIconHaloColor() {
            if (iconHaloColorBuilder_ == null) {
              return iconHaloColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : iconHaloColor_;
            } else {
              return iconHaloColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          public Builder setIconHaloColor(com.google.protobuf.Int32Value value) {
            if (iconHaloColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconHaloColor_ = value;
              onChanged();
            } else {
              iconHaloColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          public Builder setIconHaloColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (iconHaloColorBuilder_ == null) {
              iconHaloColor_ = builderForValue.build();
              onChanged();
            } else {
              iconHaloColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          public Builder mergeIconHaloColor(com.google.protobuf.Int32Value value) {
            if (iconHaloColorBuilder_ == null) {
              if (iconHaloColor_ != null) {
                iconHaloColor_ =
                  com.google.protobuf.Int32Value.newBuilder(iconHaloColor_).mergeFrom(value).buildPartial();
              } else {
                iconHaloColor_ = value;
              }
              onChanged();
            } else {
              iconHaloColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          public Builder clearIconHaloColor() {
            if (iconHaloColorBuilder_ == null) {
              iconHaloColor_ = null;
              onChanged();
            } else {
              iconHaloColor_ = null;
              iconHaloColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          public com.google.protobuf.Int32Value.Builder getIconHaloColorBuilder() {
            
            onChanged();
            return getIconHaloColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getIconHaloColorOrBuilder() {
            if (iconHaloColorBuilder_ != null) {
              return iconHaloColorBuilder_.getMessageOrBuilder();
            } else {
              return iconHaloColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : iconHaloColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value icon_halo_color = 62;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getIconHaloColorFieldBuilder() {
            if (iconHaloColorBuilder_ == null) {
              iconHaloColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getIconHaloColor(),
                      getParentForChildren(),
                      isClean());
              iconHaloColor_ = null;
            }
            return iconHaloColorBuilder_;
          }

          private com.google.protobuf.FloatValue iconHaloWidth_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> iconHaloWidthBuilder_;
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          public boolean hasIconHaloWidth() {
            return iconHaloWidthBuilder_ != null || iconHaloWidth_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          public com.google.protobuf.FloatValue getIconHaloWidth() {
            if (iconHaloWidthBuilder_ == null) {
              return iconHaloWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconHaloWidth_;
            } else {
              return iconHaloWidthBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          public Builder setIconHaloWidth(com.google.protobuf.FloatValue value) {
            if (iconHaloWidthBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconHaloWidth_ = value;
              onChanged();
            } else {
              iconHaloWidthBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          public Builder setIconHaloWidth(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (iconHaloWidthBuilder_ == null) {
              iconHaloWidth_ = builderForValue.build();
              onChanged();
            } else {
              iconHaloWidthBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          public Builder mergeIconHaloWidth(com.google.protobuf.FloatValue value) {
            if (iconHaloWidthBuilder_ == null) {
              if (iconHaloWidth_ != null) {
                iconHaloWidth_ =
                  com.google.protobuf.FloatValue.newBuilder(iconHaloWidth_).mergeFrom(value).buildPartial();
              } else {
                iconHaloWidth_ = value;
              }
              onChanged();
            } else {
              iconHaloWidthBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          public Builder clearIconHaloWidth() {
            if (iconHaloWidthBuilder_ == null) {
              iconHaloWidth_ = null;
              onChanged();
            } else {
              iconHaloWidth_ = null;
              iconHaloWidthBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          public com.google.protobuf.FloatValue.Builder getIconHaloWidthBuilder() {
            
            onChanged();
            return getIconHaloWidthFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getIconHaloWidthOrBuilder() {
            if (iconHaloWidthBuilder_ != null) {
              return iconHaloWidthBuilder_.getMessageOrBuilder();
            } else {
              return iconHaloWidth_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : iconHaloWidth_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_width = 63;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getIconHaloWidthFieldBuilder() {
            if (iconHaloWidthBuilder_ == null) {
              iconHaloWidthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getIconHaloWidth(),
                      getParentForChildren(),
                      isClean());
              iconHaloWidth_ = null;
            }
            return iconHaloWidthBuilder_;
          }

          private com.google.protobuf.FloatValue iconHaloBlur_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> iconHaloBlurBuilder_;
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          public boolean hasIconHaloBlur() {
            return iconHaloBlurBuilder_ != null || iconHaloBlur_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          public com.google.protobuf.FloatValue getIconHaloBlur() {
            if (iconHaloBlurBuilder_ == null) {
              return iconHaloBlur_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : iconHaloBlur_;
            } else {
              return iconHaloBlurBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          public Builder setIconHaloBlur(com.google.protobuf.FloatValue value) {
            if (iconHaloBlurBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconHaloBlur_ = value;
              onChanged();
            } else {
              iconHaloBlurBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          public Builder setIconHaloBlur(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (iconHaloBlurBuilder_ == null) {
              iconHaloBlur_ = builderForValue.build();
              onChanged();
            } else {
              iconHaloBlurBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          public Builder mergeIconHaloBlur(com.google.protobuf.FloatValue value) {
            if (iconHaloBlurBuilder_ == null) {
              if (iconHaloBlur_ != null) {
                iconHaloBlur_ =
                  com.google.protobuf.FloatValue.newBuilder(iconHaloBlur_).mergeFrom(value).buildPartial();
              } else {
                iconHaloBlur_ = value;
              }
              onChanged();
            } else {
              iconHaloBlurBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          public Builder clearIconHaloBlur() {
            if (iconHaloBlurBuilder_ == null) {
              iconHaloBlur_ = null;
              onChanged();
            } else {
              iconHaloBlur_ = null;
              iconHaloBlurBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          public com.google.protobuf.FloatValue.Builder getIconHaloBlurBuilder() {
            
            onChanged();
            return getIconHaloBlurFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getIconHaloBlurOrBuilder() {
            if (iconHaloBlurBuilder_ != null) {
              return iconHaloBlurBuilder_.getMessageOrBuilder();
            } else {
              return iconHaloBlur_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : iconHaloBlur_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue icon_halo_blur = 64;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getIconHaloBlurFieldBuilder() {
            if (iconHaloBlurBuilder_ == null) {
              iconHaloBlurBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getIconHaloBlur(),
                      getParentForChildren(),
                      isClean());
              iconHaloBlur_ = null;
            }
            return iconHaloBlurBuilder_;
          }

          private com.google.protobuf.Internal.FloatList iconTranslate_ = emptyFloatList();
          private void ensureIconTranslateIsMutable() {
            if (!((bitField2_ & 0x00000001) != 0)) {
              iconTranslate_ = mutableCopy(iconTranslate_);
              bitField2_ |= 0x00000001;
             }
          }
          /**
           * <code>repeated float icon_translate = 65;</code>
           */
          public java.util.List<java.lang.Float>
              getIconTranslateList() {
            return ((bitField2_ & 0x00000001) != 0) ?
                     java.util.Collections.unmodifiableList(iconTranslate_) : iconTranslate_;
          }
          /**
           * <code>repeated float icon_translate = 65;</code>
           */
          public int getIconTranslateCount() {
            return iconTranslate_.size();
          }
          /**
           * <code>repeated float icon_translate = 65;</code>
           */
          public float getIconTranslate(int index) {
            return iconTranslate_.getFloat(index);
          }
          /**
           * <code>repeated float icon_translate = 65;</code>
           */
          public Builder setIconTranslate(
              int index, float value) {
            ensureIconTranslateIsMutable();
            iconTranslate_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_translate = 65;</code>
           */
          public Builder addIconTranslate(float value) {
            ensureIconTranslateIsMutable();
            iconTranslate_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_translate = 65;</code>
           */
          public Builder addAllIconTranslate(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureIconTranslateIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, iconTranslate_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float icon_translate = 65;</code>
           */
          public Builder clearIconTranslate() {
            iconTranslate_ = emptyFloatList();
            bitField2_ = (bitField2_ & ~0x00000001);
            onChanged();
            return this;
          }

          private boolean hasIconTranslate_ ;
          /**
           * <code>bool has_icon_translate = 66;</code>
           */
          public boolean getHasIconTranslate() {
            return hasIconTranslate_;
          }
          /**
           * <code>bool has_icon_translate = 66;</code>
           */
          public Builder setHasIconTranslate(boolean value) {
            
            hasIconTranslate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_icon_translate = 66;</code>
           */
          public Builder clearHasIconTranslate() {
            
            hasIconTranslate_ = false;
            onChanged();
            return this;
          }

          private int iconTranslateAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
           */
          public int getIconTranslateAnchorValue() {
            return iconTranslateAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
           */
          public Builder setIconTranslateAnchorValue(int value) {
            iconTranslateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getIconTranslateAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(iconTranslateAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
           */
          public Builder setIconTranslateAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            iconTranslateAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor icon_translate_anchor = 67;</code>
           */
          public Builder clearIconTranslateAnchor() {
            
            iconTranslateAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasIconTranslateAnchor_ ;
          /**
           * <code>bool has_icon_translate_anchor = 68;</code>
           */
          public boolean getHasIconTranslateAnchor() {
            return hasIconTranslateAnchor_;
          }
          /**
           * <code>bool has_icon_translate_anchor = 68;</code>
           */
          public Builder setHasIconTranslateAnchor(boolean value) {
            
            hasIconTranslateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_icon_translate_anchor = 68;</code>
           */
          public Builder clearHasIconTranslateAnchor() {
            
            hasIconTranslateAnchor_ = false;
            onChanged();
            return this;
          }

          private com.google.protobuf.FloatValue textOpacity_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textOpacityBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          public boolean hasTextOpacity() {
            return textOpacityBuilder_ != null || textOpacity_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          public com.google.protobuf.FloatValue getTextOpacity() {
            if (textOpacityBuilder_ == null) {
              return textOpacity_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textOpacity_;
            } else {
              return textOpacityBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          public Builder setTextOpacity(com.google.protobuf.FloatValue value) {
            if (textOpacityBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textOpacity_ = value;
              onChanged();
            } else {
              textOpacityBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          public Builder setTextOpacity(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textOpacityBuilder_ == null) {
              textOpacity_ = builderForValue.build();
              onChanged();
            } else {
              textOpacityBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          public Builder mergeTextOpacity(com.google.protobuf.FloatValue value) {
            if (textOpacityBuilder_ == null) {
              if (textOpacity_ != null) {
                textOpacity_ =
                  com.google.protobuf.FloatValue.newBuilder(textOpacity_).mergeFrom(value).buildPartial();
              } else {
                textOpacity_ = value;
              }
              onChanged();
            } else {
              textOpacityBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          public Builder clearTextOpacity() {
            if (textOpacityBuilder_ == null) {
              textOpacity_ = null;
              onChanged();
            } else {
              textOpacity_ = null;
              textOpacityBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextOpacityBuilder() {
            
            onChanged();
            return getTextOpacityFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextOpacityOrBuilder() {
            if (textOpacityBuilder_ != null) {
              return textOpacityBuilder_.getMessageOrBuilder();
            } else {
              return textOpacity_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textOpacity_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_opacity = 69;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextOpacityFieldBuilder() {
            if (textOpacityBuilder_ == null) {
              textOpacityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextOpacity(),
                      getParentForChildren(),
                      isClean());
              textOpacity_ = null;
            }
            return textOpacityBuilder_;
          }

          private com.google.protobuf.Int32Value textColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> textColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          public boolean hasTextColor() {
            return textColorBuilder_ != null || textColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          public com.google.protobuf.Int32Value getTextColor() {
            if (textColorBuilder_ == null) {
              return textColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : textColor_;
            } else {
              return textColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          public Builder setTextColor(com.google.protobuf.Int32Value value) {
            if (textColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textColor_ = value;
              onChanged();
            } else {
              textColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          public Builder setTextColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (textColorBuilder_ == null) {
              textColor_ = builderForValue.build();
              onChanged();
            } else {
              textColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          public Builder mergeTextColor(com.google.protobuf.Int32Value value) {
            if (textColorBuilder_ == null) {
              if (textColor_ != null) {
                textColor_ =
                  com.google.protobuf.Int32Value.newBuilder(textColor_).mergeFrom(value).buildPartial();
              } else {
                textColor_ = value;
              }
              onChanged();
            } else {
              textColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          public Builder clearTextColor() {
            if (textColorBuilder_ == null) {
              textColor_ = null;
              onChanged();
            } else {
              textColor_ = null;
              textColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          public com.google.protobuf.Int32Value.Builder getTextColorBuilder() {
            
            onChanged();
            return getTextColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getTextColorOrBuilder() {
            if (textColorBuilder_ != null) {
              return textColorBuilder_.getMessageOrBuilder();
            } else {
              return textColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : textColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value text_color = 70;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getTextColorFieldBuilder() {
            if (textColorBuilder_ == null) {
              textColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getTextColor(),
                      getParentForChildren(),
                      isClean());
              textColor_ = null;
            }
            return textColorBuilder_;
          }

          private com.google.protobuf.Int32Value textHaloColor_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> textHaloColorBuilder_;
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          public boolean hasTextHaloColor() {
            return textHaloColorBuilder_ != null || textHaloColor_ != null;
          }
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          public com.google.protobuf.Int32Value getTextHaloColor() {
            if (textHaloColorBuilder_ == null) {
              return textHaloColor_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : textHaloColor_;
            } else {
              return textHaloColorBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          public Builder setTextHaloColor(com.google.protobuf.Int32Value value) {
            if (textHaloColorBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textHaloColor_ = value;
              onChanged();
            } else {
              textHaloColorBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          public Builder setTextHaloColor(
              com.google.protobuf.Int32Value.Builder builderForValue) {
            if (textHaloColorBuilder_ == null) {
              textHaloColor_ = builderForValue.build();
              onChanged();
            } else {
              textHaloColorBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          public Builder mergeTextHaloColor(com.google.protobuf.Int32Value value) {
            if (textHaloColorBuilder_ == null) {
              if (textHaloColor_ != null) {
                textHaloColor_ =
                  com.google.protobuf.Int32Value.newBuilder(textHaloColor_).mergeFrom(value).buildPartial();
              } else {
                textHaloColor_ = value;
              }
              onChanged();
            } else {
              textHaloColorBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          public Builder clearTextHaloColor() {
            if (textHaloColorBuilder_ == null) {
              textHaloColor_ = null;
              onChanged();
            } else {
              textHaloColor_ = null;
              textHaloColorBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          public com.google.protobuf.Int32Value.Builder getTextHaloColorBuilder() {
            
            onChanged();
            return getTextHaloColorFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          public com.google.protobuf.Int32ValueOrBuilder getTextHaloColorOrBuilder() {
            if (textHaloColorBuilder_ != null) {
              return textHaloColorBuilder_.getMessageOrBuilder();
            } else {
              return textHaloColor_ == null ?
                  com.google.protobuf.Int32Value.getDefaultInstance() : textHaloColor_;
            }
          }
          /**
           * <code>.google.protobuf.Int32Value text_halo_color = 71;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
              getTextHaloColorFieldBuilder() {
            if (textHaloColorBuilder_ == null) {
              textHaloColorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                      getTextHaloColor(),
                      getParentForChildren(),
                      isClean());
              textHaloColor_ = null;
            }
            return textHaloColorBuilder_;
          }

          private com.google.protobuf.FloatValue textHaloWidth_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textHaloWidthBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          public boolean hasTextHaloWidth() {
            return textHaloWidthBuilder_ != null || textHaloWidth_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          public com.google.protobuf.FloatValue getTextHaloWidth() {
            if (textHaloWidthBuilder_ == null) {
              return textHaloWidth_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textHaloWidth_;
            } else {
              return textHaloWidthBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          public Builder setTextHaloWidth(com.google.protobuf.FloatValue value) {
            if (textHaloWidthBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textHaloWidth_ = value;
              onChanged();
            } else {
              textHaloWidthBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          public Builder setTextHaloWidth(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textHaloWidthBuilder_ == null) {
              textHaloWidth_ = builderForValue.build();
              onChanged();
            } else {
              textHaloWidthBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          public Builder mergeTextHaloWidth(com.google.protobuf.FloatValue value) {
            if (textHaloWidthBuilder_ == null) {
              if (textHaloWidth_ != null) {
                textHaloWidth_ =
                  com.google.protobuf.FloatValue.newBuilder(textHaloWidth_).mergeFrom(value).buildPartial();
              } else {
                textHaloWidth_ = value;
              }
              onChanged();
            } else {
              textHaloWidthBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          public Builder clearTextHaloWidth() {
            if (textHaloWidthBuilder_ == null) {
              textHaloWidth_ = null;
              onChanged();
            } else {
              textHaloWidth_ = null;
              textHaloWidthBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextHaloWidthBuilder() {
            
            onChanged();
            return getTextHaloWidthFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextHaloWidthOrBuilder() {
            if (textHaloWidthBuilder_ != null) {
              return textHaloWidthBuilder_.getMessageOrBuilder();
            } else {
              return textHaloWidth_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textHaloWidth_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_width = 72;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextHaloWidthFieldBuilder() {
            if (textHaloWidthBuilder_ == null) {
              textHaloWidthBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextHaloWidth(),
                      getParentForChildren(),
                      isClean());
              textHaloWidth_ = null;
            }
            return textHaloWidthBuilder_;
          }

          private com.google.protobuf.FloatValue textHaloBlur_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> textHaloBlurBuilder_;
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          public boolean hasTextHaloBlur() {
            return textHaloBlurBuilder_ != null || textHaloBlur_ != null;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          public com.google.protobuf.FloatValue getTextHaloBlur() {
            if (textHaloBlurBuilder_ == null) {
              return textHaloBlur_ == null ? com.google.protobuf.FloatValue.getDefaultInstance() : textHaloBlur_;
            } else {
              return textHaloBlurBuilder_.getMessage();
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          public Builder setTextHaloBlur(com.google.protobuf.FloatValue value) {
            if (textHaloBlurBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textHaloBlur_ = value;
              onChanged();
            } else {
              textHaloBlurBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          public Builder setTextHaloBlur(
              com.google.protobuf.FloatValue.Builder builderForValue) {
            if (textHaloBlurBuilder_ == null) {
              textHaloBlur_ = builderForValue.build();
              onChanged();
            } else {
              textHaloBlurBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          public Builder mergeTextHaloBlur(com.google.protobuf.FloatValue value) {
            if (textHaloBlurBuilder_ == null) {
              if (textHaloBlur_ != null) {
                textHaloBlur_ =
                  com.google.protobuf.FloatValue.newBuilder(textHaloBlur_).mergeFrom(value).buildPartial();
              } else {
                textHaloBlur_ = value;
              }
              onChanged();
            } else {
              textHaloBlurBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          public Builder clearTextHaloBlur() {
            if (textHaloBlurBuilder_ == null) {
              textHaloBlur_ = null;
              onChanged();
            } else {
              textHaloBlur_ = null;
              textHaloBlurBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          public com.google.protobuf.FloatValue.Builder getTextHaloBlurBuilder() {
            
            onChanged();
            return getTextHaloBlurFieldBuilder().getBuilder();
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          public com.google.protobuf.FloatValueOrBuilder getTextHaloBlurOrBuilder() {
            if (textHaloBlurBuilder_ != null) {
              return textHaloBlurBuilder_.getMessageOrBuilder();
            } else {
              return textHaloBlur_ == null ?
                  com.google.protobuf.FloatValue.getDefaultInstance() : textHaloBlur_;
            }
          }
          /**
           * <code>.google.protobuf.FloatValue text_halo_blur = 73;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder> 
              getTextHaloBlurFieldBuilder() {
            if (textHaloBlurBuilder_ == null) {
              textHaloBlurBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.protobuf.FloatValue, com.google.protobuf.FloatValue.Builder, com.google.protobuf.FloatValueOrBuilder>(
                      getTextHaloBlur(),
                      getParentForChildren(),
                      isClean());
              textHaloBlur_ = null;
            }
            return textHaloBlurBuilder_;
          }

          private com.google.protobuf.Internal.FloatList textTranslate_ = emptyFloatList();
          private void ensureTextTranslateIsMutable() {
            if (!((bitField2_ & 0x00000200) != 0)) {
              textTranslate_ = mutableCopy(textTranslate_);
              bitField2_ |= 0x00000200;
             }
          }
          /**
           * <code>repeated float text_translate = 74;</code>
           */
          public java.util.List<java.lang.Float>
              getTextTranslateList() {
            return ((bitField2_ & 0x00000200) != 0) ?
                     java.util.Collections.unmodifiableList(textTranslate_) : textTranslate_;
          }
          /**
           * <code>repeated float text_translate = 74;</code>
           */
          public int getTextTranslateCount() {
            return textTranslate_.size();
          }
          /**
           * <code>repeated float text_translate = 74;</code>
           */
          public float getTextTranslate(int index) {
            return textTranslate_.getFloat(index);
          }
          /**
           * <code>repeated float text_translate = 74;</code>
           */
          public Builder setTextTranslate(
              int index, float value) {
            ensureTextTranslateIsMutable();
            textTranslate_.setFloat(index, value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float text_translate = 74;</code>
           */
          public Builder addTextTranslate(float value) {
            ensureTextTranslateIsMutable();
            textTranslate_.addFloat(value);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float text_translate = 74;</code>
           */
          public Builder addAllTextTranslate(
              java.lang.Iterable<? extends java.lang.Float> values) {
            ensureTextTranslateIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, textTranslate_);
            onChanged();
            return this;
          }
          /**
           * <code>repeated float text_translate = 74;</code>
           */
          public Builder clearTextTranslate() {
            textTranslate_ = emptyFloatList();
            bitField2_ = (bitField2_ & ~0x00000200);
            onChanged();
            return this;
          }

          private boolean hasTextTranslate_ ;
          /**
           * <code>bool has_text_translate = 75;</code>
           */
          public boolean getHasTextTranslate() {
            return hasTextTranslate_;
          }
          /**
           * <code>bool has_text_translate = 75;</code>
           */
          public Builder setHasTextTranslate(boolean value) {
            
            hasTextTranslate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_translate = 75;</code>
           */
          public Builder clearHasTextTranslate() {
            
            hasTextTranslate_ = false;
            onChanged();
            return this;
          }

          private int textTranslateAnchor_ = 0;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
           */
          public int getTextTranslateAnchorValue() {
            return textTranslateAnchor_;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
           */
          public Builder setTextTranslateAnchorValue(int value) {
            textTranslateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor getTextTranslateAnchor() {
            @SuppressWarnings("deprecation")
            com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor result = com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.valueOf(textTranslateAnchor_);
            return result == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor.UNRECOGNIZED : result;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
           */
          public Builder setTextTranslateAnchor(com.tophap.mapbox_gl.proto.MapboxUtil.TranslateAnchor value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            textTranslateAnchor_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TranslateAnchor text_translate_anchor = 76;</code>
           */
          public Builder clearTextTranslateAnchor() {
            
            textTranslateAnchor_ = 0;
            onChanged();
            return this;
          }

          private boolean hasTextTranslateAnchor_ ;
          /**
           * <code>bool has_text_translate_anchor = 77;</code>
           */
          public boolean getHasTextTranslateAnchor() {
            return hasTextTranslateAnchor_;
          }
          /**
           * <code>bool has_text_translate_anchor = 77;</code>
           */
          public Builder setHasTextTranslateAnchor(boolean value) {
            
            hasTextTranslateAnchor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>bool has_text_translate_anchor = 77;</code>
           */
          public Builder clearHasTextTranslateAnchor() {
            
            hasTextTranslateAnchor_ = false;
            onChanged();
            return this;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconOpacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> iconOpacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          public boolean hasIconOpacityTransition() {
            return iconOpacityTransitionBuilder_ != null || iconOpacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconOpacityTransition() {
            if (iconOpacityTransitionBuilder_ == null) {
              return iconOpacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconOpacityTransition_;
            } else {
              return iconOpacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          public Builder setIconOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconOpacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconOpacityTransition_ = value;
              onChanged();
            } else {
              iconOpacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          public Builder setIconOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (iconOpacityTransitionBuilder_ == null) {
              iconOpacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              iconOpacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          public Builder mergeIconOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconOpacityTransitionBuilder_ == null) {
              if (iconOpacityTransition_ != null) {
                iconOpacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(iconOpacityTransition_).mergeFrom(value).buildPartial();
              } else {
                iconOpacityTransition_ = value;
              }
              onChanged();
            } else {
              iconOpacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          public Builder clearIconOpacityTransition() {
            if (iconOpacityTransitionBuilder_ == null) {
              iconOpacityTransition_ = null;
              onChanged();
            } else {
              iconOpacityTransition_ = null;
              iconOpacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getIconOpacityTransitionBuilder() {
            
            onChanged();
            return getIconOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconOpacityTransitionOrBuilder() {
            if (iconOpacityTransitionBuilder_ != null) {
              return iconOpacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return iconOpacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconOpacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_opacity_transition = 78;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getIconOpacityTransitionFieldBuilder() {
            if (iconOpacityTransitionBuilder_ == null) {
              iconOpacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getIconOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              iconOpacityTransition_ = null;
            }
            return iconOpacityTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> iconColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          public boolean hasIconColorTransition() {
            return iconColorTransitionBuilder_ != null || iconColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconColorTransition() {
            if (iconColorTransitionBuilder_ == null) {
              return iconColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconColorTransition_;
            } else {
              return iconColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          public Builder setIconColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconColorTransition_ = value;
              onChanged();
            } else {
              iconColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          public Builder setIconColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (iconColorTransitionBuilder_ == null) {
              iconColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              iconColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          public Builder mergeIconColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconColorTransitionBuilder_ == null) {
              if (iconColorTransition_ != null) {
                iconColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(iconColorTransition_).mergeFrom(value).buildPartial();
              } else {
                iconColorTransition_ = value;
              }
              onChanged();
            } else {
              iconColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          public Builder clearIconColorTransition() {
            if (iconColorTransitionBuilder_ == null) {
              iconColorTransition_ = null;
              onChanged();
            } else {
              iconColorTransition_ = null;
              iconColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getIconColorTransitionBuilder() {
            
            onChanged();
            return getIconColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconColorTransitionOrBuilder() {
            if (iconColorTransitionBuilder_ != null) {
              return iconColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return iconColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_color_transition = 79;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getIconColorTransitionFieldBuilder() {
            if (iconColorTransitionBuilder_ == null) {
              iconColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getIconColorTransition(),
                      getParentForChildren(),
                      isClean());
              iconColorTransition_ = null;
            }
            return iconColorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconHaloColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> iconHaloColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          public boolean hasIconHaloColorTransition() {
            return iconHaloColorTransitionBuilder_ != null || iconHaloColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloColorTransition() {
            if (iconHaloColorTransitionBuilder_ == null) {
              return iconHaloColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloColorTransition_;
            } else {
              return iconHaloColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          public Builder setIconHaloColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconHaloColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconHaloColorTransition_ = value;
              onChanged();
            } else {
              iconHaloColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          public Builder setIconHaloColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (iconHaloColorTransitionBuilder_ == null) {
              iconHaloColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              iconHaloColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          public Builder mergeIconHaloColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconHaloColorTransitionBuilder_ == null) {
              if (iconHaloColorTransition_ != null) {
                iconHaloColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(iconHaloColorTransition_).mergeFrom(value).buildPartial();
              } else {
                iconHaloColorTransition_ = value;
              }
              onChanged();
            } else {
              iconHaloColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          public Builder clearIconHaloColorTransition() {
            if (iconHaloColorTransitionBuilder_ == null) {
              iconHaloColorTransition_ = null;
              onChanged();
            } else {
              iconHaloColorTransition_ = null;
              iconHaloColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getIconHaloColorTransitionBuilder() {
            
            onChanged();
            return getIconHaloColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloColorTransitionOrBuilder() {
            if (iconHaloColorTransitionBuilder_ != null) {
              return iconHaloColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return iconHaloColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_color_transition = 80;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getIconHaloColorTransitionFieldBuilder() {
            if (iconHaloColorTransitionBuilder_ == null) {
              iconHaloColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getIconHaloColorTransition(),
                      getParentForChildren(),
                      isClean());
              iconHaloColorTransition_ = null;
            }
            return iconHaloColorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconHaloWidthTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> iconHaloWidthTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          public boolean hasIconHaloWidthTransition() {
            return iconHaloWidthTransitionBuilder_ != null || iconHaloWidthTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloWidthTransition() {
            if (iconHaloWidthTransitionBuilder_ == null) {
              return iconHaloWidthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloWidthTransition_;
            } else {
              return iconHaloWidthTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          public Builder setIconHaloWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconHaloWidthTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconHaloWidthTransition_ = value;
              onChanged();
            } else {
              iconHaloWidthTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          public Builder setIconHaloWidthTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (iconHaloWidthTransitionBuilder_ == null) {
              iconHaloWidthTransition_ = builderForValue.build();
              onChanged();
            } else {
              iconHaloWidthTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          public Builder mergeIconHaloWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconHaloWidthTransitionBuilder_ == null) {
              if (iconHaloWidthTransition_ != null) {
                iconHaloWidthTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(iconHaloWidthTransition_).mergeFrom(value).buildPartial();
              } else {
                iconHaloWidthTransition_ = value;
              }
              onChanged();
            } else {
              iconHaloWidthTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          public Builder clearIconHaloWidthTransition() {
            if (iconHaloWidthTransitionBuilder_ == null) {
              iconHaloWidthTransition_ = null;
              onChanged();
            } else {
              iconHaloWidthTransition_ = null;
              iconHaloWidthTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getIconHaloWidthTransitionBuilder() {
            
            onChanged();
            return getIconHaloWidthTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloWidthTransitionOrBuilder() {
            if (iconHaloWidthTransitionBuilder_ != null) {
              return iconHaloWidthTransitionBuilder_.getMessageOrBuilder();
            } else {
              return iconHaloWidthTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloWidthTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_width_transition = 81;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getIconHaloWidthTransitionFieldBuilder() {
            if (iconHaloWidthTransitionBuilder_ == null) {
              iconHaloWidthTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getIconHaloWidthTransition(),
                      getParentForChildren(),
                      isClean());
              iconHaloWidthTransition_ = null;
            }
            return iconHaloWidthTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconHaloBlurTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> iconHaloBlurTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          public boolean hasIconHaloBlurTransition() {
            return iconHaloBlurTransitionBuilder_ != null || iconHaloBlurTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconHaloBlurTransition() {
            if (iconHaloBlurTransitionBuilder_ == null) {
              return iconHaloBlurTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloBlurTransition_;
            } else {
              return iconHaloBlurTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          public Builder setIconHaloBlurTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconHaloBlurTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconHaloBlurTransition_ = value;
              onChanged();
            } else {
              iconHaloBlurTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          public Builder setIconHaloBlurTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (iconHaloBlurTransitionBuilder_ == null) {
              iconHaloBlurTransition_ = builderForValue.build();
              onChanged();
            } else {
              iconHaloBlurTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          public Builder mergeIconHaloBlurTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconHaloBlurTransitionBuilder_ == null) {
              if (iconHaloBlurTransition_ != null) {
                iconHaloBlurTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(iconHaloBlurTransition_).mergeFrom(value).buildPartial();
              } else {
                iconHaloBlurTransition_ = value;
              }
              onChanged();
            } else {
              iconHaloBlurTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          public Builder clearIconHaloBlurTransition() {
            if (iconHaloBlurTransitionBuilder_ == null) {
              iconHaloBlurTransition_ = null;
              onChanged();
            } else {
              iconHaloBlurTransition_ = null;
              iconHaloBlurTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getIconHaloBlurTransitionBuilder() {
            
            onChanged();
            return getIconHaloBlurTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconHaloBlurTransitionOrBuilder() {
            if (iconHaloBlurTransitionBuilder_ != null) {
              return iconHaloBlurTransitionBuilder_.getMessageOrBuilder();
            } else {
              return iconHaloBlurTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconHaloBlurTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_halo_blur_transition = 82;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getIconHaloBlurTransitionFieldBuilder() {
            if (iconHaloBlurTransitionBuilder_ == null) {
              iconHaloBlurTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getIconHaloBlurTransition(),
                      getParentForChildren(),
                      isClean());
              iconHaloBlurTransition_ = null;
            }
            return iconHaloBlurTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions iconTranslateTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> iconTranslateTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          public boolean hasIconTranslateTransition() {
            return iconTranslateTransitionBuilder_ != null || iconTranslateTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getIconTranslateTransition() {
            if (iconTranslateTransitionBuilder_ == null) {
              return iconTranslateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconTranslateTransition_;
            } else {
              return iconTranslateTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          public Builder setIconTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconTranslateTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              iconTranslateTransition_ = value;
              onChanged();
            } else {
              iconTranslateTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          public Builder setIconTranslateTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (iconTranslateTransitionBuilder_ == null) {
              iconTranslateTransition_ = builderForValue.build();
              onChanged();
            } else {
              iconTranslateTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          public Builder mergeIconTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (iconTranslateTransitionBuilder_ == null) {
              if (iconTranslateTransition_ != null) {
                iconTranslateTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(iconTranslateTransition_).mergeFrom(value).buildPartial();
              } else {
                iconTranslateTransition_ = value;
              }
              onChanged();
            } else {
              iconTranslateTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          public Builder clearIconTranslateTransition() {
            if (iconTranslateTransitionBuilder_ == null) {
              iconTranslateTransition_ = null;
              onChanged();
            } else {
              iconTranslateTransition_ = null;
              iconTranslateTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getIconTranslateTransitionBuilder() {
            
            onChanged();
            return getIconTranslateTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getIconTranslateTransitionOrBuilder() {
            if (iconTranslateTransitionBuilder_ != null) {
              return iconTranslateTransitionBuilder_.getMessageOrBuilder();
            } else {
              return iconTranslateTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : iconTranslateTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions icon_translate_transition = 83;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getIconTranslateTransitionFieldBuilder() {
            if (iconTranslateTransitionBuilder_ == null) {
              iconTranslateTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getIconTranslateTransition(),
                      getParentForChildren(),
                      isClean());
              iconTranslateTransition_ = null;
            }
            return iconTranslateTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textOpacityTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> textOpacityTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          public boolean hasTextOpacityTransition() {
            return textOpacityTransitionBuilder_ != null || textOpacityTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextOpacityTransition() {
            if (textOpacityTransitionBuilder_ == null) {
              return textOpacityTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textOpacityTransition_;
            } else {
              return textOpacityTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          public Builder setTextOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textOpacityTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textOpacityTransition_ = value;
              onChanged();
            } else {
              textOpacityTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          public Builder setTextOpacityTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (textOpacityTransitionBuilder_ == null) {
              textOpacityTransition_ = builderForValue.build();
              onChanged();
            } else {
              textOpacityTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          public Builder mergeTextOpacityTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textOpacityTransitionBuilder_ == null) {
              if (textOpacityTransition_ != null) {
                textOpacityTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(textOpacityTransition_).mergeFrom(value).buildPartial();
              } else {
                textOpacityTransition_ = value;
              }
              onChanged();
            } else {
              textOpacityTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          public Builder clearTextOpacityTransition() {
            if (textOpacityTransitionBuilder_ == null) {
              textOpacityTransition_ = null;
              onChanged();
            } else {
              textOpacityTransition_ = null;
              textOpacityTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTextOpacityTransitionBuilder() {
            
            onChanged();
            return getTextOpacityTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextOpacityTransitionOrBuilder() {
            if (textOpacityTransitionBuilder_ != null) {
              return textOpacityTransitionBuilder_.getMessageOrBuilder();
            } else {
              return textOpacityTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textOpacityTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_opacity_transition = 84;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTextOpacityTransitionFieldBuilder() {
            if (textOpacityTransitionBuilder_ == null) {
              textOpacityTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTextOpacityTransition(),
                      getParentForChildren(),
                      isClean());
              textOpacityTransition_ = null;
            }
            return textOpacityTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> textColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          public boolean hasTextColorTransition() {
            return textColorTransitionBuilder_ != null || textColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextColorTransition() {
            if (textColorTransitionBuilder_ == null) {
              return textColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textColorTransition_;
            } else {
              return textColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          public Builder setTextColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textColorTransition_ = value;
              onChanged();
            } else {
              textColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          public Builder setTextColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (textColorTransitionBuilder_ == null) {
              textColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              textColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          public Builder mergeTextColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textColorTransitionBuilder_ == null) {
              if (textColorTransition_ != null) {
                textColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(textColorTransition_).mergeFrom(value).buildPartial();
              } else {
                textColorTransition_ = value;
              }
              onChanged();
            } else {
              textColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          public Builder clearTextColorTransition() {
            if (textColorTransitionBuilder_ == null) {
              textColorTransition_ = null;
              onChanged();
            } else {
              textColorTransition_ = null;
              textColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTextColorTransitionBuilder() {
            
            onChanged();
            return getTextColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextColorTransitionOrBuilder() {
            if (textColorTransitionBuilder_ != null) {
              return textColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return textColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_color_transition = 85;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTextColorTransitionFieldBuilder() {
            if (textColorTransitionBuilder_ == null) {
              textColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTextColorTransition(),
                      getParentForChildren(),
                      isClean());
              textColorTransition_ = null;
            }
            return textColorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textHaloColorTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> textHaloColorTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          public boolean hasTextHaloColorTransition() {
            return textHaloColorTransitionBuilder_ != null || textHaloColorTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloColorTransition() {
            if (textHaloColorTransitionBuilder_ == null) {
              return textHaloColorTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloColorTransition_;
            } else {
              return textHaloColorTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          public Builder setTextHaloColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textHaloColorTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textHaloColorTransition_ = value;
              onChanged();
            } else {
              textHaloColorTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          public Builder setTextHaloColorTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (textHaloColorTransitionBuilder_ == null) {
              textHaloColorTransition_ = builderForValue.build();
              onChanged();
            } else {
              textHaloColorTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          public Builder mergeTextHaloColorTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textHaloColorTransitionBuilder_ == null) {
              if (textHaloColorTransition_ != null) {
                textHaloColorTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(textHaloColorTransition_).mergeFrom(value).buildPartial();
              } else {
                textHaloColorTransition_ = value;
              }
              onChanged();
            } else {
              textHaloColorTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          public Builder clearTextHaloColorTransition() {
            if (textHaloColorTransitionBuilder_ == null) {
              textHaloColorTransition_ = null;
              onChanged();
            } else {
              textHaloColorTransition_ = null;
              textHaloColorTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTextHaloColorTransitionBuilder() {
            
            onChanged();
            return getTextHaloColorTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloColorTransitionOrBuilder() {
            if (textHaloColorTransitionBuilder_ != null) {
              return textHaloColorTransitionBuilder_.getMessageOrBuilder();
            } else {
              return textHaloColorTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloColorTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_color_transition = 86;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTextHaloColorTransitionFieldBuilder() {
            if (textHaloColorTransitionBuilder_ == null) {
              textHaloColorTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTextHaloColorTransition(),
                      getParentForChildren(),
                      isClean());
              textHaloColorTransition_ = null;
            }
            return textHaloColorTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textHaloWidthTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> textHaloWidthTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          public boolean hasTextHaloWidthTransition() {
            return textHaloWidthTransitionBuilder_ != null || textHaloWidthTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloWidthTransition() {
            if (textHaloWidthTransitionBuilder_ == null) {
              return textHaloWidthTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloWidthTransition_;
            } else {
              return textHaloWidthTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          public Builder setTextHaloWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textHaloWidthTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textHaloWidthTransition_ = value;
              onChanged();
            } else {
              textHaloWidthTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          public Builder setTextHaloWidthTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (textHaloWidthTransitionBuilder_ == null) {
              textHaloWidthTransition_ = builderForValue.build();
              onChanged();
            } else {
              textHaloWidthTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          public Builder mergeTextHaloWidthTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textHaloWidthTransitionBuilder_ == null) {
              if (textHaloWidthTransition_ != null) {
                textHaloWidthTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(textHaloWidthTransition_).mergeFrom(value).buildPartial();
              } else {
                textHaloWidthTransition_ = value;
              }
              onChanged();
            } else {
              textHaloWidthTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          public Builder clearTextHaloWidthTransition() {
            if (textHaloWidthTransitionBuilder_ == null) {
              textHaloWidthTransition_ = null;
              onChanged();
            } else {
              textHaloWidthTransition_ = null;
              textHaloWidthTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTextHaloWidthTransitionBuilder() {
            
            onChanged();
            return getTextHaloWidthTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloWidthTransitionOrBuilder() {
            if (textHaloWidthTransitionBuilder_ != null) {
              return textHaloWidthTransitionBuilder_.getMessageOrBuilder();
            } else {
              return textHaloWidthTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloWidthTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_width_transition = 87;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTextHaloWidthTransitionFieldBuilder() {
            if (textHaloWidthTransitionBuilder_ == null) {
              textHaloWidthTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTextHaloWidthTransition(),
                      getParentForChildren(),
                      isClean());
              textHaloWidthTransition_ = null;
            }
            return textHaloWidthTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textHaloBlurTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> textHaloBlurTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          public boolean hasTextHaloBlurTransition() {
            return textHaloBlurTransitionBuilder_ != null || textHaloBlurTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextHaloBlurTransition() {
            if (textHaloBlurTransitionBuilder_ == null) {
              return textHaloBlurTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloBlurTransition_;
            } else {
              return textHaloBlurTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          public Builder setTextHaloBlurTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textHaloBlurTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textHaloBlurTransition_ = value;
              onChanged();
            } else {
              textHaloBlurTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          public Builder setTextHaloBlurTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (textHaloBlurTransitionBuilder_ == null) {
              textHaloBlurTransition_ = builderForValue.build();
              onChanged();
            } else {
              textHaloBlurTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          public Builder mergeTextHaloBlurTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textHaloBlurTransitionBuilder_ == null) {
              if (textHaloBlurTransition_ != null) {
                textHaloBlurTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(textHaloBlurTransition_).mergeFrom(value).buildPartial();
              } else {
                textHaloBlurTransition_ = value;
              }
              onChanged();
            } else {
              textHaloBlurTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          public Builder clearTextHaloBlurTransition() {
            if (textHaloBlurTransitionBuilder_ == null) {
              textHaloBlurTransition_ = null;
              onChanged();
            } else {
              textHaloBlurTransition_ = null;
              textHaloBlurTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTextHaloBlurTransitionBuilder() {
            
            onChanged();
            return getTextHaloBlurTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextHaloBlurTransitionOrBuilder() {
            if (textHaloBlurTransitionBuilder_ != null) {
              return textHaloBlurTransitionBuilder_.getMessageOrBuilder();
            } else {
              return textHaloBlurTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textHaloBlurTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_halo_blur_transition = 88;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTextHaloBlurTransitionFieldBuilder() {
            if (textHaloBlurTransitionBuilder_ == null) {
              textHaloBlurTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTextHaloBlurTransition(),
                      getParentForChildren(),
                      isClean());
              textHaloBlurTransition_ = null;
            }
            return textHaloBlurTransitionBuilder_;
          }

          private com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions textTranslateTransition_;
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> textTranslateTransitionBuilder_;
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          public boolean hasTextTranslateTransition() {
            return textTranslateTransitionBuilder_ != null || textTranslateTransition_ != null;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions getTextTranslateTransition() {
            if (textTranslateTransitionBuilder_ == null) {
              return textTranslateTransition_ == null ? com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textTranslateTransition_;
            } else {
              return textTranslateTransitionBuilder_.getMessage();
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          public Builder setTextTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textTranslateTransitionBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              textTranslateTransition_ = value;
              onChanged();
            } else {
              textTranslateTransitionBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          public Builder setTextTranslateTransition(
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder builderForValue) {
            if (textTranslateTransitionBuilder_ == null) {
              textTranslateTransition_ = builderForValue.build();
              onChanged();
            } else {
              textTranslateTransitionBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          public Builder mergeTextTranslateTransition(com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions value) {
            if (textTranslateTransitionBuilder_ == null) {
              if (textTranslateTransition_ != null) {
                textTranslateTransition_ =
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.newBuilder(textTranslateTransition_).mergeFrom(value).buildPartial();
              } else {
                textTranslateTransition_ = value;
              }
              onChanged();
            } else {
              textTranslateTransitionBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          public Builder clearTextTranslateTransition() {
            if (textTranslateTransitionBuilder_ == null) {
              textTranslateTransition_ = null;
              onChanged();
            } else {
              textTranslateTransition_ = null;
              textTranslateTransitionBuilder_ = null;
            }

            return this;
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder getTextTranslateTransitionBuilder() {
            
            onChanged();
            return getTextTranslateTransitionFieldBuilder().getBuilder();
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          public com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder getTextTranslateTransitionOrBuilder() {
            if (textTranslateTransitionBuilder_ != null) {
              return textTranslateTransitionBuilder_.getMessageOrBuilder();
            } else {
              return textTranslateTransition_ == null ?
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.getDefaultInstance() : textTranslateTransition_;
            }
          }
          /**
           * <code>.com.tophap.mapbox_gl.proto.TransitionOptions text_translate_transition = 89;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder> 
              getTextTranslateTransitionFieldBuilder() {
            if (textTranslateTransitionBuilder_ == null) {
              textTranslateTransitionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptions.Builder, com.tophap.mapbox_gl.proto.MapboxUtil.TransitionOptionsOrBuilder>(
                      getTextTranslateTransition(),
                      getParentForChildren(),
                      isClean());
              textTranslateTransition_ = null;
            }
            return textTranslateTransitionBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update.Symbol)
        }

        // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update.Symbol)
        private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol();
        }

        public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Symbol>
            PARSER = new com.google.protobuf.AbstractParser<Symbol>() {
          @java.lang.Override
          public Symbol parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Symbol(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Symbol> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Symbol> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int typeCase_ = 0;
      private java.lang.Object type_;
      public enum TypeCase
          implements com.google.protobuf.Internal.EnumLite {
        BACKGROUND_LAYER(2),
        CIRCLE_LAYER(3),
        FILL_LAYER(4),
        FILL_EXTRUSION_LAYER(5),
        LINE_LAYER(6),
        SYMBOL_LAYER(7),
        HILLSHADE_LAYER(8),
        HEATMAP_LAYER(9),
        TYPE_NOT_SET(0);
        private final int value;
        private TypeCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TypeCase valueOf(int value) {
          return forNumber(value);
        }

        public static TypeCase forNumber(int value) {
          switch (value) {
            case 2: return BACKGROUND_LAYER;
            case 3: return CIRCLE_LAYER;
            case 4: return FILL_LAYER;
            case 5: return FILL_EXTRUSION_LAYER;
            case 6: return LINE_LAYER;
            case 7: return SYMBOL_LAYER;
            case 8: return HILLSHADE_LAYER;
            case 9: return HEATMAP_LAYER;
            case 0: return TYPE_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public TypeCase
      getTypeCase() {
        return TypeCase.forNumber(
            typeCase_);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object id_;
      /**
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        }
      }
      /**
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BACKGROUND_LAYER_FIELD_NUMBER = 2;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
       */
      public boolean hasBackgroundLayer() {
        return typeCase_ == 2;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background getBackgroundLayer() {
        if (typeCase_ == 2) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance();
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.BackgroundOrBuilder getBackgroundLayerOrBuilder() {
        if (typeCase_ == 2) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance();
      }

      public static final int CIRCLE_LAYER_FIELD_NUMBER = 3;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
       */
      public boolean hasCircleLayer() {
        return typeCase_ == 3;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle getCircleLayer() {
        if (typeCase_ == 3) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance();
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.CircleOrBuilder getCircleLayerOrBuilder() {
        if (typeCase_ == 3) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance();
      }

      public static final int FILL_LAYER_FIELD_NUMBER = 4;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
       */
      public boolean hasFillLayer() {
        return typeCase_ == 4;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill getFillLayer() {
        if (typeCase_ == 4) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance();
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillOrBuilder getFillLayerOrBuilder() {
        if (typeCase_ == 4) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance();
      }

      public static final int FILL_EXTRUSION_LAYER_FIELD_NUMBER = 5;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
       */
      public boolean hasFillExtrusionLayer() {
        return typeCase_ == 5;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion getFillExtrusionLayer() {
        if (typeCase_ == 5) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance();
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusionOrBuilder getFillExtrusionLayerOrBuilder() {
        if (typeCase_ == 5) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance();
      }

      public static final int LINE_LAYER_FIELD_NUMBER = 6;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
       */
      public boolean hasLineLayer() {
        return typeCase_ == 6;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line getLineLayer() {
        if (typeCase_ == 6) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance();
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.LineOrBuilder getLineLayerOrBuilder() {
        if (typeCase_ == 6) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance();
      }

      public static final int SYMBOL_LAYER_FIELD_NUMBER = 7;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
       */
      public boolean hasSymbolLayer() {
        return typeCase_ == 7;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol getSymbolLayer() {
        if (typeCase_ == 7) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance();
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.SymbolOrBuilder getSymbolLayerOrBuilder() {
        if (typeCase_ == 7) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance();
      }

      public static final int HILLSHADE_LAYER_FIELD_NUMBER = 8;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
       */
      public boolean hasHillshadeLayer() {
        return typeCase_ == 8;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade getHillshadeLayer() {
        if (typeCase_ == 8) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance();
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HillshadeOrBuilder getHillshadeLayerOrBuilder() {
        if (typeCase_ == 8) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance();
      }

      public static final int HEATMAP_LAYER_FIELD_NUMBER = 9;
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
       */
      public boolean hasHeatmapLayer() {
        return typeCase_ == 9;
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap getHeatmapLayer() {
        if (typeCase_ == 9) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance();
      }
      /**
       * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
       */
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HeatmapOrBuilder getHeatmapLayerOrBuilder() {
        if (typeCase_ == 9) {
           return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_;
        }
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getIdBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
        }
        if (typeCase_ == 2) {
          output.writeMessage(2, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_);
        }
        if (typeCase_ == 3) {
          output.writeMessage(3, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_);
        }
        if (typeCase_ == 4) {
          output.writeMessage(4, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_);
        }
        if (typeCase_ == 5) {
          output.writeMessage(5, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_);
        }
        if (typeCase_ == 6) {
          output.writeMessage(6, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_);
        }
        if (typeCase_ == 7) {
          output.writeMessage(7, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_);
        }
        if (typeCase_ == 8) {
          output.writeMessage(8, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_);
        }
        if (typeCase_ == 9) {
          output.writeMessage(9, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getIdBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
        }
        if (typeCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_);
        }
        if (typeCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_);
        }
        if (typeCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_);
        }
        if (typeCase_ == 5) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_);
        }
        if (typeCase_ == 6) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_);
        }
        if (typeCase_ == 7) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_);
        }
        if (typeCase_ == 8) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_);
        }
        if (typeCase_ == 9) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update)) {
          return super.equals(obj);
        }
        com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update) obj;

        if (!getId()
            .equals(other.getId())) return false;
        if (!getTypeCase().equals(other.getTypeCase())) return false;
        switch (typeCase_) {
          case 2:
            if (!getBackgroundLayer()
                .equals(other.getBackgroundLayer())) return false;
            break;
          case 3:
            if (!getCircleLayer()
                .equals(other.getCircleLayer())) return false;
            break;
          case 4:
            if (!getFillLayer()
                .equals(other.getFillLayer())) return false;
            break;
          case 5:
            if (!getFillExtrusionLayer()
                .equals(other.getFillExtrusionLayer())) return false;
            break;
          case 6:
            if (!getLineLayer()
                .equals(other.getLineLayer())) return false;
            break;
          case 7:
            if (!getSymbolLayer()
                .equals(other.getSymbolLayer())) return false;
            break;
          case 8:
            if (!getHillshadeLayer()
                .equals(other.getHillshadeLayer())) return false;
            break;
          case 9:
            if (!getHeatmapLayer()
                .equals(other.getHeatmapLayer())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
        switch (typeCase_) {
          case 2:
            hash = (37 * hash) + BACKGROUND_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getBackgroundLayer().hashCode();
            break;
          case 3:
            hash = (37 * hash) + CIRCLE_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getCircleLayer().hashCode();
            break;
          case 4:
            hash = (37 * hash) + FILL_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getFillLayer().hashCode();
            break;
          case 5:
            hash = (37 * hash) + FILL_EXTRUSION_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getFillExtrusionLayer().hashCode();
            break;
          case 6:
            hash = (37 * hash) + LINE_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getLineLayer().hashCode();
            break;
          case 7:
            hash = (37 * hash) + SYMBOL_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getSymbolLayer().hashCode();
            break;
          case 8:
            hash = (37 * hash) + HILLSHADE_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getHillshadeLayer().hashCode();
            break;
          case 9:
            hash = (37 * hash) + HEATMAP_LAYER_FIELD_NUMBER;
            hash = (53 * hash) + getHeatmapLayer().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations.Update}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations.Update)
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.UpdateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Builder.class);
        }

        // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          id_ = "";

          typeCase_ = 0;
          type_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update getDefaultInstanceForType() {
          return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.getDefaultInstance();
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update build() {
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update buildPartial() {
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update(this);
          result.id_ = id_;
          if (typeCase_ == 2) {
            if (backgroundLayerBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = backgroundLayerBuilder_.build();
            }
          }
          if (typeCase_ == 3) {
            if (circleLayerBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = circleLayerBuilder_.build();
            }
          }
          if (typeCase_ == 4) {
            if (fillLayerBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = fillLayerBuilder_.build();
            }
          }
          if (typeCase_ == 5) {
            if (fillExtrusionLayerBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = fillExtrusionLayerBuilder_.build();
            }
          }
          if (typeCase_ == 6) {
            if (lineLayerBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = lineLayerBuilder_.build();
            }
          }
          if (typeCase_ == 7) {
            if (symbolLayerBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = symbolLayerBuilder_.build();
            }
          }
          if (typeCase_ == 8) {
            if (hillshadeLayerBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = hillshadeLayerBuilder_.build();
            }
          }
          if (typeCase_ == 9) {
            if (heatmapLayerBuilder_ == null) {
              result.type_ = type_;
            } else {
              result.type_ = heatmapLayerBuilder_.build();
            }
          }
          result.typeCase_ = typeCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update) {
            return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update other) {
          if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.getDefaultInstance()) return this;
          if (!other.getId().isEmpty()) {
            id_ = other.id_;
            onChanged();
          }
          switch (other.getTypeCase()) {
            case BACKGROUND_LAYER: {
              mergeBackgroundLayer(other.getBackgroundLayer());
              break;
            }
            case CIRCLE_LAYER: {
              mergeCircleLayer(other.getCircleLayer());
              break;
            }
            case FILL_LAYER: {
              mergeFillLayer(other.getFillLayer());
              break;
            }
            case FILL_EXTRUSION_LAYER: {
              mergeFillExtrusionLayer(other.getFillExtrusionLayer());
              break;
            }
            case LINE_LAYER: {
              mergeLineLayer(other.getLineLayer());
              break;
            }
            case SYMBOL_LAYER: {
              mergeSymbolLayer(other.getSymbolLayer());
              break;
            }
            case HILLSHADE_LAYER: {
              mergeHillshadeLayer(other.getHillshadeLayer());
              break;
            }
            case HEATMAP_LAYER: {
              mergeHeatmapLayer(other.getHeatmapLayer());
              break;
            }
            case TYPE_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int typeCase_ = 0;
        private java.lang.Object type_;
        public TypeCase
            getTypeCase() {
          return TypeCase.forNumber(
              typeCase_);
        }

        public Builder clearType() {
          typeCase_ = 0;
          type_ = null;
          onChanged();
          return this;
        }


        private java.lang.Object id_ = "";
        /**
         * <code>string id = 1;</code>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            id_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string id = 1;</code>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string id = 1;</code>
         */
        public Builder clearId() {
          
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>string id = 1;</code>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          id_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.BackgroundOrBuilder> backgroundLayerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        public boolean hasBackgroundLayer() {
          return typeCase_ == 2;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background getBackgroundLayer() {
          if (backgroundLayerBuilder_ == null) {
            if (typeCase_ == 2) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance();
          } else {
            if (typeCase_ == 2) {
              return backgroundLayerBuilder_.getMessage();
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        public Builder setBackgroundLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background value) {
          if (backgroundLayerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            backgroundLayerBuilder_.setMessage(value);
          }
          typeCase_ = 2;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        public Builder setBackgroundLayer(
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.Builder builderForValue) {
          if (backgroundLayerBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            backgroundLayerBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 2;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        public Builder mergeBackgroundLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background value) {
          if (backgroundLayerBuilder_ == null) {
            if (typeCase_ == 2 &&
                type_ != com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance()) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.newBuilder((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 2) {
              backgroundLayerBuilder_.mergeFrom(value);
            }
            backgroundLayerBuilder_.setMessage(value);
          }
          typeCase_ = 2;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        public Builder clearBackgroundLayer() {
          if (backgroundLayerBuilder_ == null) {
            if (typeCase_ == 2) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 2) {
              typeCase_ = 0;
              type_ = null;
            }
            backgroundLayerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.Builder getBackgroundLayerBuilder() {
          return getBackgroundLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.BackgroundOrBuilder getBackgroundLayerOrBuilder() {
          if ((typeCase_ == 2) && (backgroundLayerBuilder_ != null)) {
            return backgroundLayerBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 2) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Background background_layer = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.BackgroundOrBuilder> 
            getBackgroundLayerFieldBuilder() {
          if (backgroundLayerBuilder_ == null) {
            if (!(typeCase_ == 2)) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.getDefaultInstance();
            }
            backgroundLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.BackgroundOrBuilder>(
                    (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Background) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 2;
          onChanged();;
          return backgroundLayerBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.CircleOrBuilder> circleLayerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        public boolean hasCircleLayer() {
          return typeCase_ == 3;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle getCircleLayer() {
          if (circleLayerBuilder_ == null) {
            if (typeCase_ == 3) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance();
          } else {
            if (typeCase_ == 3) {
              return circleLayerBuilder_.getMessage();
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        public Builder setCircleLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle value) {
          if (circleLayerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            circleLayerBuilder_.setMessage(value);
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        public Builder setCircleLayer(
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.Builder builderForValue) {
          if (circleLayerBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            circleLayerBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        public Builder mergeCircleLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle value) {
          if (circleLayerBuilder_ == null) {
            if (typeCase_ == 3 &&
                type_ != com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance()) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.newBuilder((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 3) {
              circleLayerBuilder_.mergeFrom(value);
            }
            circleLayerBuilder_.setMessage(value);
          }
          typeCase_ = 3;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        public Builder clearCircleLayer() {
          if (circleLayerBuilder_ == null) {
            if (typeCase_ == 3) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 3) {
              typeCase_ = 0;
              type_ = null;
            }
            circleLayerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.Builder getCircleLayerBuilder() {
          return getCircleLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.CircleOrBuilder getCircleLayerOrBuilder() {
          if ((typeCase_ == 3) && (circleLayerBuilder_ != null)) {
            return circleLayerBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 3) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Circle circle_layer = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.CircleOrBuilder> 
            getCircleLayerFieldBuilder() {
          if (circleLayerBuilder_ == null) {
            if (!(typeCase_ == 3)) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.getDefaultInstance();
            }
            circleLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.CircleOrBuilder>(
                    (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Circle) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 3;
          onChanged();;
          return circleLayerBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillOrBuilder> fillLayerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        public boolean hasFillLayer() {
          return typeCase_ == 4;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill getFillLayer() {
          if (fillLayerBuilder_ == null) {
            if (typeCase_ == 4) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance();
          } else {
            if (typeCase_ == 4) {
              return fillLayerBuilder_.getMessage();
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        public Builder setFillLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill value) {
          if (fillLayerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            fillLayerBuilder_.setMessage(value);
          }
          typeCase_ = 4;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        public Builder setFillLayer(
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.Builder builderForValue) {
          if (fillLayerBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            fillLayerBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 4;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        public Builder mergeFillLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill value) {
          if (fillLayerBuilder_ == null) {
            if (typeCase_ == 4 &&
                type_ != com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance()) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.newBuilder((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 4) {
              fillLayerBuilder_.mergeFrom(value);
            }
            fillLayerBuilder_.setMessage(value);
          }
          typeCase_ = 4;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        public Builder clearFillLayer() {
          if (fillLayerBuilder_ == null) {
            if (typeCase_ == 4) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 4) {
              typeCase_ = 0;
              type_ = null;
            }
            fillLayerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.Builder getFillLayerBuilder() {
          return getFillLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillOrBuilder getFillLayerOrBuilder() {
          if ((typeCase_ == 4) && (fillLayerBuilder_ != null)) {
            return fillLayerBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 4) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Fill fill_layer = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillOrBuilder> 
            getFillLayerFieldBuilder() {
          if (fillLayerBuilder_ == null) {
            if (!(typeCase_ == 4)) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.getDefaultInstance();
            }
            fillLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillOrBuilder>(
                    (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Fill) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 4;
          onChanged();;
          return fillLayerBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusionOrBuilder> fillExtrusionLayerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        public boolean hasFillExtrusionLayer() {
          return typeCase_ == 5;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion getFillExtrusionLayer() {
          if (fillExtrusionLayerBuilder_ == null) {
            if (typeCase_ == 5) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance();
          } else {
            if (typeCase_ == 5) {
              return fillExtrusionLayerBuilder_.getMessage();
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        public Builder setFillExtrusionLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion value) {
          if (fillExtrusionLayerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            fillExtrusionLayerBuilder_.setMessage(value);
          }
          typeCase_ = 5;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        public Builder setFillExtrusionLayer(
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.Builder builderForValue) {
          if (fillExtrusionLayerBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            fillExtrusionLayerBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 5;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        public Builder mergeFillExtrusionLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion value) {
          if (fillExtrusionLayerBuilder_ == null) {
            if (typeCase_ == 5 &&
                type_ != com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance()) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.newBuilder((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 5) {
              fillExtrusionLayerBuilder_.mergeFrom(value);
            }
            fillExtrusionLayerBuilder_.setMessage(value);
          }
          typeCase_ = 5;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        public Builder clearFillExtrusionLayer() {
          if (fillExtrusionLayerBuilder_ == null) {
            if (typeCase_ == 5) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 5) {
              typeCase_ = 0;
              type_ = null;
            }
            fillExtrusionLayerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.Builder getFillExtrusionLayerBuilder() {
          return getFillExtrusionLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusionOrBuilder getFillExtrusionLayerOrBuilder() {
          if ((typeCase_ == 5) && (fillExtrusionLayerBuilder_ != null)) {
            return fillExtrusionLayerBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 5) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.FillExtrusion fill_extrusion_layer = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusionOrBuilder> 
            getFillExtrusionLayerFieldBuilder() {
          if (fillExtrusionLayerBuilder_ == null) {
            if (!(typeCase_ == 5)) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.getDefaultInstance();
            }
            fillExtrusionLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusionOrBuilder>(
                    (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.FillExtrusion) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 5;
          onChanged();;
          return fillExtrusionLayerBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.LineOrBuilder> lineLayerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        public boolean hasLineLayer() {
          return typeCase_ == 6;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line getLineLayer() {
          if (lineLayerBuilder_ == null) {
            if (typeCase_ == 6) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance();
          } else {
            if (typeCase_ == 6) {
              return lineLayerBuilder_.getMessage();
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        public Builder setLineLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line value) {
          if (lineLayerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            lineLayerBuilder_.setMessage(value);
          }
          typeCase_ = 6;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        public Builder setLineLayer(
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.Builder builderForValue) {
          if (lineLayerBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            lineLayerBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 6;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        public Builder mergeLineLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line value) {
          if (lineLayerBuilder_ == null) {
            if (typeCase_ == 6 &&
                type_ != com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance()) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.newBuilder((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 6) {
              lineLayerBuilder_.mergeFrom(value);
            }
            lineLayerBuilder_.setMessage(value);
          }
          typeCase_ = 6;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        public Builder clearLineLayer() {
          if (lineLayerBuilder_ == null) {
            if (typeCase_ == 6) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 6) {
              typeCase_ = 0;
              type_ = null;
            }
            lineLayerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.Builder getLineLayerBuilder() {
          return getLineLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.LineOrBuilder getLineLayerOrBuilder() {
          if ((typeCase_ == 6) && (lineLayerBuilder_ != null)) {
            return lineLayerBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 6) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Line line_layer = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.LineOrBuilder> 
            getLineLayerFieldBuilder() {
          if (lineLayerBuilder_ == null) {
            if (!(typeCase_ == 6)) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.getDefaultInstance();
            }
            lineLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.LineOrBuilder>(
                    (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Line) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 6;
          onChanged();;
          return lineLayerBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.SymbolOrBuilder> symbolLayerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        public boolean hasSymbolLayer() {
          return typeCase_ == 7;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol getSymbolLayer() {
          if (symbolLayerBuilder_ == null) {
            if (typeCase_ == 7) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance();
          } else {
            if (typeCase_ == 7) {
              return symbolLayerBuilder_.getMessage();
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        public Builder setSymbolLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol value) {
          if (symbolLayerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            symbolLayerBuilder_.setMessage(value);
          }
          typeCase_ = 7;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        public Builder setSymbolLayer(
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.Builder builderForValue) {
          if (symbolLayerBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            symbolLayerBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 7;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        public Builder mergeSymbolLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol value) {
          if (symbolLayerBuilder_ == null) {
            if (typeCase_ == 7 &&
                type_ != com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance()) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.newBuilder((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 7) {
              symbolLayerBuilder_.mergeFrom(value);
            }
            symbolLayerBuilder_.setMessage(value);
          }
          typeCase_ = 7;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        public Builder clearSymbolLayer() {
          if (symbolLayerBuilder_ == null) {
            if (typeCase_ == 7) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 7) {
              typeCase_ = 0;
              type_ = null;
            }
            symbolLayerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.Builder getSymbolLayerBuilder() {
          return getSymbolLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.SymbolOrBuilder getSymbolLayerOrBuilder() {
          if ((typeCase_ == 7) && (symbolLayerBuilder_ != null)) {
            return symbolLayerBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 7) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Symbol symbol_layer = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.SymbolOrBuilder> 
            getSymbolLayerFieldBuilder() {
          if (symbolLayerBuilder_ == null) {
            if (!(typeCase_ == 7)) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.getDefaultInstance();
            }
            symbolLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.SymbolOrBuilder>(
                    (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Symbol) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 7;
          onChanged();;
          return symbolLayerBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HillshadeOrBuilder> hillshadeLayerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        public boolean hasHillshadeLayer() {
          return typeCase_ == 8;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade getHillshadeLayer() {
          if (hillshadeLayerBuilder_ == null) {
            if (typeCase_ == 8) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance();
          } else {
            if (typeCase_ == 8) {
              return hillshadeLayerBuilder_.getMessage();
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        public Builder setHillshadeLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade value) {
          if (hillshadeLayerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            hillshadeLayerBuilder_.setMessage(value);
          }
          typeCase_ = 8;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        public Builder setHillshadeLayer(
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.Builder builderForValue) {
          if (hillshadeLayerBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            hillshadeLayerBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 8;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        public Builder mergeHillshadeLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade value) {
          if (hillshadeLayerBuilder_ == null) {
            if (typeCase_ == 8 &&
                type_ != com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance()) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.newBuilder((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 8) {
              hillshadeLayerBuilder_.mergeFrom(value);
            }
            hillshadeLayerBuilder_.setMessage(value);
          }
          typeCase_ = 8;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        public Builder clearHillshadeLayer() {
          if (hillshadeLayerBuilder_ == null) {
            if (typeCase_ == 8) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 8) {
              typeCase_ = 0;
              type_ = null;
            }
            hillshadeLayerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.Builder getHillshadeLayerBuilder() {
          return getHillshadeLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HillshadeOrBuilder getHillshadeLayerOrBuilder() {
          if ((typeCase_ == 8) && (hillshadeLayerBuilder_ != null)) {
            return hillshadeLayerBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 8) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Hillshade hillshade_layer = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HillshadeOrBuilder> 
            getHillshadeLayerFieldBuilder() {
          if (hillshadeLayerBuilder_ == null) {
            if (!(typeCase_ == 8)) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.getDefaultInstance();
            }
            hillshadeLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HillshadeOrBuilder>(
                    (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Hillshade) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 8;
          onChanged();;
          return hillshadeLayerBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HeatmapOrBuilder> heatmapLayerBuilder_;
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        public boolean hasHeatmapLayer() {
          return typeCase_ == 9;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap getHeatmapLayer() {
          if (heatmapLayerBuilder_ == null) {
            if (typeCase_ == 9) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance();
          } else {
            if (typeCase_ == 9) {
              return heatmapLayerBuilder_.getMessage();
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        public Builder setHeatmapLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap value) {
          if (heatmapLayerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            type_ = value;
            onChanged();
          } else {
            heatmapLayerBuilder_.setMessage(value);
          }
          typeCase_ = 9;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        public Builder setHeatmapLayer(
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.Builder builderForValue) {
          if (heatmapLayerBuilder_ == null) {
            type_ = builderForValue.build();
            onChanged();
          } else {
            heatmapLayerBuilder_.setMessage(builderForValue.build());
          }
          typeCase_ = 9;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        public Builder mergeHeatmapLayer(com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap value) {
          if (heatmapLayerBuilder_ == null) {
            if (typeCase_ == 9 &&
                type_ != com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance()) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.newBuilder((com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_)
                  .mergeFrom(value).buildPartial();
            } else {
              type_ = value;
            }
            onChanged();
          } else {
            if (typeCase_ == 9) {
              heatmapLayerBuilder_.mergeFrom(value);
            }
            heatmapLayerBuilder_.setMessage(value);
          }
          typeCase_ = 9;
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        public Builder clearHeatmapLayer() {
          if (heatmapLayerBuilder_ == null) {
            if (typeCase_ == 9) {
              typeCase_ = 0;
              type_ = null;
              onChanged();
            }
          } else {
            if (typeCase_ == 9) {
              typeCase_ = 0;
              type_ = null;
            }
            heatmapLayerBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.Builder getHeatmapLayerBuilder() {
          return getHeatmapLayerFieldBuilder().getBuilder();
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HeatmapOrBuilder getHeatmapLayerOrBuilder() {
          if ((typeCase_ == 9) && (heatmapLayerBuilder_ != null)) {
            return heatmapLayerBuilder_.getMessageOrBuilder();
          } else {
            if (typeCase_ == 9) {
              return (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_;
            }
            return com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance();
          }
        }
        /**
         * <code>.com.tophap.mapbox_gl.proto.Operations.Update.Heatmap heatmap_layer = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HeatmapOrBuilder> 
            getHeatmapLayerFieldBuilder() {
          if (heatmapLayerBuilder_ == null) {
            if (!(typeCase_ == 9)) {
              type_ = com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.getDefaultInstance();
            }
            heatmapLayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap.Builder, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.HeatmapOrBuilder>(
                    (com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update.Heatmap) type_,
                    getParentForChildren(),
                    isClean());
            type_ = null;
          }
          typeCase_ = 9;
          onChanged();;
          return heatmapLayerBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations.Update)
      }

      // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations.Update)
      private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update();
      }

      public static com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Update>
          PARSER = new com.google.protobuf.AbstractParser<Update>() {
        @java.lang.Override
        public Update parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Update(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Update> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Update> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations.Update getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations)) {
        return super.equals(obj);
      }
      com.tophap.mapbox_gl.proto.LayersOperations.Operations other = (com.tophap.mapbox_gl.proto.LayersOperations.Operations) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tophap.mapbox_gl.proto.LayersOperations.Operations prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.tophap.mapbox_gl.proto.Operations}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.tophap.mapbox_gl.proto.Operations)
        com.tophap.mapbox_gl.proto.LayersOperations.OperationsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tophap.mapbox_gl.proto.LayersOperations.Operations.class, com.tophap.mapbox_gl.proto.LayersOperations.Operations.Builder.class);
      }

      // Construct using com.tophap.mapbox_gl.proto.LayersOperations.Operations.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tophap.mapbox_gl.proto.LayersOperations.internal_static_com_tophap_mapbox_gl_proto_Operations_descriptor;
      }

      @java.lang.Override
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations getDefaultInstanceForType() {
        return com.tophap.mapbox_gl.proto.LayersOperations.Operations.getDefaultInstance();
      }

      @java.lang.Override
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations build() {
        com.tophap.mapbox_gl.proto.LayersOperations.Operations result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tophap.mapbox_gl.proto.LayersOperations.Operations buildPartial() {
        com.tophap.mapbox_gl.proto.LayersOperations.Operations result = new com.tophap.mapbox_gl.proto.LayersOperations.Operations(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tophap.mapbox_gl.proto.LayersOperations.Operations) {
          return mergeFrom((com.tophap.mapbox_gl.proto.LayersOperations.Operations)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tophap.mapbox_gl.proto.LayersOperations.Operations other) {
        if (other == com.tophap.mapbox_gl.proto.LayersOperations.Operations.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tophap.mapbox_gl.proto.LayersOperations.Operations parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tophap.mapbox_gl.proto.LayersOperations.Operations) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.tophap.mapbox_gl.proto.Operations)
    }

    // @@protoc_insertion_point(class_scope:com.tophap.mapbox_gl.proto.Operations)
    private static final com.tophap.mapbox_gl.proto.LayersOperations.Operations DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tophap.mapbox_gl.proto.LayersOperations.Operations();
    }

    public static com.tophap.mapbox_gl.proto.LayersOperations.Operations getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Operations>
        PARSER = new com.google.protobuf.AbstractParser<Operations>() {
      @java.lang.Override
      public Operations parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Operations(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Operations> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Operations> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tophap.mapbox_gl.proto.LayersOperations.Operations getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Add_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Add_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027layers_operations.proto\022\032com.tophap.ma" +
      "pbox_gl.proto\032\nutil.proto\032\014layers.proto\032" +
      "\036google/protobuf/wrappers.proto\"\314a\n\nOper" +
      "ations\032|\n\003Add\0220\n\005layer\030\001 \001(\0132!.com.topha" +
      "p.mapbox_gl.proto.Layer\022\022\n\010below_id\030\002 \001(" +
      "\tH\000\022\022\n\010above_id\030\003 \001(\tH\000\022\017\n\005index\030\004 \001(\005H\000" +
      "B\n\n\010position\032\277`\n\006Update\022\n\n\002id\030\001 \001(\t\022T\n\020b" +
      "ackground_layer\030\002 \001(\01328.com.tophap.mapbo" +
      "x_gl.proto.Operations.Update.BackgroundH" +
      "\000\022L\n\014circle_layer\030\003 \001(\01324.com.tophap.map" +
      "box_gl.proto.Operations.Update.CircleH\000\022" +
      "H\n\nfill_layer\030\004 \001(\01322.com.tophap.mapbox_" +
      "gl.proto.Operations.Update.FillH\000\022[\n\024fil" +
      "l_extrusion_layer\030\005 \001(\0132;.com.tophap.map" +
      "box_gl.proto.Operations.Update.FillExtru" +
      "sionH\000\022H\n\nline_layer\030\006 \001(\01322.com.tophap." +
      "mapbox_gl.proto.Operations.Update.LineH\000" +
      "\022L\n\014symbol_layer\030\007 \001(\01324.com.tophap.mapb" +
      "ox_gl.proto.Operations.Update.SymbolH\000\022R" +
      "\n\017hillshade_layer\030\010 \001(\01327.com.tophap.map" +
      "box_gl.proto.Operations.Update.Hillshade" +
      "H\000\022N\n\rheatmap_layer\030\t \001(\01325.com.tophap.m" +
      "apbox_gl.proto.Operations.Update.Heatmap" +
      "H\000\032\377\003\n\nBackground\022+\n\007visible\030\001 \001(\0132\032.goo" +
      "gle.protobuf.BoolValue\022-\n\010min_zoom\030\002 \001(\013" +
      "2\033.google.protobuf.FloatValue\022-\n\010max_zoo" +
      "m\030\003 \001(\0132\033.google.protobuf.FloatValue\022*\n\005" +
      "color\030\004 \001(\0132\033.google.protobuf.Int32Value" +
      "\022-\n\007pattern\030\005 \001(\0132\034.google.protobuf.Stri" +
      "ngValue\022,\n\007opacity\030\006 \001(\0132\033.google.protob" +
      "uf.FloatValue\022G\n\020color_transition\030\007 \001(\0132" +
      "-.com.tophap.mapbox_gl.proto.TransitionO" +
      "ptions\022I\n\022pattern_transition\030\010 \001(\0132-.com" +
      ".tophap.mapbox_gl.proto.TransitionOption" +
      "s\022I\n\022opacity_transition\030\t \001(\0132-.com.toph" +
      "ap.mapbox_gl.proto.TransitionOptions\032\222\013\n" +
      "\006Circle\022+\n\007visible\030\001 \001(\0132\032.google.protob" +
      "uf.BoolValue\022-\n\010min_zoom\030\002 \001(\0132\033.google." +
      "protobuf.FloatValue\022-\n\010max_zoom\030\003 \001(\0132\033." +
      "google.protobuf.FloatValue\022+\n\006radius\030\004 \001" +
      "(\0132\033.google.protobuf.FloatValue\022*\n\005color" +
      "\030\005 \001(\0132\033.google.protobuf.Int32Value\022)\n\004b" +
      "lur\030\006 \001(\0132\033.google.protobuf.FloatValue\022," +
      "\n\007opacity\030\007 \001(\0132\033.google.protobuf.FloatV" +
      "alue\022\021\n\ttranslate\030\010 \003(\002\022\025\n\rhas_translate" +
      "\030\t \001(\010\022E\n\020translate_anchor\030\n \001(\0162+.com.t" +
      "ophap.mapbox_gl.proto.TranslateAnchor\022\034\n" +
      "\024has_translate_anchor\030\013 \001(\010\022@\n\013pitch_sca" +
      "le\030\014 \001(\0162+.com.tophap.mapbox_gl.proto.Tr" +
      "anslateAnchor\022\027\n\017has_pitch_scale\030\r \001(\010\022D" +
      "\n\017pitch_alignment\030\016 \001(\0162+.com.tophap.map" +
      "box_gl.proto.TranslateAnchor\022\033\n\023has_pitc" +
      "h_alignment\030\017 \001(\010\0221\n\014stroke_width\030\020 \001(\0132" +
      "\033.google.protobuf.FloatValue\0221\n\014stroke_c" +
      "olor\030\021 \001(\0132\033.google.protobuf.Int32Value\022" +
      "3\n\016stroke_opacity\030\022 \001(\0132\033.google.protobu" +
      "f.FloatValue\022H\n\021radius_transition\030\023 \001(\0132" +
      "-.com.tophap.mapbox_gl.proto.TransitionO" +
      "ptions\022G\n\020color_transition\030\024 \001(\0132-.com.t" +
      "ophap.mapbox_gl.proto.TransitionOptions\022" +
      "F\n\017blur_transition\030\025 \001(\0132-.com.tophap.ma" +
      "pbox_gl.proto.TransitionOptions\022I\n\022opaci" +
      "ty_transition\030\026 \001(\0132-.com.tophap.mapbox_" +
      "gl.proto.TransitionOptions\022K\n\024translate_" +
      "transition\030\027 \001(\0132-.com.tophap.mapbox_gl." +
      "proto.TransitionOptions\022N\n\027stroke_width_" +
      "transition\030\030 \001(\0132-.com.tophap.mapbox_gl." +
      "proto.TransitionOptions\022N\n\027stroke_color_" +
      "transition\030\031 \001(\0132-.com.tophap.mapbox_gl." +
      "proto.TransitionOptions\022P\n\031stroke_opacit" +
      "y_transition\030\032 \001(\0132-.com.tophap.mapbox_g" +
      "l.proto.TransitionOptions\032\377\007\n\rFillExtrus" +
      "ion\022+\n\007visible\030\001 \001(\0132\032.google.protobuf.B" +
      "oolValue\022-\n\010min_zoom\030\002 \001(\0132\033.google.prot" +
      "obuf.FloatValue\022-\n\010max_zoom\030\003 \001(\0132\033.goog" +
      "le.protobuf.FloatValue\022,\n\007opacity\030\004 \001(\0132" +
      "\033.google.protobuf.FloatValue\022*\n\005color\030\005 " +
      "\001(\0132\033.google.protobuf.Int32Value\022\021\n\ttran" +
      "slate\030\006 \003(\002\022\025\n\rhas_translate\030\007 \001(\010\022E\n\020tr" +
      "anslate_anchor\030\010 \001(\0162+.com.tophap.mapbox" +
      "_gl.proto.TranslateAnchor\022\034\n\024has_transla" +
      "te_anchor\030\t \001(\010\022-\n\007pattern\030\n \001(\0132\034.googl" +
      "e.protobuf.StringValue\022+\n\006height\030\013 \001(\0132\033" +
      ".google.protobuf.FloatValue\022)\n\004base\030\014 \001(" +
      "\0132\033.google.protobuf.FloatValue\0225\n\021vertic" +
      "al_gradient\030\r \001(\0132\032.google.protobuf.Bool" +
      "Value\022I\n\022opacity_transition\030\016 \001(\0132-.com." +
      "tophap.mapbox_gl.proto.TransitionOptions" +
      "\022G\n\020color_transition\030\017 \001(\0132-.com.tophap." +
      "mapbox_gl.proto.TransitionOptions\022K\n\024tra" +
      "nslate_transition\030\020 \001(\0132-.com.tophap.map" +
      "box_gl.proto.TransitionOptions\022I\n\022patter" +
      "n_transition\030\021 \001(\0132-.com.tophap.mapbox_g" +
      "l.proto.TransitionOptions\022H\n\021height_tran" +
      "sition\030\022 \001(\0132-.com.tophap.mapbox_gl.prot" +
      "o.TransitionOptions\022F\n\017base_transition\030\023" +
      " \001(\0132-.com.tophap.mapbox_gl.proto.Transi" +
      "tionOptions\032\211\007\n\004Fill\022+\n\007visible\030\001 \001(\0132\032." +
      "google.protobuf.BoolValue\022-\n\010min_zoom\030\002 " +
      "\001(\0132\033.google.protobuf.FloatValue\022-\n\010max_" +
      "zoom\030\003 \001(\0132\033.google.protobuf.FloatValue\022" +
      "-\n\tantialias\030\004 \001(\0132\032.google.protobuf.Boo" +
      "lValue\022,\n\007opacity\030\005 \001(\0132\033.google.protobu" +
      "f.FloatValue\022*\n\005color\030\006 \001(\0132\033.google.pro" +
      "tobuf.Int32Value\0222\n\routline_color\030\007 \001(\0132" +
      "\033.google.protobuf.Int32Value\022\021\n\ttranslat" +
      "e\030\010 \003(\002\022\025\n\rhas_translate\030\t \001(\010\022E\n\020transl" +
      "ate_anchor\030\n \001(\0162+.com.tophap.mapbox_gl." +
      "proto.TranslateAnchor\022\034\n\024has_translate_a" +
      "nchor\030\013 \001(\010\022-\n\007pattern\030\014 \001(\0132\034.google.pr" +
      "otobuf.StringValue\022I\n\022opacity_transition" +
      "\030\r \001(\0132-.com.tophap.mapbox_gl.proto.Tran" +
      "sitionOptions\022G\n\020color_transition\030\016 \001(\0132" +
      "-.com.tophap.mapbox_gl.proto.TransitionO" +
      "ptions\022O\n\030outline_color_transition\030\017 \001(\013" +
      "2-.com.tophap.mapbox_gl.proto.Transition" +
      "Options\022K\n\024translate_transition\030\020 \001(\0132-." +
      "com.tophap.mapbox_gl.proto.TransitionOpt" +
      "ions\022I\n\022pattern_transition\030\021 \001(\0132-.com.t" +
      "ophap.mapbox_gl.proto.TransitionOptions\032" +
      "\332\004\n\007Heatmap\022+\n\007visible\030\001 \001(\0132\032.google.pr" +
      "otobuf.BoolValue\022-\n\010min_zoom\030\002 \001(\0132\033.goo" +
      "gle.protobuf.FloatValue\022-\n\010max_zoom\030\003 \001(" +
      "\0132\033.google.protobuf.FloatValue\022+\n\006radius" +
      "\030\004 \001(\0132\033.google.protobuf.FloatValue\022+\n\006w" +
      "eight\030\005 \001(\0132\033.google.protobuf.FloatValue" +
      "\022.\n\tintensity\030\006 \001(\0132\033.google.protobuf.Fl" +
      "oatValue\022*\n\005color\030\007 \001(\0132\033.google.protobu" +
      "f.Int32Value\022,\n\007opacity\030\010 \001(\0132\033.google.p" +
      "rotobuf.FloatValue\022H\n\021radius_transition\030" +
      "\t \001(\0132-.com.tophap.mapbox_gl.proto.Trans" +
      "itionOptions\022K\n\024intensity_transition\030\n \001" +
      "(\0132-.com.tophap.mapbox_gl.proto.Transiti" +
      "onOptions\022I\n\022opacity_transition\030\013 \001(\0132-." +
      "com.tophap.mapbox_gl.proto.TransitionOpt" +
      "ions\032\320\006\n\tHillshade\022+\n\007visible\030\001 \001(\0132\032.go" +
      "ogle.protobuf.BoolValue\022-\n\010min_zoom\030\002 \001(" +
      "\0132\033.google.protobuf.FloatValue\022-\n\010max_zo" +
      "om\030\003 \001(\0132\033.google.protobuf.FloatValue\022;\n" +
      "\026illumination_direction\030\004 \001(\0132\033.google.p" +
      "rotobuf.FloatValue\022H\n\023illumination_ancho" +
      "r\030\005 \001(\0162+.com.tophap.mapbox_gl.proto.Tra" +
      "nslateAnchor\022\037\n\027has_illumination_anchor\030" +
      "\006 \001(\010\0221\n\014exaggeration\030\007 \001(\0132\033.google.pro" +
      "tobuf.FloatValue\0221\n\014shadow_color\030\010 \001(\0132\033" +
      ".google.protobuf.Int32Value\0224\n\017highlight" +
      "_color\030\t \001(\0132\033.google.protobuf.Int32Valu" +
      "e\0221\n\014accent_color\030\n \001(\0132\033.google.protobu" +
      "f.Int32Value\022N\n\027exaggeration_transition\030" +
      "\013 \001(\0132-.com.tophap.mapbox_gl.proto.Trans" +
      "itionOptions\022N\n\027shadow_color_transition\030" +
      "\014 \001(\0132-.com.tophap.mapbox_gl.proto.Trans" +
      "itionOptions\022Q\n\032highlight_color_transiti" +
      "on\030\r \001(\0132-.com.tophap.mapbox_gl.proto.Tr" +
      "ansitionOptions\022N\n\027accent_color_transiti" +
      "on\030\016 \001(\0132-.com.tophap.mapbox_gl.proto.Tr" +
      "ansitionOptions\032\322\014\n\004Line\022+\n\007visible\030\001 \001(" +
      "\0132\032.google.protobuf.BoolValue\022-\n\010min_zoo" +
      "m\030\002 \001(\0132\033.google.protobuf.FloatValue\022-\n\010" +
      "max_zoom\030\003 \001(\0132\033.google.protobuf.FloatVa" +
      "lue\0227\n\003cap\030\004 \001(\0162*.com.tophap.mapbox_gl." +
      "proto.Layer.Line.Cap\022\017\n\007has_cap\030\005 \001(\010\0229\n" +
      "\004join\030\006 \001(\0162+.com.tophap.mapbox_gl.proto" +
      ".Layer.Line.Join\022\020\n\010has_join\030\007 \001(\010\0220\n\013mi" +
      "ter_limit\030\010 \001(\0132\033.google.protobuf.FloatV" +
      "alue\0220\n\013round_limit\030\t \001(\0132\033.google.proto" +
      "buf.FloatValue\022,\n\007opacity\030\n \001(\0132\033.google" +
      ".protobuf.FloatValue\022*\n\005color\030\013 \001(\0132\033.go" +
      "ogle.protobuf.Int32Value\022\021\n\ttranslate\030\014 " +
      "\003(\002\022\025\n\rhas_translate\030\r \001(\010\022E\n\020translate_" +
      "anchor\030\016 \001(\0162+.com.tophap.mapbox_gl.prot" +
      "o.TranslateAnchor\022\034\n\024has_translate_ancho" +
      "r\030\017 \001(\010\022*\n\005width\030\020 \001(\0132\033.google.protobuf" +
      ".FloatValue\022.\n\tgap_width\030\021 \001(\0132\033.google." +
      "protobuf.FloatValue\022+\n\006offset\030\022 \001(\0132\033.go" +
      "ogle.protobuf.FloatValue\022)\n\004blur\030\023 \001(\0132\033" +
      ".google.protobuf.FloatValue\022\021\n\tdasharray" +
      "\030\024 \003(\002\022\025\n\rhas_dasharray\030\025 \001(\010\022-\n\007pattern" +
      "\030\026 \001(\0132\034.google.protobuf.StringValue\022-\n\010" +
      "gradient\030\027 \001(\0132\033.google.protobuf.Int32Va" +
      "lue\022I\n\022opacity_transition\030\030 \001(\0132-.com.to" +
      "phap.mapbox_gl.proto.TransitionOptions\022G" +
      "\n\020color_transition\030\031 \001(\0132-.com.tophap.ma" +
      "pbox_gl.proto.TransitionOptions\022K\n\024trans" +
      "late_transition\030\032 \001(\0132-.com.tophap.mapbo" +
      "x_gl.proto.TransitionOptions\022G\n\020width_tr" +
      "ansition\030\033 \001(\0132-.com.tophap.mapbox_gl.pr" +
      "oto.TransitionOptions\022K\n\024gap_width_trans" +
      "ition\030\034 \001(\0132-.com.tophap.mapbox_gl.proto" +
      ".TransitionOptions\022H\n\021offset_transition\030" +
      "\035 \001(\0132-.com.tophap.mapbox_gl.proto.Trans" +
      "itionOptions\022F\n\017blur_transition\030\036 \001(\0132-." +
      "com.tophap.mapbox_gl.proto.TransitionOpt" +
      "ions\022K\n\024dasharray_transition\030\037 \001(\0132-.com" +
      ".tophap.mapbox_gl.proto.TransitionOption" +
      "s\022I\n\022pattern_transition\030  \001(\0132-.com.toph" +
      "ap.mapbox_gl.proto.TransitionOptions\032\357$\n" +
      "\006Symbol\022+\n\007visible\030\001 \001(\0132\032.google.protob" +
      "uf.BoolValue\022-\n\010min_zoom\030\002 \001(\0132\033.google." +
      "protobuf.FloatValue\022-\n\010max_zoom\030\003 \001(\0132\033." +
      "google.protobuf.FloatValue\022L\n\020symbol_pla" +
      "cement\030\004 \001(\01622.com.tophap.mapbox_gl.prot" +
      "o.Layer.Symbol.Placement\022\034\n\024has_symbol_p" +
      "lacement\030\005 \001(\010\0223\n\016symbol_spacing\030\006 \001(\0132\033" +
      ".google.protobuf.FloatValue\0226\n\022symbol_av" +
      "oid_edges\030\007 \001(\0132\032.google.protobuf.BoolVa" +
      "lue\022G\n\016symbol_z_order\030\010 \001(\0162/.com.tophap" +
      ".mapbox_gl.proto.Layer.Symbol.ZOrder\022\032\n\022" +
      "has_symbol_z_order\030\t \001(\010\0226\n\022icon_allow_o" +
      "verlap\030\n \001(\0132\032.google.protobuf.BoolValue" +
      "\0229\n\025icon_ignore_placement\030\013 \001(\0132\032.google" +
      ".protobuf.BoolValue\0221\n\ricon_optional\030\014 \001" +
      "(\0132\032.google.protobuf.BoolValue\022S\n\027icon_r" +
      "otation_alignment\030\r \001(\01622.com.tophap.map" +
      "box_gl.proto.Layer.Symbol.Alignment\022#\n\033h" +
      "as_icon_rotation_alignment\030\016 \001(\010\022.\n\ticon" +
      "_size\030\017 \001(\0132\033.google.protobuf.FloatValue" +
      "\022G\n\ricon_text_fit\030\020 \001(\01620.com.tophap.map" +
      "box_gl.proto.Layer.Symbol.TextFit\022\031\n\021has" +
      "_icon_text_fit\030\021 \001(\010\022\035\n\025icon_text_fit_pa" +
      "dding\030\022 \003(\002\022!\n\031has_icon_text_fit_padding" +
      "\030\023 \001(\010\0220\n\nicon_image\030\024 \001(\0132\034.google.prot" +
      "obuf.StringValue\0220\n\013icon_rotate\030\025 \001(\0132\033." +
      "google.protobuf.FloatValue\0221\n\014icon_paddi" +
      "ng\030\026 \001(\0132\033.google.protobuf.FloatValue\0225\n" +
      "\021icon_keep_upright\030\027 \001(\0132\032.google.protob" +
      "uf.BoolValue\022\023\n\013icon_offset\030\030 \003(\002\022\027\n\017has" +
      "_icon_offset\030\031 \001(\010\022?\n\013icon_anchor\030\032 \001(\0162" +
      "*.com.tophap.mapbox_gl.proto.PositionAnc" +
      "hor\022\027\n\017has_icon_anchor\030\033 \001(\010\022P\n\024icon_pit" +
      "ch_alignment\030\034 \001(\01622.com.tophap.mapbox_g" +
      "l.proto.Layer.Symbol.Alignment\022 \n\030has_ic" +
      "on_pitch_alignment\030\035 \001(\010\022P\n\024text_pitch_a" +
      "lignment\030\036 \001(\01622.com.tophap.mapbox_gl.pr" +
      "oto.Layer.Symbol.Alignment\022 \n\030has_text_p" +
      "itch_alignment\030\037 \001(\010\022S\n\027text_rotation_al" +
      "ignment\030  \001(\01622.com.tophap.mapbox_gl.pro" +
      "to.Layer.Symbol.Alignment\022#\n\033has_text_ro" +
      "tation_alignment\030! \001(\010\022@\n\ntext_field\030\" \003" +
      "(\0132,.com.tophap.mapbox_gl.proto.Formatte" +
      "dSection\022\026\n\016has_text_field\030# \001(\010\022\021\n\ttext" +
      "_font\030$ \003(\t\022\025\n\rhas_text_font\030% \001(\010\022.\n\tte" +
      "xt_size\030& \001(\0132\033.google.protobuf.FloatVal" +
      "ue\0223\n\016text_max_width\030\' \001(\0132\033.google.prot" +
      "obuf.FloatValue\0225\n\020text_line_height\030( \001(" +
      "\0132\033.google.protobuf.FloatValue\0228\n\023text_l" +
      "etter_spacing\030) \001(\0132\033.google.protobuf.Fl" +
      "oatValue\022J\n\014text_justify\030* \001(\01624.com.top" +
      "hap.mapbox_gl.proto.Layer.Symbol.TextJus" +
      "tify\022\030\n\020has_text_justify\030+ \001(\010\0227\n\022text_r" +
      "adial_offset\030, \001(\0132\033.google.protobuf.Flo" +
      "atValue\022H\n\024text_variable_anchor\030- \003(\0162*." +
      "com.tophap.mapbox_gl.proto.PositionAncho" +
      "r\022 \n\030has_text_variable_anchor\030. \001(\010\022?\n\013t" +
      "ext_anchor\030/ \001(\0162*.com.tophap.mapbox_gl." +
      "proto.PositionAnchor\022\027\n\017has_text_anchor\030" +
      "0 \001(\010\0223\n\016text_max_angle\0301 \001(\0132\033.google.p" +
      "rotobuf.FloatValue\0220\n\013text_rotate\0302 \001(\0132" +
      "\033.google.protobuf.FloatValue\0221\n\014text_pad" +
      "ding\0303 \001(\0132\033.google.protobuf.FloatValue\022" +
      "5\n\021text_keep_upright\0304 \001(\0132\032.google.prot" +
      "obuf.BoolValue\022N\n\016text_transform\0305 \001(\01626" +
      ".com.tophap.mapbox_gl.proto.Layer.Symbol" +
      ".TextTransform\022\032\n\022has_text_transform\0306 \001" +
      "(\010\022\023\n\013text_offset\0307 \003(\002\022\027\n\017has_text_offs" +
      "et\0308 \001(\010\0226\n\022text_allow_overlap\0309 \001(\0132\032.g" +
      "oogle.protobuf.BoolValue\0229\n\025text_ignore_" +
      "placement\030: \001(\0132\032.google.protobuf.BoolVa" +
      "lue\0221\n\rtext_optional\030; \001(\0132\032.google.prot" +
      "obuf.BoolValue\0221\n\014icon_opacity\030< \001(\0132\033.g" +
      "oogle.protobuf.FloatValue\022/\n\nicon_color\030" +
      "= \001(\0132\033.google.protobuf.Int32Value\0224\n\017ic" +
      "on_halo_color\030> \001(\0132\033.google.protobuf.In" +
      "t32Value\0224\n\017icon_halo_width\030? \001(\0132\033.goog" +
      "le.protobuf.FloatValue\0223\n\016icon_halo_blur" +
      "\030@ \001(\0132\033.google.protobuf.FloatValue\022\026\n\016i" +
      "con_translate\030A \003(\002\022\032\n\022has_icon_translat" +
      "e\030B \001(\010\022J\n\025icon_translate_anchor\030C \001(\0162+" +
      ".com.tophap.mapbox_gl.proto.TranslateAnc" +
      "hor\022!\n\031has_icon_translate_anchor\030D \001(\010\0221" +
      "\n\014text_opacity\030E \001(\0132\033.google.protobuf.F" +
      "loatValue\022/\n\ntext_color\030F \001(\0132\033.google.p" +
      "rotobuf.Int32Value\0224\n\017text_halo_color\030G " +
      "\001(\0132\033.google.protobuf.Int32Value\0224\n\017text" +
      "_halo_width\030H \001(\0132\033.google.protobuf.Floa" +
      "tValue\0223\n\016text_halo_blur\030I \001(\0132\033.google." +
      "protobuf.FloatValue\022\026\n\016text_translate\030J " +
      "\003(\002\022\032\n\022has_text_translate\030K \001(\010\022J\n\025text_" +
      "translate_anchor\030L \001(\0162+.com.tophap.mapb" +
      "ox_gl.proto.TranslateAnchor\022!\n\031has_text_" +
      "translate_anchor\030M \001(\010\022N\n\027icon_opacity_t" +
      "ransition\030N \001(\0132-.com.tophap.mapbox_gl.p" +
      "roto.TransitionOptions\022L\n\025icon_color_tra" +
      "nsition\030O \001(\0132-.com.tophap.mapbox_gl.pro" +
      "to.TransitionOptions\022Q\n\032icon_halo_color_" +
      "transition\030P \001(\0132-.com.tophap.mapbox_gl." +
      "proto.TransitionOptions\022Q\n\032icon_halo_wid" +
      "th_transition\030Q \001(\0132-.com.tophap.mapbox_" +
      "gl.proto.TransitionOptions\022P\n\031icon_halo_" +
      "blur_transition\030R \001(\0132-.com.tophap.mapbo" +
      "x_gl.proto.TransitionOptions\022P\n\031icon_tra" +
      "nslate_transition\030S \001(\0132-.com.tophap.map" +
      "box_gl.proto.TransitionOptions\022N\n\027text_o" +
      "pacity_transition\030T \001(\0132-.com.tophap.map" +
      "box_gl.proto.TransitionOptions\022L\n\025text_c" +
      "olor_transition\030U \001(\0132-.com.tophap.mapbo" +
      "x_gl.proto.TransitionOptions\022Q\n\032text_hal" +
      "o_color_transition\030V \001(\0132-.com.tophap.ma" +
      "pbox_gl.proto.TransitionOptions\022Q\n\032text_" +
      "halo_width_transition\030W \001(\0132-.com.tophap" +
      ".mapbox_gl.proto.TransitionOptions\022P\n\031te" +
      "xt_halo_blur_transition\030X \001(\0132-.com.toph" +
      "ap.mapbox_gl.proto.TransitionOptions\022P\n\031" +
      "text_translate_transition\030Y \001(\0132-.com.to" +
      "phap.mapbox_gl.proto.TransitionOptionsB\006" +
      "\n\004typeB.\n\032com.tophap.mapbox_gl.protoB\020La" +
      "yersOperationsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.tophap.mapbox_gl.proto.MapboxUtil.getDescriptor(),
          com.tophap.mapbox_gl.proto.Layers.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
        }, assigner);
    internal_static_com_tophap_mapbox_gl_proto_Operations_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_tophap_mapbox_gl_proto_Operations_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_descriptor,
        new java.lang.String[] { });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Add_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_descriptor.getNestedTypes().get(0);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Add_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Add_descriptor,
        new java.lang.String[] { "Layer", "BelowId", "AboveId", "Index", "Position", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_descriptor.getNestedTypes().get(1);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor,
        new java.lang.String[] { "Id", "BackgroundLayer", "CircleLayer", "FillLayer", "FillExtrusionLayer", "LineLayer", "SymbolLayer", "HillshadeLayer", "HeatmapLayer", "Type", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor.getNestedTypes().get(0);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Background_descriptor,
        new java.lang.String[] { "Visible", "MinZoom", "MaxZoom", "Color", "Pattern", "Opacity", "ColorTransition", "PatternTransition", "OpacityTransition", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor.getNestedTypes().get(1);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Circle_descriptor,
        new java.lang.String[] { "Visible", "MinZoom", "MaxZoom", "Radius", "Color", "Blur", "Opacity", "Translate", "HasTranslate", "TranslateAnchor", "HasTranslateAnchor", "PitchScale", "HasPitchScale", "PitchAlignment", "HasPitchAlignment", "StrokeWidth", "StrokeColor", "StrokeOpacity", "RadiusTransition", "ColorTransition", "BlurTransition", "OpacityTransition", "TranslateTransition", "StrokeWidthTransition", "StrokeColorTransition", "StrokeOpacityTransition", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor.getNestedTypes().get(2);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_FillExtrusion_descriptor,
        new java.lang.String[] { "Visible", "MinZoom", "MaxZoom", "Opacity", "Color", "Translate", "HasTranslate", "TranslateAnchor", "HasTranslateAnchor", "Pattern", "Height", "Base", "VerticalGradient", "OpacityTransition", "ColorTransition", "TranslateTransition", "PatternTransition", "HeightTransition", "BaseTransition", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor.getNestedTypes().get(3);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Fill_descriptor,
        new java.lang.String[] { "Visible", "MinZoom", "MaxZoom", "Antialias", "Opacity", "Color", "OutlineColor", "Translate", "HasTranslate", "TranslateAnchor", "HasTranslateAnchor", "Pattern", "OpacityTransition", "ColorTransition", "OutlineColorTransition", "TranslateTransition", "PatternTransition", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor.getNestedTypes().get(4);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Heatmap_descriptor,
        new java.lang.String[] { "Visible", "MinZoom", "MaxZoom", "Radius", "Weight", "Intensity", "Color", "Opacity", "RadiusTransition", "IntensityTransition", "OpacityTransition", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor.getNestedTypes().get(5);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Hillshade_descriptor,
        new java.lang.String[] { "Visible", "MinZoom", "MaxZoom", "IlluminationDirection", "IlluminationAnchor", "HasIlluminationAnchor", "Exaggeration", "ShadowColor", "HighlightColor", "AccentColor", "ExaggerationTransition", "ShadowColorTransition", "HighlightColorTransition", "AccentColorTransition", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor.getNestedTypes().get(6);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Line_descriptor,
        new java.lang.String[] { "Visible", "MinZoom", "MaxZoom", "Cap", "HasCap", "Join", "HasJoin", "MiterLimit", "RoundLimit", "Opacity", "Color", "Translate", "HasTranslate", "TranslateAnchor", "HasTranslateAnchor", "Width", "GapWidth", "Offset", "Blur", "Dasharray", "HasDasharray", "Pattern", "Gradient", "OpacityTransition", "ColorTransition", "TranslateTransition", "WidthTransition", "GapWidthTransition", "OffsetTransition", "BlurTransition", "DasharrayTransition", "PatternTransition", });
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_descriptor =
      internal_static_com_tophap_mapbox_gl_proto_Operations_Update_descriptor.getNestedTypes().get(7);
    internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_tophap_mapbox_gl_proto_Operations_Update_Symbol_descriptor,
        new java.lang.String[] { "Visible", "MinZoom", "MaxZoom", "SymbolPlacement", "HasSymbolPlacement", "SymbolSpacing", "SymbolAvoidEdges", "SymbolZOrder", "HasSymbolZOrder", "IconAllowOverlap", "IconIgnorePlacement", "IconOptional", "IconRotationAlignment", "HasIconRotationAlignment", "IconSize", "IconTextFit", "HasIconTextFit", "IconTextFitPadding", "HasIconTextFitPadding", "IconImage", "IconRotate", "IconPadding", "IconKeepUpright", "IconOffset", "HasIconOffset", "IconAnchor", "HasIconAnchor", "IconPitchAlignment", "HasIconPitchAlignment", "TextPitchAlignment", "HasTextPitchAlignment", "TextRotationAlignment", "HasTextRotationAlignment", "TextField", "HasTextField", "TextFont", "HasTextFont", "TextSize", "TextMaxWidth", "TextLineHeight", "TextLetterSpacing", "TextJustify", "HasTextJustify", "TextRadialOffset", "TextVariableAnchor", "HasTextVariableAnchor", "TextAnchor", "HasTextAnchor", "TextMaxAngle", "TextRotate", "TextPadding", "TextKeepUpright", "TextTransform", "HasTextTransform", "TextOffset", "HasTextOffset", "TextAllowOverlap", "TextIgnorePlacement", "TextOptional", "IconOpacity", "IconColor", "IconHaloColor", "IconHaloWidth", "IconHaloBlur", "IconTranslate", "HasIconTranslate", "IconTranslateAnchor", "HasIconTranslateAnchor", "TextOpacity", "TextColor", "TextHaloColor", "TextHaloWidth", "TextHaloBlur", "TextTranslate", "HasTextTranslate", "TextTranslateAnchor", "HasTextTranslateAnchor", "IconOpacityTransition", "IconColorTransition", "IconHaloColorTransition", "IconHaloWidthTransition", "IconHaloBlurTransition", "IconTranslateTransition", "TextOpacityTransition", "TextColorTransition", "TextHaloColorTransition", "TextHaloWidthTransition", "TextHaloBlurTransition", "TextTranslateTransition", });
    com.tophap.mapbox_gl.proto.MapboxUtil.getDescriptor();
    com.tophap.mapbox_gl.proto.Layers.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
